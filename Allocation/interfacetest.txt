*** Settings ***
Suite Setup
Suite Teardown
Library           String
Resource          page/navigation.txt
Library           AutoItLibrary
Resource          page/stylebank.txt
Resource          page/downloadwindow.txt
Resource          page/menu.txt
Library           MyHtmlUtil
Resource          page/companyProfile.txt
Resource          page/customerDirectory.txt
Library           Selenium2Library
Resource          page/AssortmentMix.txt
Resource          Setting/environment.txt
Resource          page/BrandProfile.txt
Resource          page/standard7thpage.txt
Resource          page/DailyTasks.txt
Resource          page/OrderBreakdown.txt
Resource          page/ZKCommon.txt
Resource          Setting/custom_keyword.txt
Resource          page/BudgetBreakdown.txt
Library           MyUtil

*** Variables ***
${checkbox_selected_path}    //input[@type='checkbox' and @checked]
${radio_selected_path}    //input[@type='radio' and @checked]
${input_path}     //input[@type='text' and @value and not (@value='')]
${dropdown_selected_path}    //select[not (contains(@style,'display:none')) and not (contains(@style,'display: none;'))]
${input_jquery}    var txt = ""; $(":text[value !='']").each(function(){txt+=$(this).attr("value")+","}); return txt    # ee();function ee(){var txt = ""; $(":text[value !='']").each(function(){txt+=$(this).attr("value")}); return txt}
${checkbox_checked_@name_jquery}    var txt = ""; $(":checkbox:checked").each(function(){txt+=$(this).attr("name")+","}); return txt
${radio_checked_jquery}    var txt = ""; $(":radio:checked").each(function(){txt+=$(this).attr("value")+","}); return txt
${dropdown_selected_jquery}    var txt = ""; $("option[selected]").each(function(){txt+=$(this).text()+","}); return txt
${checkbox_checked_@value_jquery}    var txt = ""; $(":checkbox:checked").each(function(){txt+=$(this).attr("value")+","}); return txt
${page_text_jquery}    var txt =$("#maincontent #wrapper").children().last().text();$("#maincontent #wrapper").children().last().find("script").each(function(){ txt = txt.replace($(this).text(),"")}); return(txt)    # var txt =$("body").text(); $("body").find("script").each(function(){ txt = txt.replace($(this).text(),"")}); return(txt)
${page_html_jquery}    var uurl=location.href;$("#maincontent #wrapper").children().last().find("a").each(function(){$(this).attr("href","")});$("#maincontent #wrapper").children().last().find("input[type='hidden']").each(function(){$(this).attr("value","")});var txt =$("#maincontent #wrapper").children().last().html();$("#maincontent #wrapper").children().last().find("script").each(function(){ txt = txt.replace($(this).html(),"")});location.href=uurl;return(txt)    # static
${option_expand_jquery}    $($(".filtertablerow").last()).find("div.multiCwrap div").last().attr("class","multiC on");
${option_collapse_jquery}    $($(".filtertablerow").last()).find("div.multiCwrap div").last().attr("class","multiC");
${option_getValues}    $("#filtertable tr.filtertablerow div.multiCwrap").each(function() {varchanged = 'n';thisis = $(this);getValues()});
${page_html_nochange_jquery}    var txt =$("#maincontent #wrapper").children().last().html(); return(txt)    # No Change
${page_html_noreload_jquery}    $("#maincontent #wrapper").children().last().find("a").each(function(){$(this).attr("href","")});$("#maincontent #wrapper").children().last().find("input[type='hidden']").each(function(){$(this).attr("value","")});var txt =$("#maincontent #wrapper").children().last().html();$("#maincontent #wrapper").children().last().find("script").each(function(){ txt = txt.replace($(this).html(),"")}); return(txt)    #No Reload
${AssortmentMix_Sheet_jquery}    $(".zsdata").attr("style","width: 1881px; height: 33050px; padding-left: 1px; padding-top: 2px;");$('.zsblock div').find('div:hidden').each(function(){this.remove()}); $('.zstopblock div').find('div:hidden').each(function(){this.remove()});$('#zkcontainer').find("*").each(function(){$(this).removeAttr("id")});var txt=$('#zkcontainer').html();location.reload(); return txt    # $('#zkcontainer').find('div:hidden').each(function(){this.remove()}); var txt=$('#zkcontainer:visible').html();location.reload(); return txt
${page_tilte_jquery}    var txt="";$('big').each(function(){txt+=$(this).text()+" "});return (txt);
${ZK_scrollInfo_jquery}    var txt=($(".zsscrollinfo").text());return(txt)
${ZK_optionPage_jquery}    return $('#zkcontainer').html()    # $('#zkcontainer').find('*').each(function(){$(this).removeAttr("id")});var txt = $('#zkcontainer').html();location.reload(); return txt
${DailyTask_Sheet_jquery}    $('.zsblock div').find('div:hidden').each(function(){this.remove()}); $('.zstopblock div').find('div:hidden').each(function(){this.remove()});var txt=$('#zkcontainer').html(); return txt    # $(".zsdata").attr("style","width: 1881px; height: 33050px; padding-left: 1px; padding-top: 2px;");$('.zsblock div').find('div:hidden').each(function(){this.remove()}); $('.zstopblock div').find('div:hidden').each(function(){this.remove()});var txt=$('#zkcontainer').html(); return txt
${DailyTask_sheetTop_jquery}    var txt=$('.zstop ').prop("outerHTML"); return txt
${DailyTask_appendSheet_jquery}    $(".zsdata").attr("style","width: 1881px; height: 1050px; padding-left: 1px; padding-top: 2px;");$('.zsblock div').find('div:hidden').each(function(){this.remove()}); $('.zstopblock div').find('div:hidden').each(function(){this.remove()});$('.zsdata').find("*").each(function(){$(this).removeAttr("id")});var txt=$('.zsdata').html(); return txt
${ZK_sheet_deleteHiddenNodes_jquery}    $("div.zsblock").find('div:hidden').each(function(){this.remove()});
${DailyTask_sheetTitle_jquery}    var txt=$('.zstop .zstopblock').html(); return txt
${ZK_titleRowsCount_jquery}    return $(".zstopblock").children().size();
${ZK_tabNames_jquery}    var tabList="";$('.z-tabs-content li').each(function(){tabList+=$(this).text()+","});return(tabList);

*** Test Cases ***
AssortmentMix
    [Tags]    AM
    ${user_count}    get users count    ${users_setting}    ${AssortmentMix_setting_tab}
    @{envs}    get environment setting    ${users_setting}    ${AssortmentMix_setting_tab}
    ${prod}    set variable    @{envs}[0]
    ${stage}    set variable    @{envs}[1]
    : FOR    ${user_num}    IN RANGE    0    ${user_count}
    \    ${userName}    get user    ${users_setting}    ${AssortmentMix_setting_tab}    ${user_num}
    \    @{user_criteria}    get user criteria    ${users_setting}    ${AssortmentMix_setting_tab}    ${user_num}    ${AssortmentMix_criteria_colNumber}
    \    ${user_criteria_count}    get length    '@{user_criteria}'
    \    ${prod_browser}    enterModel    @{envs}[0]    Assortment Mix    ${userName}    ${browser_profile_1}
    \    wait until page contains    Assortment Mix    20
    \    ${prod_AM_criteriaPage}    execute javascript    ${page_html_jquery}
    \    #    ${removeFilter_count}    get matching xpath count    ${AssortmentMix_criteria_removeFilter_count}
    \    #    run keyword if    ${removeFilter_count}>1    removeFilters    ${AssortmentMix_criteria_Button_removeFilter_rowPlaceHold}    ${removeFilter_count}
    \    ...    #${AssortmentMix_criteria_Dropdown_filterHierarchy1}
    \    #    run keyword if    ${removeFilter_count}==1    Select From List by index    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}    0
    \    #    run keyword if    ${user_criteria_count} >0    selectCustomCriteria    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}    ${AssortmentMix_criteria_Option_filterHierarachy1}
    \    ...    #${AssortmentMix_criteria_Options_filterHierarachy1}    ${AssortmentMix_criteria_filterHierarachy1_optionCount}    Xpath=${AssortmentMix_criteria_filterHierarachy1_rowCount}//input[@title='Add Filter']    ${AssortmentMix_criteria_filterHierarachy1_rowCount}    @{user_criteria}
    \    #    sleep    3S
    \    click element    ${AssortmentMix_criteria_top_submit}
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    20
    \    Wait Until Page Does Not Contain    initializing...    120
    \    #    ${prod_AM}    execute javascript    ${AssortmentMix_Sheet_jquery}
    \    ${prod_AM}    execute javascript    ${page_html_nochange_jquery}
    \    sleep    20S
    \    #    click element    Xpath=//li[@title='Target Doors']/a/img
    \    #    Wait Until Page Does Not Contain    Processing...    30
    \    #    sleep    20S
    \    #    click element    Xpath=//div[text()='AssortmentMix']
    \    #    Wait Until Page Does Not Contain    Processing...    30
    \    #    sleep    20S
    \    ${temp}    get text    Xpath=//div[@class='zsblock']/div[4]/div[5]
    \    select cell    Xpath=//div[@class='zsblock']/div[4]/div[5]/div/div[2]
    \    sleep    5S
    \    press key    Xpath=//div[@class='zsscroll']    \\12    #    \\13
    \    press key    Xpath=//div[@class='zsscroll']    \\12
    \    #    press key    Xpath=//div[@class='zsblock']/div[4]/div[5]/div/div[2]    \\13
    \    sleep    30S
    \    ${styleresult}    get element attribute    Xpath=//div[@class='zsscroll']//div[@class='zsselect']@style
    \    #    press key    Xpath=//div[@class='zsblock']    \\12
    \    #    click element    ${AssortmentMix_Button_TargetDoors}
    \    #    Wait Until Page Does Not Contain    Processing...    120
    \    #    ${prod_AM_targetDoorPage}    execute javascript    ${page_html_nochange_jquery}
    \    #    sleep    10S
    \    #    click element    ${AssortmentMix_Button_Options}
    \    #    Wait Until Page Contains    Select Attribute Columns    120
    \    #    ${prod_AM_optionsPage}    execute javascript    ${page_html_nochange_jquery}
    \    #    sleep    3S
    \    #    click element    ${AssortmentMix_Button_Options}
    \    #    Wait Until Page Does Not Contain    Processing...    120
    \    #    sleep    3S
    \    #    click element    ${AssortmentMix_Button_Excel}
    \    #    Wait Until Page Does Not Contain    Processing...    120
    \    #    ${prod_AM_downloadFile}    handleSaveFileWindow    ${prod_download_dir}    \AssortmentMix_${userName}_${user_num}.xlsx
    \    #    sleep    3S
    \    #    click element    ${AssortmentMix_tab_AssortmentMix}
    \    #    Wait Until Page Does Not Contain    Processing...    120
    \    #    sleep    10S
    \    #    click element    ${AssortmentMix_Button_Close}
    \    #    Wait Until Page Contains    Do you want to save the changes you made?    120
    \    #    click element    ${AssormentMix_popPanel_button_no}
    \    #    ${stage_browser}    enterModel    @{envs}[1]    Assortment Mix    ${userName}
    \    ...    #${browser_profile_1}
    \    #    wait until page contains    Assortment Mix    20
    \    #    ${stage_AM_criteriaPage}    execute javascript    ${page_html_jquery}
    \    #    ${removeFilter_count}    get matching xpath count    ${AssortmentMix_criteria_removeFilter_count}
    \    #    run keyword if    ${removeFilter_count}>1    removeFilters    ${AssortmentMix_criteria_Button_removeFilter_rowPlaceHold}    ${removeFilter_count}
    \    ...    #${AssortmentMix_criteria_Dropdown_filterHierarchy1}
    \    #    run keyword if    ${removeFilter_count}==1    Select From List by index    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}    0
    \    #    run keyword if    ${user_criteria_count} >0    selectCustomCriteria    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}    ${AssortmentMix_criteria_Option_filterHierarachy1}
    \    ...    #${AssortmentMix_criteria_Options_filterHierarachy1}    ${AssortmentMix_criteria_filterHierarachy1_optionCount}    Xpath=${AssortmentMix_criteria_filterHierarachy1_rowCount}//input[@title='Add Filter']    ${AssortmentMix_criteria_filterHierarachy1_rowCount}    @{user_criteria}
    \    #    sleep    3S
    \    #    click element    ${AssortmentMix_criteria_top_submit}
    \    #    sleep    3S
    \    #    Wait Until Page Does Not Contain    Processing...    20
    \    #    Wait Until Page Does Not Contain    initializing...    120
    \    #    #    ${prod_AM}    execute javascript    ${AssortmentMix_Sheet_jquery}
    \    #    ${stage_AM}    execute javascript    ${page_html_nochange_jquery}
    \    #    Wait Until Page Contains element    ${AssortmentMix_Button_TargetDoors}    20
    \    #    click element    ${AssortmentMix_Button_TargetDoors}
    \    #    Wait Until Page Does Not Contain    Processing...    120
    \    #    ${stage_AM_targetDoorPage}    execute javascript    ${page_html_nochange_jquery}
    \    #    #    Wait Until Page Contains element    ${AssortmentMix_Button_Options}    20
    \    #    sleep    20S
    \    #    click element    ${AssortmentMix_Button_Options}
    \    #    Wait Until Page Contains    Select Attribute Columns    120
    \    #    ${stage_AM_optionsPage}    execute javascript    ${page_html_nochange_jquery}
    \    #    Wait Until Page Contains element    ${AssortmentMix_Button_Options}    20
    \    #    click element    ${AssortmentMix_Button_Options}
    \    #    Wait Until Page Does Not Contain    Processing...    120
    \    #    Wait Until Page Contains element    ${AssortmentMix_Button_Excel}    20
    \    #    click element    ${AssortmentMix_Button_Excel}
    \    #    Wait Until Page Does Not Contain    Processing...    120
    \    #    ${stage_AM_downloadFile}    handleSaveFileWindow    ${stage_download_dir}    \AssortmentMix_${userName}_${user_num}.xlsx
    \    #    Wait Until Page Contains element    ${AssortmentMix_tab_AssortmentMix}    20
    \    #    click element    ${AssortmentMix_tab_AssortmentMix}
    \    #    Wait Until Page Does Not Contain    Processing...    120
    \    #    sleep    20S
    \    #    click element    ${AssortmentMix_Button_Close}
    \    #    Wait Until Page Contains    Do you want to save the changes you made?    120
    \    #    click element    ${AssormentMix_popPanel_button_no}
    \    #    ${AssortmentMix_criteria_diff}    diff text    ${stage_AM_criteriaPage}    ${prod_AM_criteriaPage}
    \    #    ${AssortmentMix_diff}    diff text    ${stage_AM}    ${prod_AM}
    \    #    ${AssortmentMix_targetDoors_diff}    diff text    ${stage_AM_targetDoorPage}    ${prod_AM_targetDoorPage}
    \    #    ${AssortmentMix_options_diff}    diff text    ${stage_AM_optionsPage}    ${prod_AM_optionsPage}
    \    #    Run Keyword And Continue On Failure    run keyword if    ${AssortmentMix_criteria_diff}    fail    ${userName}_${user_num} Assortments Mix Criteria Diff
    \    #    run keyword if    ${AssortmentMix_criteria_diff}    write html file with inner html    ${stage_AM_criteriaPage}    ${prod_AM_criteriaPage}
    \    ...    #${diff_dir}\\${userName}_${User_num}_Assortments Mix Criteria diff.html    V
    \    #    Run Keyword And Continue On Failure    run keyword if    ${AssortmentMix_diff}    fail    ${userName}_${user_num} Assortments Mix Diff
    \    #    run keyword if    ${AssortmentMix_diff}    write html file with inner html    ${stage_AM}    ${prod_AM}
    \    ...    #${diff_dir}\\${userName}_${User_num}_Assortments Mix diff.html    H
    \    #    Run Keyword And Continue On Failure    run keyword if    ${AssortmentMix_targetDoors_diff}    fail    ${userName}_${user_num} Assortments Mix Targer Doors Diff
    \    #    run keyword if    ${AssortmentMix_targetDoors_diff}    write html file with inner html    ${stage_AM_targetDoorPage}    ${prod_AM_targetDoorPage}
    \    ...    #${diff_dir}\\${userName}_${User_num}_Assortments Mix Targer Doors diff.html    H
    \    #    Run Keyword And Continue On Failure    run keyword if    ${AssortmentMix_options_diff}    fail    ${userName}_${user_num} Assortments Mix Options Diff
    \    #    run keyword if    ${AssortmentMix_options_diff}    write html file with inner html    ${stage_AM_optionsPage}    ${prod_AM_optionsPage}
    \    ...    #${diff_dir}\\${userName}_${User_num}_Assortments Mix Options diff.html    V
    \    #    Run Keyword And Continue On Failure    compare excel    ${stage_AM_downloadFile}    ${prod_AM_downloadFile}    ${diff_dir}\\${userName}_${user_num}_Assortment Mix Download_diff.txt
    \    #    logout close browser    ${prod_browser}
    #    close all browsers

compareDailyTasks
    [Tags]    DT-test
    ${user_count}    get users count    ${users_setting}    ${DailyTasks_setting_tab}
    @{envs}    get environment setting    ${users_setting}    ${DailyTasks_setting_tab}
    ${prod}    set variable    @{envs}[0]
    ${stage}    set variable    @{envs}[1]
    : FOR    ${user_num}    IN RANGE    0    ${user_count}
    \    ${userName}    get user    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}
    \    @{user_criteria}    get user criteria    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_criteria_colNumber}
    \    ${user_criteria_count}    get length    '@{user_criteria}'
    \    ${DT_taskType}    get cell value    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_taskType_colNumber}
    \    ${DT_screenType}    get cell value    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_screenType_colNumber}
    \    ${DT_status}    get cell value    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_status_colNumber}
    \    ${DT_orderCity}    get cell value    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_orderCity_colNumber}
    \    ${DT_fromDate}    get cell value    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_fromDate_colNumber}
    \    ${DT_toDate}    get cell value    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_toDate_colNumber}
    \    ${DT_timeRange}    get cell value    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_timeRange_colNumber}
    \    ${DT_visibleFlag}    get cell value    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_visibleFlag_colNumber}
    \    ${prod_browser}    enterModel    @{envs}[0]    Daily Tasks    ${userName}    ${browser_profile_1}
    \    wait until element contains    ${mainPage}    DailyTask    20
    \    ${prod_DT_criteriaPage_original}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${prod_DT_criteriaPage_original}
    \    run keyword if    '${DT_taskType}'    select from list by label    ${DailyTasks_criteria_Dropdown_TaskType}    ${DT_taskType}
    \    run keyword if    '${DT_screenType}'    select from list by label    ${DailyTasks_criteria_Dropdown_ScreenType}    ${DT_screenType}
    \    run keyword if    '${DT_status}'    select from list by label    ${DailyTasks_criteria_Dropdown_Status}    ${DT_status}
    \    run keyword if    '${DT_orderCity}'    select from list by label    ${DailyTasks_criteria_Dropdown_OrderCity}    ${DT_orderCity}
    \    run keyword if    '${DT_fromDate}'    input text    ${DailyTasks_criteria_Text_FromDate}    ${DT_fromDate}
    \    run keyword if    '${DT_toDate}'    input text    ${DailyTasks_criteria_Text_ToDate}    ${DT_toDate}
    \    run keyword if    '${DT_timeRange}' == 'In DC Date'    click element    ${DailyTasks_criteria_Radio_InDCDate}
    \    run keyword if    '${DT_timeRange}' == 'Shop Date'    click element    ${DailyTasks_criteria_Radio_ShopDate}
    \    ${removeFilter_count}    get matching xpath count    ${DailyTasks_criteria_removeFilter_count}
    \    run keyword if    ${removeFilter_count}>1    removeFilters    ${DailyTasks_criteria_Button_removeFilter_rowPlaceHold}    ${removeFilter_count}    ${DailyTasks_criteria_Dropdown_filterHierarchy1}
    \    run keyword if    ${removeFilter_count}==1    Select From List by index    ${DailyTasks_criteria_Dropdown_filterHierarchy1}    0
    \    run keyword if    ${user_criteria_count} >0    selectCustomCriteria    ${DailyTasks_criteria_Dropdown_filterHierarchy1}    ${DailyTasks_criteria_Option_filterHierarachy1}    ${DailyTasks_criteria_Options_filterHierarachy1}
    \    ...    ${DailyTasks_criteria_filterHierarachy1_optionCount}    Xpath=${DailyTasks_criteria_filterHierarachy1_rowCount}//input[@title='Add Filter']    ${DailyTasks_criteria_filterHierarachy1_rowCount}    @{user_criteria}
    \    sleep    3S
    \    ${prod_DT_criteriaPage}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${prod_DT_criteriaPage}
    \    click element    ${DailyTasks_criteria_top_submit}
    \    sleep    3S
    \    #    Wait Until Page Does Not Contain    Processing...    30
    \    #    Wait Until Page Does Not Contain    Processing...    120
    \    Wait Until Page Contains    ${DT_taskType}    120
    \    sleep    5S
    \    ${prod_downloadCount_path}    replace string    ${DailyTasks_Button_Excel}    Xpath=    \    1
    \    ${prod_downloadCount}    get matching xpath count    ${prod_downloadCount_path}
    \    run keyword if    ${prod_downloadCount} > 0    click element    ${DailyTasks_Button_Excel}
    \    ${prod_DT_excel}    run keyword if    ${prod_downloadCount} > 0    handleSaveFileWindow    ${prod_download_dir}    DT_${userName}_${user_num}.xlsx
    \    ${prod_DT_excelVisible}    run keyword if    '${DT_visibleFlag}' == '1'    copy ZK visible XLSX    ${prod_DT_excel}
    \    ${prod_tabsCount}    get matching xpath count    ${DailyTasks_tabsCount}
    \    ${stage_browser}    enterModel    @{envs}[1]    Daily Tasks    awuhan    ${browser_profile_2}
    \    wait until element contains    ${mainPage}    DailyTask    20
    \    ${stage_DT_criteriaPage_original}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${stage_DT_criteriaPage_original}
    \    run keyword if    '${DT_taskType}'    select from list by label    ${DailyTasks_criteria_Dropdown_TaskType}    ${DT_taskType}
    \    run keyword if    '${DT_screenType}'    select from list by label    ${DailyTasks_criteria_Dropdown_ScreenType}    ${DT_screenType}
    \    run keyword if    '${DT_status}'    select from list by label    ${DailyTasks_criteria_Dropdown_Status}    ${DT_status}
    \    run keyword if    '${DT_orderCity}'    select from list by label    ${DailyTasks_criteria_Dropdown_OrderCity}    ${DT_orderCity}
    \    run keyword if    '${DT_fromDate}'    input text    ${DailyTasks_criteria_Text_FromDate}    ${DT_fromDate}
    \    run keyword if    '${DT_toDate}'    input text    ${DailyTasks_criteria_Text_ToDate}    ${DT_toDate}
    \    run keyword if    '${DT_timeRange}' == 'In DC Date'    click element    ${DailyTasks_criteria_Radio_InDCDate}
    \    run keyword if    '${DT_timeRange}' == 'Shop Date'    click element    ${DailyTasks_criteria_Radio_ShopDate}
    \    ${removeFilter_count}    get matching xpath count    ${DailyTasks_criteria_removeFilter_count}
    \    run keyword if    ${removeFilter_count}>1    removeFilters    ${DailyTasks_criteria_Button_removeFilter_rowPlaceHold}    ${removeFilter_count}    ${DailyTasks_criteria_Dropdown_filterHierarchy1}
    \    run keyword if    ${removeFilter_count}==1    Select From List by index    ${DailyTasks_criteria_Dropdown_filterHierarchy1}    0
    \    run keyword if    ${user_criteria_count} >0    selectCustomCriteria    ${DailyTasks_criteria_Dropdown_filterHierarchy1}    ${DailyTasks_criteria_Option_filterHierarachy1}    ${DailyTasks_criteria_Options_filterHierarachy1}
    \    ...    ${DailyTasks_criteria_filterHierarachy1_optionCount}    Xpath=${DailyTasks_criteria_filterHierarachy1_rowCount}//input[@title='Add Filter']    ${DailyTasks_criteria_filterHierarachy1_rowCount}    @{user_criteria}
    \    sleep    3S
    \    ${stage_DT_criteriaPage}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${stage_DT_criteriaPage}
    \    click element    ${DailyTasks_criteria_top_submit}
    \    sleep    3S
    \    #    Wait Until Page Does Not Contain    Processing...    20
    \    #    Wait Until Page Does Not Contain    initializing...    120
    \    Wait Until Page Contains    ${DT_taskType}    120
    \    sleep    5S
    \    ${stage_downloadCount_path}    replace string    ${DailyTasks_Button_Excel}    Xpath=    \    1
    \    ${stage_downloadCount}    get matching xpath count    ${stage_downloadCount_path}
    \    ${stage_tabsCount}    get matching xpath count    ${DailyTasks_tabsCount}
    \    ${DT_criteriaPageOriginal_diff}    diff text    ${prod_DT_criteriaPage_original}    ${stage_DT_criteriaPage_original}
    \    ${DT_criteriaPage_diff}    diff text    ${prod_DT_criteriaPage}    ${stage_DT_criteriaPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${DT_criteriaPage_diff}    fail    ${userName}_${user_num} DailyTask criteriaPage Diff !
    \    run keyword if    ${DT_criteriaPage_diff}    write html file with inner html    ${stage_DT_criteriaPage}    ${prod_DT_criteriaPage}    ${diff_dir}\\${userName}_${User_num}_DT_criteriaPage_diff.html
    \    ...    V
    \    Run Keyword And Continue On Failure    run keyword if    ${DT_criteriaPageOriginal_diff}    fail    ${userName}_${user_num} dailyTask criteriaPageOriginal Diff !
    \    run keyword if    ${DT_criteriaPageOriginal_diff}    write html file with inner html    ${stage_DT_criteriaPage_original}    ${prod_DT_criteriaPage_original}    ${diff_dir}\\${userName}_${User_num}_DT_criteriaPageOriginal_diff.html
    \    ...    V
    \    Run Keyword And Continue On Failure    run keyword if    ${stage_tabsCount} != ${prod_tabsCount}    fail    ${userName}_${user_num} DailyTask TabsCount Diff !
    \    run keyword if    ${stage_downloadCount} == 0 or ${prod_downloadCount} == 0    log    ${userName}_${user_num} DailyTask May Be Blank!
    \    continue for loop if    ${stage_downloadCount} == 0 or ${prod_downloadCount} == 0
    \    click element    ${DailyTasks_Button_Excel}
    \    ${stage_DT_excel}    handleSaveFileWindow    ${stage_download_dir}    DT_${userName}_${user_num}.xlsx
    \    ${stage_DT_excelVisible}    run keyword if    '${DT_visibleFlag}' == '1'    copy ZK visible XLSX    ${stage_DT_excel}
    \    Run Keyword And Continue On Failure    run keyword if    '${DT_visibleFlag}' == '1'    compare XLSX    ${stage_DT_excelVisible}    ${prod_DT_excelVisible}
    \    ...    ${diff_dir}\\${userName}_${user_num}_DT_downloadVisible_Diff.txt
    \    ...    ELSE    compare XLSX    ${stage_DT_excel}    ${prod_DT_excel}    ${diff_dir}\\${userName}_${user_num}_DT_download_Diff.txt
    \    compareDTTabs    ${prod_browser}    ${stage_browser}    ${userName}    ${user_num}    ${stage_tabsCount}
    \    ...    ${DailyTasks_tabsCount}    ${DailyTasks_freezePanel_position}    ${ZK_sheet_deleteHiddenNodes_jquery}    DailyTask
    \    logout close browser    ${prod_browser}
    \    logout close browser    ${stage_browser}
    close all browsers

compareBrandProfile
    [Tags]    BP-test
    ${user_count}    get users count    ${users_setting}    ${BrandProfile_setting_tab}
    @{envs}    get environment setting    ${users_setting}    ${BrandProfile_setting_tab}
    ${prod}    set variable    @{envs}[0]
    ${stage}    set variable    @{envs}[1]
    : FOR    ${user_num}    IN RANGE    0    ${user_count}
    \    ${userName}    get user    ${users_setting}    ${BrandProfile_setting_tab}    ${user_num}
    \    ${prod_browser}    enterModel    @{envs}[0]    Brand Profile    ${userName}    ${browser_profile_1}
    \    wait until element contains    ${mainPage}    BrandProfile    20
    \    wait until page contains element    ${BP_downloadDropdown}    20
    \    @{prod_download_items}    get list items    ${BP_downloadDropdown}
    \    @{prod_setup_items}    get list items    ${BP_setupDropdown}
    \    ${prod_BP_page}    execute javascript    ${page_html_jquery}
    \    ${stage_browser}    enterModel    @{envs}[0]    Brand Profile    atj    ${browser_profile_1}
    \    wait until element contains    ${mainPage}    BrandProfile    20
    \    wait until page contains element    ${BP_downloadDropdown}    20
    \    @{stage_download_items}    get list items    ${BP_downloadDropdown}
    \    @{stage_setup_items}    get list items    ${BP_setupDropdown}
    \    ${stage_BP_page}    execute javascript    ${page_html_jquery}
    \    ${BP_page_diff}    diff text    ${stage_BP_page}    ${prod_BP_page}
    \    Run Keyword And Continue On Failure    run keyword if    ${BP_page_diff}    fail    ${userName}_${user_num} BP page Diff !
    \    run keyword if    ${BP_page_diff}    write html file with inner html    ${stage_BP_page}    ${prod_BP_page}    ${diff_dir}\\${userName}_${User_num}_BP_page_diff.html
    \    ...    V
    \    run keyword if    @{stage_setup_items} == @{prod_setup_items} and @{stage_setup_items} > 0    compareBPSetup    ${prod_browser}    ${stage_browser}    ${userName}
    \    ...    ${user_num}    @{stage_setup_items}
    \    run keyword if    @{stage_setup_items} != @{prod_setup_items} or @{stage_setup_items} == 0    fail    BP setup items DIFF or NOT EXIST !
    \    run keyword if    @{stage_download_items} == @{prod_download_items} and @{stage_download_items} >0    compareBPDownload    ${prod_browser}    ${stage_browser}    ${userName}
    \    ...    ${user_num}    @{stage_download_items}
    \    run keyword if    @{stage_download_items} != @{prod_download_items} or @{stage_download_items} == 0    fail    BP download items DIFF or NOT EXIST !
    \    logout close browser    ${prod_browser}
    \    logout close browser    ${stage_browser}
    close all browsers

compareCompanyProfile
    [Tags]    CP-test
    ${user_count}    get users count    ${users_setting}    ${companyprofile_setting_tab}
    @{envs}    get environment setting    ${users_setting}    ${companyprofile_setting_tab}
    ${prod}    set variable    @{envs}[0]
    ${stage}    set variable    @{envs}[1]
    : FOR    ${user_num}    IN RANGE    0    ${user_count}
    \    ${userName}    get user    ${users_setting}    ${companyprofile_setting_tab}    ${user_num}
    \    ${prod_browser}    enterModel    @{envs}[0]    Company Profile    ${userName}    ${browser_profile_1}
    \    wait until element contains    ${mainPage}    CompanyProfile    20
    \    click link    ${CP_link_openAll}
    \    sleep    3S
    \    ${prod_CP_page}    execute javascript    ${page_html_jquery}
    \    click link    ${CP_link_openAll}
    \    click link    ${CP_link_styleAttributeSelection}
    \    wait until element does not contain    ${mainPage}    CompanyProfile    20
    \    ${prod_styleAttributeSelection_page}    execute javascript    ${page_html_jquery}
    \    click element    ${CP_button_back}
    \    wait until element contains    ${mainPage}    CompanyProfile    20
    \    @{prod_CP_dropdownItems}    get list items    ${CP_dropdown}
    \    ${stage_browser}    enterModel    @{envs}[1]    Company Profile    bbestseller    ${browser_profile_2}
    \    wait until element contains    ${mainPage}    CompanyProfile    20
    \    click link    ${CP_link_openAll}
    \    sleep    3S
    \    ${stage_CP_page}    execute javascript    ${page_html_jquery}
    \    click link    ${CP_link_openAll}
    \    click link    ${CP_link_styleAttributeSelection}
    \    wait until element does not contain    ${mainPage}    CompanyProfile    20
    \    ${stage_styleAttributeSelection_page}    execute javascript    ${page_html_jquery}
    \    click element    ${CP_button_back}
    \    wait until element contains    ${mainPage}    CompanyProfile    20
    \    @{stage_CP_dropdownItems}    get list items    ${CP_dropdown}
    \    ${CP_page_diff}    diff text    ${stage_CP_page}    ${prod_CP_page}
    \    Run Keyword And Continue On Failure    run keyword if    ${CP_page_diff}    fail    ${userName}_${user_num} CP page Diff !
    \    run keyword if    ${CP_page_diff}    write html file with inner html    ${stage_CP_page}    ${prod_CP_page}    ${diff_dir}\\${userName}_${User_num}_CP_page_diff.html
    \    ...    V
    \    ${CP_styleAttributeSelection_diff}    diff text    ${stage_styleAttributeSelection_page}    ${prod_styleAttributeSelection_page}
    \    Run Keyword And Continue On Failure    run keyword if    ${CP_styleAttributeSelection_diff}    fail    ${userName}_${user_num} CP styleAttributeSelection Diff !
    \    run keyword if    ${CP_page_diff}    write html file with inner html    ${stage_styleAttributeSelection_page}    ${prod_styleAttributeSelection_page}    ${diff_dir}\\${userName}_${User_num}_CP_styleAttributeSelection_diff.html
    \    ...    V
    \    compareDropdownItems    ${prod_browser}    ${stage_browser}    ${CP_dropdown}    ${CP_button_go}    V
    \    ...    1    Company
    \    logout close browser    ${prod_browser}
    \    logout close browser    ${stage_browser}
    close all browsers

compareAssortmentMix
    [Tags]    AM-test
    ${user_count}    get users count    ${users_setting}    ${AssortmentMix_setting_tab}
    @{envs}    get environment setting    ${users_setting}    ${AssortmentMix_setting_tab}
    ${prod}    set variable    @{envs}[0]
    ${stage}    set variable    @{envs}[1]
    : FOR    ${user_num}    IN RANGE    0    ${user_count}
    \    ${userName}    get user    ${users_setting}    ${AssortmentMix_setting_tab}    ${user_num}
    \    @{user_criteria}    get user criteria    ${users_setting}    ${AssortmentMix_setting_tab}    ${user_num}    ${AssortmentMix_criteria_colNumber}
    \    ${user_criteria_count}    get length    '@{user_criteria}'
    \    ${visibleFlag}    get cell value    ${users_setting}    ${AssortmentMix_setting_tab}    ${user_num}    ${AssortmentMix_visibleFlag_colNumber}
    \    ${prod_browser}    enterModel    @{envs}[0]    Assortment Mix    ${userName}    ${browser_profile_1}
    \    wait until element contains    ${mainPage}    AssortmentMix    20
    \    ${prod_AM_criteriaPage_original}    execute javascript    ${page_html_nochange_jquery}
    \    ${removeFilter_count}    get matching xpath count    ${AssortmentMix_criteria_removeFilter_count}
    \    run keyword if    ${removeFilter_count}>1    removeFilters    ${AssortmentMix_criteria_Button_removeFilter_rowPlaceHold}    ${removeFilter_count}    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}
    \    run keyword if    ${removeFilter_count}==1    Select From List by index    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}    0
    \    run keyword if    ${user_criteria_count} >0    selectCustomCriteria    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}    ${AssortmentMix_criteria_Option_filterHierarachy1}    ${AssortmentMix_criteria_Options_filterHierarachy1}
    \    ...    ${AssortmentMix_criteria_filterHierarachy1_optionCount}    Xpath=${AssortmentMix_criteria_filterHierarachy1_rowCount}//input[@title='Add Filter']    ${AssortmentMix_criteria_filterHierarachy1_rowCount}    @{user_criteria}
    \    sleep    3S
    \    ${prod_AM_criteriaPage}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${prod_AM_criteriaPage}
    \    click element    ${AssortmentMix_criteria_top_submit}
    \    sleep    3S
    \    #    Wait Until Page Does Not Contain    Processing...    20
    \    #    Wait Until Page Does Not Contain    initializing...    120
    \    Wait Until Page Contains    AssortmentMix    120
    \    sleep    5S
    \    ${prod_downloadCount_path}    replace string    ${AssortmentMix_Button_Excel}    Xpath=    \    1
    \    ${prod_downloadCount}    get matching xpath count    ${prod_downloadCount_path}
    \    run keyword if    ${prod_downloadCount} > 0    click element    ${AssortmentMix_Button_TargetDoors}
    \    run keyword if    ${prod_downloadCount} > 0    Wait Until Page Does Not Contain    Processing...    120
    \    run keyword if    ${prod_downloadCount} > 0    Wait Until Page Contains    Target Doors    20
    \    #    run keyword if    ${prod_downloadCount} > 0    click element    ${AssortmentMix_Button_Excel}
    \    #    ${prod_AM_excel}    run keyword if    ${prod_downloadCount} > 0    handleSaveFileWindow    ${prod_download_dir}
    \    ...    # AM_${userName}_${user_num}.xlsx
    \    #    ${prod_AM_excel_visible}    run keyword if    '${visibleFlag}'=='1'    copy ZK Visible XLSX    ${prod_AM_excel}
    \    ${stage_browser}    enterModel    @{envs}[1]    Assortment Mix    ${userName}    ${browser_profile_2}
    \    wait until element contains    ${mainPage}    AssortmentMix    20
    \    ${stage_AM_criteriaPage_original}    execute javascript    ${page_html_nochange_jquery}
    \    ${removeFilter_count}    get matching xpath count    ${AssortmentMix_criteria_removeFilter_count}
    \    run keyword if    ${removeFilter_count}>1    removeFilters    ${AssortmentMix_criteria_Button_removeFilter_rowPlaceHold}    ${removeFilter_count}    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}
    \    run keyword if    ${removeFilter_count}==1    Select From List by index    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}    0
    \    run keyword if    ${user_criteria_count} >0    selectCustomCriteria    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}    ${AssortmentMix_criteria_Option_filterHierarachy1}    ${AssortmentMix_criteria_Options_filterHierarachy1}
    \    ...    ${AssortmentMix_criteria_filterHierarachy1_optionCount}    Xpath=${AssortmentMix_criteria_filterHierarachy1_rowCount}//input[@title='Add Filter']    ${AssortmentMix_criteria_filterHierarachy1_rowCount}    @{user_criteria}
    \    sleep    3S
    \    ${stage_AM_criteriaPage}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${stage_AM_criteriaPage}
    \    click element    ${AssortmentMix_criteria_top_submit}
    \    sleep    3S
    \    #    Wait Until Page Does Not Contain    Processing...    20
    \    #    Wait Until Page Does Not Contain    initializing...    120
    \    Wait Until Page Contains    Assortment Mix    120
    \    sleep    5S
    \    ${stage_downloadCount_path}    replace string    ${AssortmentMix_Button_Excel}    Xpath=    \    1
    \    ${stage_downloadCount}    get matching xpath count    ${stage_downloadCount_path}
    \    ${AM_criteriaPage_diff}    diff text    ${prod_AM_criteriaPage}    ${stage_AM_criteriaPage}
    \    ${AM_criteriaPageOriginal_diff}    diff text    ${prod_AM_criteriaPage_original}    ${stage_AM_criteriaPage_original}
    \    Run Keyword And Continue On Failure    run keyword if    ${AM_criteriaPage_diff}    fail    ${userName}_${user_num} AM criteriaPage Diff !
    \    run keyword if    ${AM_criteriaPage_diff}    write html file with inner html    ${stage_AM_criteriaPage}    ${prod_AM_criteriaPage}    ${diff_dir}\\${userName}_${User_num}_AM_criteriaPage_diff.html
    \    ...    V
    \    Run Keyword And Continue On Failure    run keyword if    ${AM_criteriaPage_diff}    fail    ${userName}_${user_num} AM criteriaPageOriginal Diff !
    \    run keyword if    ${AM_criteriaPageOriginal_diff}    write html file with inner html    ${stage_AM_criteriaPage_original}    ${prod_AM_criteriaPage_original}    ${diff_dir}\\${userName}_${User_num}_AM_criteriaPageOriginal_diff.html
    \    ...    V
    \    run keyword if    ${stage_downloadCount} == 0 or ${prod_downloadCount} == 0    log    ${userName}_${user_num} DailyTask May Be Blank!
    \    continue for loop if    ${stage_downloadCount} == 0 or ${prod_downloadCount} == 0
    \    click element    ${AssortmentMix_Button_TargetDoors}
    \    Wait Until Page Does Not Contain    Processing...    120
    \    Wait Until Page Contains    Target Doors    20
    \    #    click element    ${AssortmentMix_Button_Excel}
    \    #    ${stage_AM_excel}    handleSaveFileWindow    ${stage_download_dir}    AM_${userName}_${user_num}.xlsx
    \    #    ${stage_AM_excel_visible}    run keyword if    '${visibleFlag}'=='1'    copy ZK Visible XLSX    ${stage_AM_excel}
    \    compareAMDoorInfoTabs    3    ${prod_browser}    ${stage_browser}    ${userName}    ${user_num}
    \    ...    ${visibleFlag}
    \    switch browser    ${prod_browser}
    \    run keyword if    ${prod_downloadCount} > 0    click element    ${AssortmentMix_tab_AssortmentMix}
    \    run keyword if    ${prod_downloadCount} > 0    Wait Until Page Does Not Contain    Processing...    20
    \    run keyword if    ${prod_downloadCount} > 0    Wait Until Page Contains    AssortmentMix    20
    \    ${prod_tabsCount}    get matching xpath count    ${ZK_tabsCount}
    \    switch browser    ${stage_browser}
    \    click element    ${AssortmentMix_tab_AssortmentMix_new}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    Wait Until Page Contains    Assortment Mix    20
    \    #    Run Keyword And Continue On Failure    run keyword if    '${visibleFlag}'=='1'    compare XLSX    ${stage_AM_excel_visible}
    \    ...    # ${prod_AM_excel_visible}    ${diff_dir}\\${userName}_${user_num}_AM_downloadVisible_Diff.txt    # ELSE    compare XLSX    ${stage_AM_excel}
    \    ...    # ${prod_AM_excel}    ${diff_dir}\\${userName}_${user_num}_AM_download_Diff.txt
    \    ${stage_tabsCount}    get matching xpath count    ${ZK_tabsCount}
    \    Run Keyword And Continue On Failure    run keyword if    ${stage_tabsCount} != ${prod_tabsCount}    fail    ${userName}_${user_num} DailyTask TabsCount Diff !
    \    compareAMTabs    ${prod_browser}    ${stage_browser}    ${userName}    ${user_num}    ${stage_tabsCount}
    \    ...    ${ZK_tabsCount}    ${ZK_sheet_deleteHiddenNodes_jquery}    AssortmentMix
    \    logout close browser    ${prod_browser}
    \    logout close browser    ${stage_browser}
    close all browsers

compareOrderBreakdown
    [Tags]    OB-test
    ${user_count}    get users count    ${users_setting}    ${OrderBreakdown_setting_tab}
    @{envs}    get environment setting    ${users_setting}    ${OrderBreakdown_setting_tab}
    ${prod}    set variable    @{envs}[0]
    ${stage}    set variable    @{envs}[1]
    : FOR    ${user_num}    IN RANGE    0    ${user_count}
    \    ${userName}    get user    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}
    \    @{user_criteria}    get user criteria    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}    ${OrderBreakdown_criteria_colNumber}
    \    ${user_criteria_count}    get length    '@{user_criteria}'
    \    ${OB_taskType}    get cell value    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}    ${OrderBreakdown_taskType_colNumber}
    \    ${OB_fromDate}    get cell value    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}    ${OrderBreakdown_fromDate_colNumber}
    \    ${OB_toDate}    get cell value    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}    ${OrderBreakdown_toDate_colNumber}
    \    ${OB_timeRange}    get cell value    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}    ${OrderBreakdown_timeRange_colNumber}
    \    ${OB_visibleFlag}    get cell value    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}    ${OrderBreakdown_visibleFlag_colNumber}
    \    ${prod_browser}    enterModel    @{envs}[0]    Order Breakdown    ${userName}    ${browser_profile_1}
    \    wait until element contains    ${mainPage}    OrderBreakdown    20
    \    ${prod_OB_criteriaPage_original}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${prod_OB_criteriaPage_original}
    \    run keyword if    '${OB_taskType}'    select from list by label    ${OrderBreakdown_criteria_Dropdown_TaskType}    ${OB_taskType}
    \    run keyword if    '${OB_fromDate}'    input text    ${OrderBreakdown_criteria_Text_FromDate}    ${OB_fromDate}
    \    run keyword if    '${OB_toDate}'    input text    ${OrderBreakdown_criteria_Text_ToDate}    ${OB_toDate}
    \    run keyword if    '${OB_timeRange}' == 'In DC Date'    click element    ${OrderBreakdown_criteria_Radio_InDCDate}
    \    run keyword if    '${OB_timeRange}' == 'Shop Date'    click element    ${OrderBreakdown_criteria_Radio_ShopDate}
    \    ${removeFilter_count}    get matching xpath count    ${OrderBreakdown_criteria_removeFilter_count}
    \    run keyword if    ${removeFilter_count}>1    removeFilters    ${OrderBreakdown_criteria_Button_removeFilter_rowPlaceHold}    ${removeFilter_count}    ${OrderBreakdown_criteria_Dropdown_filterHierarchy1}
    \    run keyword if    ${removeFilter_count}==1    Select From List by index    ${OrderBreakdown_criteria_Dropdown_filterHierarchy1}    0
    \    run keyword if    ${user_criteria_count} >0    selectCustomCriteria    ${OrderBreakdown_criteria_Dropdown_filterHierarchy1}    ${OrderBreakdown_criteria_Option_filterHierarachy1}    ${OrderBreakdown_criteria_Options_filterHierarachy1}
    \    ...    ${OrderBreakdown_criteria_filterHierarachy1_optionCount}    Xpath=${OrderBreakdown_criteria_filterHierarachy1_rowCount}//input[@title='Add Filter']    ${OrderBreakdown_criteria_filterHierarachy1_rowCount}    @{user_criteria}
    \    sleep    3S
    \    ${prod_OB_criteriaPage}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${prod_OB_criteriaPage}
    \    click element    ${OrderBreakdown_criteria_top_submit}
    \    sleep    3S
    \    #    Wait Until Page Does Not Contain    Processing...    20
    \    #    Wait Until Page Does Not Contain    initializing...    120
    \    Wait Until Page Contains    ${OB_taskType}    120
    \    sleep    5S
    \    ${prod_downloadCount_path}    replace string    ${OrderBreakdown_Button_Excel}    Xpath=    \    1
    \    ${prod_downloadCount}    get matching xpath count    ${prod_downloadCount_path}
    \    run keyword if    ${prod_downloadCount} > 0    click element    ${OrderBreakdown_Button_Excel}
    \    ${prod_OB_excel}    run keyword if    ${prod_downloadCount} > 0    handleSaveFileWindow    ${prod_download_dir}    OB_${userName}_${user_num}.xlsx
    \    ${prod_OB_excelVisible}    run keyword if    '${OB_visibleFlag}'=='1'    copy ZK visible XLSX    ${prod_OB_excel}
    \    ${prod_tabsCount}    get matching xpath count    ${OrderBreakdown_tabsCount}
    \    ${stage_browser}    enterModel    @{envs}[1]    Order Breakdown    bbestseller_copy    ${browser_profile_2}
    \    wait until element contains    ${mainPage}    OrderBreakdown    20
    \    ${stage_OB_criteriaPage_original}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${stage_OB_criteriaPage_original}
    \    run keyword if    '${OB_taskType}'    select from list by label    ${OrderBreakdown_criteria_Dropdown_TaskType}    ${OB_taskType}
    \    run keyword if    '${OB_fromDate}'    input text    ${OrderBreakdown_criteria_Text_FromDate}    ${OB_fromDate}
    \    run keyword if    '${OB_toDate}'    input text    ${OrderBreakdown_criteria_Text_ToDate}    ${OB_toDate}
    \    run keyword if    '${OB_timeRange}' == 'In DC Date'    click element    ${OrderBreakdown_criteria_Radio_InDCDate}
    \    run keyword if    '${OB_timeRange}' == 'Shop Date'    click element    ${OrderBreakdown_criteria_Radio_ShopDate}
    \    ${removeFilter_count}    get matching xpath count    ${OrderBreakdown_criteria_removeFilter_count}
    \    run keyword if    ${removeFilter_count}>1    removeFilters    ${OrderBreakdown_criteria_Button_removeFilter_rowPlaceHold}    ${removeFilter_count}    ${OrderBreakdown_criteria_Dropdown_filterHierarchy1}
    \    run keyword if    ${removeFilter_count}==1    Select From List by index    ${OrderBreakdown_criteria_Dropdown_filterHierarchy1}    0
    \    run keyword if    ${user_criteria_count} >0    selectCustomCriteria    ${OrderBreakdown_criteria_Dropdown_filterHierarchy1}    ${OrderBreakdown_criteria_Option_filterHierarachy1}    ${OrderBreakdown_criteria_Options_filterHierarachy1}
    \    ...    ${OrderBreakdown_criteria_filterHierarachy1_optionCount}    Xpath=${OrderBreakdown_criteria_filterHierarachy1_rowCount}//input[@title='Add Filter']    ${OrderBreakdown_criteria_filterHierarachy1_rowCount}    @{user_criteria}
    \    sleep    3S
    \    ${stage_OB_criteriaPage}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${stage_OB_criteriaPage}
    \    click element    ${OrderBreakdown_criteria_top_submit}
    \    sleep    3S
    \    #    Wait Until Page Does Not Contain    Processing...    20
    \    #    Wait Until Page Does Not Contain    initializing...    120
    \    Wait Until Page Contains    ${OB_taskType}    20
    \    sleep    5S
    \    ${stage_downloadCount_path}    replace string    ${OrderBreakdown_Button_Excel}    Xpath=    \    1
    \    ${stage_downloadCount}    get matching xpath count    ${stage_downloadCount_path}
    \    ${stage_tabsCount}    get matching xpath count    ${OrderBreakdown_tabsCount}
    \    ${OB_criteriaPageOriginal_diff}    diff text    ${prod_OB_criteriaPage_original}    ${stage_OB_criteriaPage_original}
    \    ${OB_criteriaPage_diff}    diff text    ${prod_OB_criteriaPage}    ${stage_OB_criteriaPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${OB_criteriaPage_diff}    fail    ${userName}_${user_num} OrderBreakdown criteriaPage Diff !
    \    run keyword if    ${OB_criteriaPage_diff}    write html file with inner html    ${stage_OB_criteriaPage}    ${prod_OB_criteriaPage}    ${diff_dir}\\${userName}_${User_num}_OB_criteriaPage_diff.html
    \    ...    V
    \    Run Keyword And Continue On Failure    run keyword if    ${OB_criteriaPageOriginal_diff}    fail    ${userName}_${user_num} OrderBreakdown \ criteriaPageOriginal Diff !
    \    run keyword if    ${OB_criteriaPageOriginal_diff}    write html file with inner html    ${stage_OB_criteriaPage_original}    ${prod_OB_criteriaPage_original}    ${diff_dir}\\${userName}_${User_num}_OB_criteriaPageOriginal_diff.html
    \    ...    V
    \    Run Keyword And Continue On Failure    run keyword if    ${stage_tabsCount} != ${prod_tabsCount}    fail    ${userName}_${user_num} OrderBreakdown TabsCount Diff !
    \    run keyword if    ${stage_downloadCount} == 0 or ${prod_downloadCount} == 0    log    ${userName}_${user_num} OrderBreakdown May Be Blank!
    \    continue for loop if    ${stage_downloadCount} == 0 or ${prod_downloadCount} == 0
    \    click element    ${OrderBreakdown_Button_Excel}
    \    ${stage_OB_excel}    handleSaveFileWindow    ${stage_download_dir}    OB_${userName}_${user_num}.xlsx
    \    ${stage_OB_excelVisible}    run keyword if    '${OB_visibleFlag}'=='1'    copy ZK visible XLSX    ${stage_OB_excel}
    \    Run Keyword And Continue On Failure    run keyword if    '${OB_visibleFlag}'=='1'    compare XLSX    ${stage_OB_excelVisible}    ${prod_OB_excelVisible}
    \    ...    ${diff_dir}\\${userName}_${user_num}_OB_downloadVisible_Diff.txt
    \    ...    ELSE    compare XLSX    ${stage_OB_excel}    ${prod_OB_excel}    ${diff_dir}\\${userName}_${user_num}_OB_download_Diff.txt
    \    compareOBTabs    ${prod_browser}    ${stage_browser}    ${userName}    ${user_num}    ${stage_tabsCount}
    \    ...    ${OrderBreakdown_tabsCount}    ${OrderBreakdown_freezePanel_position}    ${ZK_sheet_deleteHiddenNodes_jquery}    OrderBreakdown
    \    logout close browser    ${prod_browser}
    \    logout close browser    ${stage_browser}
    close all browsers

compareStyleBank
    [Tags]    SB-test
    ${user_count}    get users count    ${users_setting}    ${stylebank_setting_tab}
    @{envs}    get environment setting    ${users_setting}    ${stylebank_setting_tab}
    ${prod}    set variable    @{envs}[0]
    ${stage}    set variable    @{envs}[1]
    : FOR    ${user_num}    IN RANGE    0    ${user_count}
    \    ${userName}    get user    ${users_setting}    ${stylebank_setting_tab}    ${user_num}
    \    @{company}    get company info    ${users_setting}    ${stylebank_setting_tab}    ${user_num}
    \    @{user_criteria}    get user criteria    ${users_setting}    ${stylebank_setting_tab}    ${user_num}    ${stylebank_criteria_colNumber}
    \    ${user_criteria_count}    get length    '@{user_criteria}'
    \    ${style_report_type}    get cell value    ${users_setting}    ${stylebank_setting_tab}    ${user_num}    ${stylebank_reportType_colNumber}
    \    ${downloadVisible_flag}    get cell value    ${users_setting}    ${stylebank_setting_tab}    ${user_num}    ${stylebank_visibleFlag_colNumber}
    \    ${prod_browser}    enterModel    @{envs}[0]    Style Bank    ${userName}    ${browser_profile_1}
    \    wait until page contains    \    20
    \    ${prod_page}    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    click button    ${stylebank_button_advancedSearch}
    \    wait until page contains    \    20
    \    ${prod_criteriaPage}    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    ${stage_browser}    enterModel    @{envs}[1]    Style Bank    ${userName}    ${browser_profile_2}
    \    wait until page contains    \    20
    \    ${stage_page}    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    click button    ${stylebank_button_advancedSearch}
    \    wait until page contains    \    20
    \    ${stage_criteriaPage}    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    selectStyleBankCriteria    ${prod_browser}    ${stage_browser}    @{user_criteria}
    \    switch browser    ${prod_browser}
    \    ${prod_selectedCriteriaPage}    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    switch browser    ${stage_browser}
    \    ${stage_selectedCriteriaPage}    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    ${styleBankPage_diff}    diff text    ${stage_page}    ${prod_page}
    \    Run Keyword And Continue On Failure    run keyword if    ${styleBankPage_diff}    fail    ${userName}_${user_num} styleBankFirstPage Diff !
    \    run keyword if    ${styleBankPage_diff}    write html file with inner html    ${stage_page}    ${prod_page}    ${diff_dir}\\${userName}_${User_num}_styleBank_firstPage_diff.html
    \    ...    V
    \    ${styleBankCriteriaSelected_diff}    diff text    ${stage_selectedCriteriaPage}    ${prod_selectedCriteriaPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${styleBankCriteriaSelected_diff}    fail    ${userName}_${user_num} styleBankcriteriaSelected Diff !
    \    run keyword if    ${styleBankCriteriaSelected_diff}    write html file with inner html    ${stage_selectedCriteriaPage}    ${prod_selectedCriteriaPage}    ${diff_dir}\\${userName}_${User_num}_styleBank_criteriaSelected_diff.html
    \    ...    V
    \    #    continue for loop if    ${styleBankCriteriaSelected_diff}
    \    run keyword if    '${style_report_type}'    compareSearchedStyleBankReport    ${prod_browser}    ${stage_browser}    ${style_report_type}
    \    ...    ${userName}    ${user_num}    ${downloadVisible_flag}
    \    switch browser    ${prod_browser}
    \    click button    ${stylebank_advanced_topButton_search}
    \    wait until page contains    Search Criteria:    20
    \    ${prod_searchedPage}    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    switch browser    ${stage_browser}
    \    click button    ${stylebank_advanced_topButton_search}
    \    wait until page contains    Search Criteria:    20
    \    ${stage_searchedPage}    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    ${searchedPage_diff}    diff text    ${prod_searchedPage}    ${stage_searchedPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${searchedPage_diff}    fail    ${userName}_${user_num} styleBanksearchedPage Diff !
    \    run keyword if    ${searchedPage_diff}    write html file with inner html    ${stage_searchedPage}    ${prod_searchedPage}    ${diff_dir}\\${userName}_${User_num}_styleBank_searchedPage_diff.html
    \    ...    V
    \    compareStyleInfo    ${prod_browser}    ${stage_browser}    ${userName}    ${user_num}
    \    logout close browser    ${stage_browser}
    \    logout close browser    ${prod_browser}
    close all browsers

compareAssortmentMix_copy
    [Tags]
    ${user_count}    get users count    ${users_setting}    ${AssortmentMix_setting_tab}
    @{envs}    get environment setting    ${users_setting}    ${AssortmentMix_setting_tab}
    ${prod}    set variable    @{envs}[0]
    ${stage}    set variable    @{envs}[1]
    : FOR    ${user_num}    IN RANGE    0    ${user_count}
    \    ${userName}    get user    ${users_setting}    ${AssortmentMix_setting_tab}    ${user_num}
    \    @{user_criteria}    get user criteria    ${users_setting}    ${AssortmentMix_setting_tab}    ${user_num}    ${AssortmentMix_criteria_colNumber}
    \    ${user_criteria_count}    get length    '@{user_criteria}'
    \    ${prod_browser}    enterModel    @{envs}[0]    Assortment Mix    ${userName}    ${browser_profile_1}
    \    wait until element contains    ${mainPage}    AssortmentMix    20
    \    ${prod_AM_criteriaPage_original}    execute javascript    ${page_html_nochange_jquery}
    \    ${removeFilter_count}    get matching xpath count    ${AssortmentMix_criteria_removeFilter_count}
    \    run keyword if    ${removeFilter_count}>1    removeFilters    ${AssortmentMix_criteria_Button_removeFilter_rowPlaceHold}    ${removeFilter_count}    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}
    \    run keyword if    ${removeFilter_count}==1    Select From List by index    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}    0
    \    run keyword if    ${user_criteria_count} >0    selectCustomCriteria    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}    ${AssortmentMix_criteria_Option_filterHierarachy1}    ${AssortmentMix_criteria_Options_filterHierarachy1}
    \    ...    ${AssortmentMix_criteria_filterHierarachy1_optionCount}    Xpath=${AssortmentMix_criteria_filterHierarachy1_rowCount}//input[@title='Add Filter']    ${AssortmentMix_criteria_filterHierarachy1_rowCount}    @{user_criteria}
    \    sleep    3S
    \    ${prod_AM_criteriaPage}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${prod_AM_criteriaPage}
    \    click element    ${AssortmentMix_criteria_top_submit}
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    20
    \    Wait Until Page Does Not Contain    initializing...    120
    \    Wait Until Page Contains    AssortmentMix    20
    \    #    ${prod_AM_mainPage}    execute javascript    ${AssortmentMix_Sheet_jquery}
    \    ${prod_downloadCount_path}    replace string    ${AssortmentMix_Button_Excel}    Xpath=    \    1
    \    ${prod_downloadCount}    get matching xpath count    ${prod_downloadCount_path}
    \    run keyword if    ${prod_downloadCount} > 0    click element    ${AssortmentMix_Button_Options}
    \    run keyword if    ${prod_downloadCount} > 0    Wait Until Page Contains    Select Columns to Display    20
    \    ${prod_AM_optionsPage}    run keyword if    ${prod_downloadCount} > 0    execute javascript    ${ZK_optionPage_jquery}
    \    run keyword if    ${prod_downloadCount} > 0    Wait Until Page Does Not Contain    Processing...    20
    \    run keyword if    ${prod_downloadCount} > 0    Wait Until Page Contains    AssortmentMix    20
    \    run keyword if    ${prod_downloadCount} > 0    click element    ${AssortmentMix_Button_Excel}
    \    ${prod_AM_excel}    run keyword if    ${prod_downloadCount} > 0    handleSaveFileWindow    ${prod_download_dir}    AM_${userName}_${user_num}.xlsx
    \    ${stage_browser}    enterModel    @{envs}[0]    Assortment Mix    ${userName}    ${browser_profile_2}
    \    wait until element contains    ${mainPage}    AssortmentMix    20
    \    ${stage_AM_criteriaPage_original}    execute javascript    ${page_html_nochange_jquery}
    \    ${removeFilter_count}    get matching xpath count    ${AssortmentMix_criteria_removeFilter_count}
    \    run keyword if    ${removeFilter_count}>1    removeFilters    ${AssortmentMix_criteria_Button_removeFilter_rowPlaceHold}    ${removeFilter_count}    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}
    \    run keyword if    ${removeFilter_count}==1    Select From List by index    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}    0
    \    run keyword if    ${user_criteria_count} >0    selectCustomCriteria    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}    ${AssortmentMix_criteria_Option_filterHierarachy1}    ${AssortmentMix_criteria_Options_filterHierarachy1}
    \    ...    ${AssortmentMix_criteria_filterHierarachy1_optionCount}    Xpath=${AssortmentMix_criteria_filterHierarachy1_rowCount}//input[@title='Add Filter']    ${AssortmentMix_criteria_filterHierarachy1_rowCount}    @{user_criteria}
    \    sleep    3S
    \    ${stage_AM_criteriaPage}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${stage_AM_criteriaPage}
    \    click element    ${AssortmentMix_criteria_top_submit}
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    20
    \    Wait Until Page Does Not Contain    initializing...    120
    \    Wait Until Page Contains    AssortmentMix    20
    \    #    ${stage_AM_mainPage}    execute javascript    ${AssortmentMix_Sheet_jquery}
    \    ${stage_downloadCount_path}    replace string    ${AssortmentMix_Button_Excel}    Xpath=    \    1
    \    ${stage_downloadCount}    get matching xpath count    ${stage_downloadCount_path}
    \    ${AM_criteriaPage_diff}    diff text    ${prod_AM_criteriaPage}    ${stage_AM_criteriaPage}
    \    ${AM_criteriaPageOriginal_diff}    diff text    ${prod_AM_criteriaPage_original}    ${stage_AM_criteriaPage_original}
    \    #    ${AM_mainPagel_diff}    diff text    ${prod_AM_mainPage}    ${stage_AM_mainPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${AM_criteriaPage_diff}    fail    ${userName}_${user_num} AM criteriaPage Diff !
    \    run keyword if    ${AM_criteriaPage_diff}    write html file with inner html    ${stage_AM_criteriaPage}    ${prod_AM_criteriaPage}    ${diff_dir}\\${userName}_${User_num}_AM_criteriaPage_diff.html
    \    ...    V
    \    Run Keyword And Continue On Failure    run keyword if    ${AM_criteriaPage_diff}    fail    ${userName}_${user_num} AM criteriaPageOriginal Diff !
    \    run keyword if    ${AM_criteriaPageOriginal_diff}    write html file with inner html    ${stage_AM_criteriaPage_original}    ${prod_AM_criteriaPage_original}    ${diff_dir}\\${userName}_${User_num}_AM_criteriaPageOriginal_diff.html
    \    ...    V
    \    #    Run Keyword And Continue On Failure    run keyword if    ${AM_mainPagel_diff}    fail    ${userName}_${user_num} AM mainPage Diff !
    \    #    run keyword if    ${AM_mainPagel_diff}    write html ZK sheet with inner html    ${stage_AM_mainPage}    ${prod_AM_mainPage}
    \    ...    # ${diff_dir}\\${userName}_${User_num}_AM_mainPage_diff.html    V
    \    run keyword if    ${stage_downloadCount} == 0 or ${prod_downloadCount} == 0    log    ${userName}_${user_num} DailyTask May Be Blank!
    \    continue for loop if    ${stage_downloadCount} == 0 or ${prod_downloadCount} == 0
    \    click element    ${AssortmentMix_Button_Options}
    \    Wait Until Page Contains    Select Columns to Display    20
    \    ${stage_AM_optionsPage}    execute javascript    ${ZK_optionPage_jquery}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    Wait Until Page Contains    AssortmentMix    20
    \    click element    ${AssortmentMix_Button_Excel}
    \    ${stage_AM_excel}    handleSaveFileWindow    ${stage_download_dir}    AM_${userName}_${user_num}.xlsx
    \    ${AM_optionsPage_diff}    diff text    ${prod_AM_optionsPage}    ${stage_AM_optionsPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${AM_optionsPage_diff}    fail    ${userName}_${user_num} AM optionsPage Diff !
    \    run keyword if    ${AM_optionsPage_diff}    write html ZK sheet with inner html    ${stage_AM_optionsPage}    ${prod_AM_optionsPage}    ${diff_dir}\\${userName}_${User_num}_AM_optionsPage_diff.html
    \    ...    V
    \    Run Keyword And Continue On Failure    compare Excel    ${stage_AM_excel}    ${prod_AM_excel}    ${diff_dir}\\${userName}_${user_num}_AM_download_Diff.txt
    \    #    compareScrollPage    ${prod_browser}    ${stage_browser}    ${userName}    ${user_num}
    \    ...    # AssortmentMix    ${max_scrollPage_num}
    \    compareDTScrollPage    ${prod_browser}    ${stage_browser}    ${userName}    ${user_num}    AssortmentMix
    \    ...    AssortmentMix
    \    switch browser    ${prod_browser}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    Wait Until Page Contains element    ${AssortmentMix_Button_TargetDoors}    20
    \    sleep    5S
    \    click element    ${AssortmentMix_Button_TargetDoors}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    Wait Until Page Contains    Target Doors    20
    \    sleep    5S
    \    logout close browser    ${prod_browser}
    \    logout close browser    ${prod_browser}
    close all browsers

compareOrderBreakdown_single
    [Tags]    OBS-test
    ${user_count}    get users count    ${users_setting}    ${OrderBreakdown_setting_tab}
    @{envs}    get environment setting    ${users_setting}    ${OrderBreakdown_setting_tab}
    ${prod}    set variable    @{envs}[0]
    ${stage}    set variable    @{envs}[1]
    : FOR    ${user_num}    IN RANGE    0    ${user_count}
    \    ${userName}    get user    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}
    \    @{user_criteria}    get user criteria    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}    ${OrderBreakdown_criteria_colNumber}
    \    ${user_criteria_count}    get length    '@{user_criteria}'
    \    ${OB_taskType}    get cell value    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}    ${OrderBreakdown_taskType_colNumber}
    \    ${OB_fromDate}    get cell value    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}    ${OrderBreakdown_fromDate_colNumber}
    \    ${OB_toDate}    get cell value    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}    ${OrderBreakdown_toDate_colNumber}
    \    ${OB_timeRange}    get cell value    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}    ${OrderBreakdown_timeRange_colNumber}
    \    ${OB_visibleFlag}    get cell value    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}    ${OrderBreakdown_visibleFlag_colNumber}
    \    ${prod_browser}    enterModel    @{envs}[0]    Order Breakdown    ${userName}    ${browser_profile_1}
    \    wait until element contains    ${mainPage}    OrderBreakdown    20
    \    ${prod_OB_criteriaPage_original}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${prod_OB_criteriaPage_original}
    \    run keyword if    '${OB_taskType}'    select from list by label    ${OrderBreakdown_criteria_Dropdown_TaskType}    ${OB_taskType}
    \    run keyword if    '${OB_fromDate}'    input text    ${OrderBreakdown_criteria_Text_FromDate}    ${OB_fromDate}
    \    run keyword if    '${OB_toDate}'    input text    ${OrderBreakdown_criteria_Text_ToDate}    ${OB_toDate}
    \    run keyword if    '${OB_timeRange}' == 'In DC Date'    click element    ${OrderBreakdown_criteria_Radio_InDCDate}
    \    run keyword if    '${OB_timeRange}' == 'Shop Date'    click element    ${OrderBreakdown_criteria_Radio_ShopDate}
    \    ${removeFilter_count}    get matching xpath count    ${OrderBreakdown_criteria_removeFilter_count}
    \    run keyword if    ${removeFilter_count}>1    removeFilters    ${OrderBreakdown_criteria_Button_removeFilter_rowPlaceHold}    ${removeFilter_count}    ${OrderBreakdown_criteria_Dropdown_filterHierarchy1}
    \    run keyword if    ${removeFilter_count}==1    Select From List by index    ${OrderBreakdown_criteria_Dropdown_filterHierarchy1}    0
    \    run keyword if    ${user_criteria_count} >0    selectCustomCriteria    ${OrderBreakdown_criteria_Dropdown_filterHierarchy1}    ${OrderBreakdown_criteria_Option_filterHierarachy1}    ${OrderBreakdown_criteria_Options_filterHierarachy1}
    \    ...    ${OrderBreakdown_criteria_filterHierarachy1_optionCount}    Xpath=${OrderBreakdown_criteria_filterHierarachy1_rowCount}//input[@title='Add Filter']    ${OrderBreakdown_criteria_filterHierarachy1_rowCount}    @{user_criteria}
    \    sleep    3S
    \    ${prod_OB_criteriaPage}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${prod_OB_criteriaPage}
    \    click element    ${OrderBreakdown_criteria_top_submit}
    \    sleep    3S
    \    #    Wait Until Page Does Not Contain    Processing...    20
    \    #    Wait Until Page Does Not Contain    initializing...    120
    \    Wait Until Page Contains    ${OB_taskType}    120
    \    sleep    5S
    \    ${prod_downloadCount_path}    replace string    ${OrderBreakdown_Button_Excel}    Xpath=    \    1
    \    ${prod_downloadCount}    get matching xpath count    ${prod_downloadCount_path}
    \    run keyword if    ${prod_downloadCount} > 0    click element    ${OrderBreakdown_Button_Excel}
    \    ${prod_OB_excel}    run keyword if    ${prod_downloadCount} > 0    handleSaveFileWindow    ${prod_download_dir}    OB_${userName}_${user_num}.xlsx
    \    ${prod_OB_excelVisible}    run keyword if    '${OB_visibleFlag}'=='1'    copy ZK visible XLSX    ${prod_OB_excel}
    \    ${prod_tabsCount}    get matching xpath count    ${OrderBreakdown_tabsCount}
    \    compareOBTabs_single    ${prod_browser}    ${userName}    ${user_num}    ${prod_tabsCount}    ${OrderBreakdown_tabsCount}
    \    ...    ${OrderBreakdown_freezePanel_position}    ${ZK_sheet_deleteHiddenNodes_jquery}    OrderBreakdown
    \    logout close browser    ${prod_browser}
    close all browsers

compareBudgetBreakdownList_normal
    [Tags]
    ${user_count}    get users count    ${users_setting}    ${OrderBreakdown_setting_tab}
    @{envs}    get environment setting    ${users_setting}    ${OrderBreakdown_setting_tab}
    ${prod}    set variable    @{envs}[0]
    ${stage}    set variable    @{envs}[1]
    : FOR    ${user_num}    IN RANGE    0    ${user_count}
    \    ${userName}    get user    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}
    \    ${visibleFlag}    get cell value    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}    ${OrderBreakdown_visibleFlag_colNumber}
    \    ${prod_browser}    enterModel    @{envs}[0]    Budget Breakdown List    ${userName}    ${browser_profile_1}
    \    wait until element contains    ${mainPage}    BudgetBreakdownList    20
    \    ${prod_BB_listPage_original}    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    ${prod_criteriaCount}    get matching xpath count    ${budgetBreakdown_list_criteriaCount}
    \    Run Keyword And Continue On Failure    run keyword if    ${prod_criteriaCount}== 0    fail    ${userName}_${user_num} BudgetBreakdown don't exist in prod !
    \    expandAllCriteria    ${budgetBreakdown_list_criteriaCount}    ${budgetBreakdown_list_criteriaExpand_numPH}
    \    ${prod_BB_listPage}    run keyword if    ${prod_criteriaCount} > 0    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    ${stage_browser}    enterModel    @{envs}[1]    Budget Breakdown List    bbestseller_copy    ${browser_profile_2}
    \    wait until element contains    ${mainPage}    BudgetBreakdownList    20
    \    ${stage_BB_listPage_original}    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    ${stage_criteriaCount}    get matching xpath count    ${budgetBreakdown_list_criteriaCount}
    \    Run Keyword And Continue On Failure    run keyword if    ${stage_criteriaCount}== 0    fail    ${userName}_${user_num} BudgetBreakdown don't exist in stage!
    \    expandAllCriteria    ${budgetBreakdown_list_criteriaCount}    ${budgetBreakdown_list_criteriaExpand_numPH}
    \    ${stage_BB_listPage}    run keyword if    ${prod_criteriaCount} > 0    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    ${BB_listPage_diff}    diff text    ${prod_BB_listPage_original}    ${stage_BB_listPage_original}
    \    ${BB_listPageExpand_diff}    diff text    ${prod_BB_listPage}    ${stage_BB_listPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${BB_listPage_diff}    fail    ${userName}_${user_num} BudgetBreakdown listPage Diff !
    \    run keyword if    ${BB_listPage_diff}    write html file with inner html    ${stage_BB_listPage_original}    ${prod_BB_listPage_original}    ${diff_dir}\\${userName}_${User_num}_BB_listPage_diff.html
    \    ...    V
    \    Run Keyword And Continue On Failure    run keyword if    ${BB_listPageExpand_diff}    fail    ${userName}_${user_num} BudgetBreakdown listPageExpand Diff !
    \    run keyword if    ${BB_listPageExpand_diff}    write html file with inner html    ${stage_BB_listPage}    ${prod_BB_listPage}    ${diff_dir}\\${userName}_${User_num}_BB_listPageExpand_diff.html
    \    ...    V
    \    continue for loop if    ${stage_criteriaCount} == 0 or ${prod_criteriaCount} == 0
    \    compareBudgetBreakdownCriteria    ${prod_browser}    ${stage_browser}    ${stage_criteriaCount}    ${prod_criteriaCount}    ${userName}
    \    ...    ${user_num}    ${visibleFlag}
    \    logout close browser    ${prod_browser}
    \    logout close browser    ${stage_browser}
    close all browsers

compareBudgetBreakdownList
    [Tags]    BB-test
    ${user_count}    get users count    ${users_setting}    ${OrderBreakdown_setting_tab}
    @{envs}    get environment setting    ${users_setting}    ${OrderBreakdown_setting_tab}
    ${prod}    set variable    @{envs}[0]
    ${stage}    set variable    @{envs}[1]
    : FOR    ${user_num}    IN RANGE    0    ${user_count}
    \    ${userName}    get user    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}
    \    ${visibleFlag}    get cell value    ${users_setting}    ${OrderBreakdown_setting_tab}    ${user_num}    ${OrderBreakdown_visibleFlag_colNumber}
    \    ${prod_browser}    enterModel    @{envs}[0]    Budget Breakdown List    ${userName}    ${browser_profile_1}
    \    wait until element contains    ${mainPage}    BudgetBreakdownList    20
    \    ${prod_BB_listPage_original}    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    ${prod_criteriaCount}    get matching xpath count    ${budgetBreakdown_list_criteriaCount}
    \    Run Keyword And Continue On Failure    run keyword if    ${prod_criteriaCount}== 0    fail    ${userName}_${user_num} BudgetBreakdown don't exist in prod !
    \    expandAllCriteria    ${budgetBreakdown_list_criteriaCount}    ${budgetBreakdown_list_criteriaExpand_numPH}
    \    ${prod_BB_listPage}    run keyword if    ${prod_criteriaCount} > 0    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    ${stage_browser}    enterModel    @{envs}[1]    Budget Breakdown List    bbestseller_copy    ${browser_profile_2}
    \    wait until element contains    ${mainPage}    BudgetBreakdownList    20
    \    ${stage_BB_listPage_original}    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    ${stage_criteriaCount}    get matching xpath count    ${budgetBreakdown_list_criteriaCount}
    \    Run Keyword And Continue On Failure    run keyword if    ${stage_criteriaCount}== 0    fail    ${userName}_${user_num} BudgetBreakdown don't exist in stage!
    \    expandAllCriteria    ${budgetBreakdown_list_criteriaCount}    ${budgetBreakdown_list_criteriaExpand_numPH}
    \    ${stage_BB_listPage}    run keyword if    ${prod_criteriaCount} > 0    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    ${BB_listPage_diff}    diff text    ${prod_BB_listPage_original}    ${stage_BB_listPage_original}
    \    ${BB_listPageExpand_diff}    diff text    ${prod_BB_listPage}    ${stage_BB_listPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${BB_listPage_diff}    fail    ${userName}_${user_num} BudgetBreakdown listPage Diff !
    \    run keyword if    ${BB_listPage_diff}    write html file with inner html    ${stage_BB_listPage_original}    ${prod_BB_listPage_original}    ${diff_dir}\\${userName}_${User_num}_BB_listPage_diff.html
    \    ...    V
    \    Run Keyword And Continue On Failure    run keyword if    ${BB_listPageExpand_diff}    fail    ${userName}_${user_num} BudgetBreakdown listPageExpand Diff !
    \    run keyword if    ${BB_listPageExpand_diff}    write html file with inner html    ${stage_BB_listPage}    ${prod_BB_listPage}    ${diff_dir}\\${userName}_${User_num}_BB_listPageExpand_diff.html
    \    ...    V
    \    continue for loop if    ${stage_criteriaCount} == 0 or ${prod_criteriaCount} == 0
    \    compareBudgetBreakdownCriteria_tmp    ${prod_browser}    ${stage_browser}    ${stage_criteriaCount}    ${prod_criteriaCount}    ${userName}
    \    ...    ${user_num}    ${visibleFlag}
    \    logout close browser    ${prod_browser}
    \    logout close browser    ${stage_browser}
    close all browsers

loadTestingParamForDailyTasks
    [Tags]    DT-LR
    ${user_count}    get users count    ${users_setting}    ${DailyTasks_setting_tab}
    @{envs}    get environment setting    ${users_setting}    ${DailyTasks_setting_tab}
    ${prod}    set variable    @{envs}[0]
    ${stage}    set variable    @{envs}[1]
    : FOR    ${user_num}    IN RANGE    0    ${user_count}
    \    ${userName}    get user    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}
    \    @{user_criteria}    get user criteria    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_criteria_colNumber}
    \    ${user_criteria_count}    get length    '@{user_criteria}'
    \    ${DT_taskType}    get cell value    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_taskType_colNumber}
    \    ${DT_screenType}    get cell value    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_screenType_colNumber}
    \    ${DT_status}    get cell value    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_status_colNumber}
    \    ${DT_orderCity}    get cell value    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_orderCity_colNumber}
    \    ${DT_fromDate}    get cell value    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_fromDate_colNumber}
    \    ${DT_toDate}    get cell value    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_toDate_colNumber}
    \    ${DT_timeRange}    get cell value    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_timeRange_colNumber}
    \    ${DT_visibleFlag}    get cell value    ${users_setting}    ${DailyTasks_setting_tab}    ${user_num}    ${DailyTasks_visibleFlag_colNumber}
    \    ${prod_browser}    enterModel    @{envs}[0]    Daily Tasks    ${userName}    ${browser_profile_1}
    \    wait until element contains    ${mainPage}    DailyTask    20
    \    ${prod_DT_criteriaPage_original}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${prod_DT_criteriaPage_original}
    \    run keyword if    '${DT_taskType}'    select from list by label    ${DailyTasks_criteria_Dropdown_TaskType}    ${DT_taskType}
    \    run keyword if    '${DT_screenType}'    select from list by label    ${DailyTasks_criteria_Dropdown_ScreenType}    ${DT_screenType}
    \    run keyword if    '${DT_status}'    select from list by label    ${DailyTasks_criteria_Dropdown_Status}    ${DT_status}
    \    run keyword if    '${DT_orderCity}'    select from list by label    ${DailyTasks_criteria_Dropdown_OrderCity}    ${DT_orderCity}
    \    run keyword if    '${DT_fromDate}'    input text    ${DailyTasks_criteria_Text_FromDate}    ${DT_fromDate}
    \    run keyword if    '${DT_toDate}'    input text    ${DailyTasks_criteria_Text_ToDate}    ${DT_toDate}
    \    run keyword if    '${DT_timeRange}' == 'In DC Date'    click element    ${DailyTasks_criteria_Radio_InDCDate}
    \    run keyword if    '${DT_timeRange}' == 'Shop Date'    click element    ${DailyTasks_criteria_Radio_ShopDate}
    \    ${removeFilter_count}    get matching xpath count    ${DailyTasks_criteria_removeFilter_count}
    \    run keyword if    ${removeFilter_count}>1    removeFilters    ${DailyTasks_criteria_Button_removeFilter_rowPlaceHold}    ${removeFilter_count}    ${DailyTasks_criteria_Dropdown_filterHierarchy1}
    \    run keyword if    ${removeFilter_count}==1    Select From List by index    ${DailyTasks_criteria_Dropdown_filterHierarchy1}    0
    \    run keyword if    ${user_criteria_count} >0    selectCustomCriteria    ${DailyTasks_criteria_Dropdown_filterHierarchy1}    ${DailyTasks_criteria_Option_filterHierarachy1}    ${DailyTasks_criteria_Options_filterHierarachy1}
    \    ...    ${DailyTasks_criteria_filterHierarachy1_optionCount}    Xpath=${DailyTasks_criteria_filterHierarachy1_rowCount}//input[@title='Add Filter']    ${DailyTasks_criteria_filterHierarachy1_rowCount}    @{user_criteria}
    \    sleep    3S
    \    click element    ${DailyTasks_criteria_top_submit}
    \    sleep    3S
    \    #    Wait Until Page Does Not Contain    Processing...    30
    \    #    Wait Until Page Does Not Contain    Processing...    120
    \    Wait Until Page Contains    ${DT_taskType}    1200
    \    sleep    5S
    \    ${prod_downloadCount_path}    replace string    ${DailyTasks_Button_Excel}    Xpath=    \    1
    \    ${prod_downloadCount}    get matching xpath count    ${prod_downloadCount_path}
    \    ${prod_tabsCount}    get matching xpath count    ${DailyTasks_tabsCount}
    \    run keyword if    ${prod_downloadCount} == 0    log    ${userName}_${user_num} DailyTask May Be Blank!
    \    continue for loop if    ${prod_downloadCount} == 0
    \    click element    Xpath=${DailyTasks_tabsCount}[3]
    \    sleep    5S
    \    Wait Until Page Does Not Contain    Processing...    600
    \    Wait Until Page Contains Element    ${DailyTasks_tab_selected}    60
    \    Wait Until Element Contains    ${DailyTasks_tab_selected}    Detail by Color by Door    20
    \    sleep    5S
    \    ${receiver#}    execute javascript    ${ZK_DailyTask_loadTestingParam_receiver#_jquery}
    \    run keyword if    '${receiver#}' == ''    logout close browser    ${prod_browser}
    \    continue for loop if    '${receiver#}' == ''
    \    click element    ${DailyTasks_Button_Populate}
    \    sleep    5S
    \    Wait Until Page Does Not Contain    Processing...    600
    \    Wait Until Element Is Visible    ${DailyTasks_Panel_PopulateBtnSubmit}    60
    \    select from list by label    ${DailyTasks_Panel_PopulateSelect}    Push
    \    click element    ${DailyTasks_Panel_PopulateBtnSubmit}
    \    Wait Until Element Is Not Visible    ${DailyTasks_Panel_PopulateBtnSubmit}    100
    \    Wait Until Page Does Not Contain    Processing...    600
    \    sleep    5S
    \    ${editCell}    loadTestingDTEditCell    ${receiver#}
    \    writeZKLoadTestingParamForDT    ${userName}    ${password}    ${receiver#}    ${editCell}    ${ZKLoadTestingParam_DT_dir}
    \    logout close browser    ${prod_browser}
    close all browsers

loadTestingParamForTransfer
    [Tags]    tmp
    ${user_count}    get users count    ${users_setting}    ${Transfer_setting_tab}
    @{envs}    get environment setting    ${users_setting}    ${Transfer_setting_tab}
    ${prod}    set variable    @{envs}[0]
    ${stage}    set variable    @{envs}[1]
    : FOR    ${user_num}    IN RANGE    0    ${user_count}
    \    ${userName}    get user    ${users_setting}    ${Transfer_setting_tab}    ${user_num}
    \    set Suite variable    \${userName}    ${userName}
    \    @{user_criteria}    get user criteria    ${users_setting}    ${Transfer_setting_tab}    ${user_num}    ${Transfer_criteria_colNumber}
    \    ${user_criteria_count}    get length    '@{user_criteria}'
    \    ${Transfer_taskType}    get cell value    ${users_setting}    ${Transfer_setting_tab}    ${user_num}    ${Transfer_taskType_colNumber}
    \    ${prod_browser}    enterModel    @{envs}[0]    Daily Tasks    ${userName}    ${browser_profile_1}
    \    wait until element contains    ${mainPage}    DailyTask    20
    \    ${prod_DT_criteriaPage_original}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${prod_DT_criteriaPage_original}
    \    run keyword if    '${Transfer_taskType}'    select from list by label    ${DailyTasks_criteria_Dropdown_TaskType}    ${Transfer_taskType}
    \    run keyword if    '${Transfer_taskType}'    list selection should be    ${DailyTasks_criteria_Dropdown_TaskType}    ${Transfer_taskType}
    \    ${removeFilter_count}    get matching xpath count    ${DailyTasks_criteria_removeFilter_count}
    \    run keyword if    ${removeFilter_count}>1    removeFilters    ${DailyTasks_criteria_Button_removeFilter_rowPlaceHold}    ${removeFilter_count}    ${DailyTasks_criteria_Dropdown_filterHierarchy1}
    \    run keyword if    ${removeFilter_count}==1    Select From List by index    ${DailyTasks_criteria_Dropdown_filterHierarchy1}    0
    \    run keyword if    ${user_criteria_count} >0    selectCustomCriteria    ${DailyTasks_criteria_Dropdown_filterHierarchy1}    ${DailyTasks_criteria_Option_filterHierarachy1}    ${DailyTasks_criteria_Options_filterHierarachy1}
    \    ...    ${DailyTasks_criteria_filterHierarachy1_optionCount}    Xpath=${DailyTasks_criteria_filterHierarachy1_rowCount}//input[@title='Add Filter']    ${DailyTasks_criteria_filterHierarachy1_rowCount}    @{user_criteria}
    \    sleep    3S
    \    click element    ${DailyTasks_criteria_top_submit}
    \    sleep    3S
    \    #    Wait Until Page Does Not Contain    Processing...    30
    \    Wait Until Page Does Not Contain    Processing...    120
    \    #    Wait Until Page Contains    ${Transfer_taskType}    120
    \    Wait Until Element Contains    ${DailyTasks_tab_selected}    Style Color List    120
    \    sleep    5S
    \    ${prod_populateCount_path}    replace string    ${DailyTasks_Button_Populate}    Xpath=    \    1
    \    ${prod_populateCount}    get matching xpath count    ${prod_populateCount_path}
    \    ${prod_tabsCount}    get matching xpath count    ${DailyTasks_tabsCount}
    \    run keyword if    ${prod_populateCount} == 0    log    ${userName}_${user_num} Transfer May Be Blank!
    \    continue for loop if    ${prod_populateCount} == 0
    \    click element    ${DailyTasks_Button_Populate}
    \    sleep    5S
    \    Wait Until Element Is Visible    ${DailyTasks_Panel_PopulateBtnSubmit}    60
    \    click element    ${DailyTasks_Panel_PopulateBtnSubmit}
    \    Wait Until Element Is Not Visible    ${DailyTasks_Panel_PopulateBtnSubmit}    100
    \    Wait Until Page Does Not Contain    Processing...    40
    \    sleep    5S
    \    ${editBtnRowInfo}    execute javascript    ${ZK_DailyTasks_Transfer_editBtnRow_jquery}
    \    @{editBtnList}    split string    ${editBtnRowInfo}    /
    \    click element    ${DailyTasks_Button_addStyle}
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    40
    \    Wait Until Element contains    ${DailyTasks_tab_selected}    Add Style    60
    \    sleep    3S
    \    ${addStyleCount}    get matching xpath count    ${DailyTasks_Transfer_addStyle_styleCount}
    \    ${addStyleCountStr}    convert to string    ${addStyleCount}
    \    ${firstCheckBoxCountPath}    replace string    ${DailyTasks_Transfer_addStyle_checkBox_first}    Xpath=    ${EMPTY}
    \    click element    ${DailyTasks_Transfer_addStyle_checkBox_first}
    \    sleep    1S
    \    ${firstCheckBoxCount}    get matching xpath count    ${firstCheckBoxCountPath}
    \    run keyword if    ${firstCheckBoxCount}>0    click element    ${DailyTasks_Transfer_addStyle_checkBox_first}
    \    ${secondCheckBoxPath}    replace string    ${DailyTasks_Transfer_addStyle_checkBox_first}    [3]    [4]
    \    ${secondCheckBoxCountPath}    replace string    ${firstCheckBoxCountPath}    [3]    [4]
    \    sleep    1S
    \    #    ${selectCount}    get matching xpath count    //div[@class="zsselecti zsselecti-r"]
    \    #    run keyword if    ${selectCount}>0    click element    Xpath=//div[@class="zsselecti zsselecti-r"]
    \    press key    ${DailyTasks_Transfer_addStyle_checkedBox_first}    \\13
    \    click element    //div[@class="zsselecti"]
    \    click element    ${secondCheckBoxPath}
    \    sleep    1S
    \    ${secondCheckBoxCount}    get matching xpath count    ${secondCheckBoxCountPath}
    \    run keyword if    ${secondCheckBoxCount}>0    click element    ${secondCheckBoxPath}
    \    sleep    1S
    \    click element    ${DailyTasks_Button_SaveClose}
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    40
    \    Wait Until Element contains    ${DailyTasks_tab_selected}    Style Color List    60
    \    sleep    3S
    \    Run Keyword And Continue On Failure    run keyword if    '${editBtnRowInfo}' == '${EMPTY}'    Fail    Edit Button isn't existing!
    \    continue for loop if    '${editBtnRowInfo}' == '${EMPTY}'
    \    LoadEditBtnRowInfo    ${addStyleCountStr}    @{editBtnList}
    \    logout close browser    ${prod_browser}
    close all browsers

compareAssortmentMix_allDoorInfo
    [Tags]
    ${user_count}    get users count    ${users_setting}    ${AssortmentMix_setting_tab}
    @{envs}    get environment setting    ${users_setting}    ${AssortmentMix_setting_tab}
    ${prod}    set variable    @{envs}[0]
    ${stage}    set variable    @{envs}[1]
    : FOR    ${user_num}    IN RANGE    0    ${user_count}
    \    ${userName}    get user    ${users_setting}    ${AssortmentMix_setting_tab}    ${user_num}
    \    @{user_criteria}    get user criteria    ${users_setting}    ${AssortmentMix_setting_tab}    ${user_num}    ${AssortmentMix_criteria_colNumber}
    \    ${user_criteria_count}    get length    '@{user_criteria}'
    \    ${visibleFlag}    get cell value    ${users_setting}    ${AssortmentMix_setting_tab}    ${user_num}    ${AssortmentMix_visibleFlag_colNumber}
    \    ${prod_browser}    enterModel    @{envs}[0]    Assortment Mix    ${userName}    ${browser_profile_1}
    \    wait until element contains    ${mainPage}    AssortmentMix    20
    \    ${prod_AM_criteriaPage_original}    execute javascript    ${page_html_nochange_jquery}
    \    ${removeFilter_count}    get matching xpath count    ${AssortmentMix_criteria_removeFilter_count}
    \    run keyword if    ${removeFilter_count}>1    removeFilters    ${AssortmentMix_criteria_Button_removeFilter_rowPlaceHold}    ${removeFilter_count}    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}
    \    run keyword if    ${removeFilter_count}==1    Select From List by index    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}    0
    \    run keyword if    ${user_criteria_count} >0    selectCustomCriteria    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}    ${AssortmentMix_criteria_Option_filterHierarachy1}    ${AssortmentMix_criteria_Options_filterHierarachy1}
    \    ...    ${AssortmentMix_criteria_filterHierarachy1_optionCount}    Xpath=${AssortmentMix_criteria_filterHierarachy1_rowCount}//input[@title='Add Filter']    ${AssortmentMix_criteria_filterHierarachy1_rowCount}    @{user_criteria}
    \    sleep    3S
    \    ${prod_AM_criteriaPage}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${prod_AM_criteriaPage}
    \    click element    ${AssortmentMix_criteria_top_submit}
    \    sleep    3S
    \    #    Wait Until Page Does Not Contain    Processing...    20
    \    #    Wait Until Page Does Not Contain    initializing...    120
    \    Wait Until Page Contains    AssortmentMix    120
    \    sleep    5S
    \    ${prod_downloadCount_path}    replace string    ${AssortmentMix_Button_Excel}    Xpath=    \    1
    \    ${prod_downloadCount}    get matching xpath count    ${prod_downloadCount_path}
    \    run keyword if    ${prod_downloadCount} > 0    click element    ${AssortmentMix_Button_TargetDoors}
    \    run keyword if    ${prod_downloadCount} > 0    Wait Until Page Does Not Contain    Processing...    120
    \    run keyword if    ${prod_downloadCount} > 0    Wait Until Page Contains    Target Doors    20
    \    run keyword if    ${prod_downloadCount} > 0    click element    ${AssortmentMix_Button_Excel}
    \    ${prod_AM_excel}    run keyword if    ${prod_downloadCount} > 0    handleSaveFileWindow    ${prod_download_dir}    AM_${userName}_${user_num}.xlsx
    \    ${prod_AM_excel_visible}    run keyword if    '${visibleFlag}'=='1'    copy ZK Visible XLSX    ${prod_AM_excel}
    \    execute javascript    $(".zsscroll").scrollLeft(4800)
    \    #    run keyword if    ${prod_downloadCount} > 0    click element    ${AssortmentMix_tab_AssortmentMix}
    \    #    run keyword if    ${prod_downloadCount} > 0    Wait Until Page Does Not Contain    Processing...    20
    \    #    run keyword if    ${prod_downloadCount} > 0    Wait Until Page Contains    AssortmentMix    20
    \    #    ${prod_tabsCount}    get matching xpath count    ${ZK_tabsCount}
    \    ${stage_browser}    enterModel    @{envs}[1]    Assortment Mix    ${userName}    ${browser_profile_2}
    \    wait until element contains    ${mainPage}    AssortmentMix    20
    \    ${stage_AM_criteriaPage_original}    execute javascript    ${page_html_nochange_jquery}
    \    ${removeFilter_count}    get matching xpath count    ${AssortmentMix_criteria_removeFilter_count}
    \    run keyword if    ${removeFilter_count}>1    removeFilters    ${AssortmentMix_criteria_Button_removeFilter_rowPlaceHold}    ${removeFilter_count}    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}
    \    run keyword if    ${removeFilter_count}==1    Select From List by index    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}    0
    \    run keyword if    ${user_criteria_count} >0    selectCustomCriteria    ${AssortmentMix_criteria_Dropdown_filterHierarchy1}    ${AssortmentMix_criteria_Option_filterHierarachy1}    ${AssortmentMix_criteria_Options_filterHierarachy1}
    \    ...    ${AssortmentMix_criteria_filterHierarachy1_optionCount}    Xpath=${AssortmentMix_criteria_filterHierarachy1_rowCount}//input[@title='Add Filter']    ${AssortmentMix_criteria_filterHierarachy1_rowCount}    @{user_criteria}
    \    sleep    3S
    \    ${stage_AM_criteriaPage}    execute javascript    ${page_html_nochange_jquery}
    \    #    log many    ${stage_AM_criteriaPage}
    \    click element    ${AssortmentMix_criteria_top_submit}
    \    sleep    3S
    \    #    Wait Until Page Does Not Contain    Processing...    20
    \    #    Wait Until Page Does Not Contain    initializing...    120
    \    Wait Until Page Contains    Assortment Mix    120
    \    sleep    5S
    \    ${stage_downloadCount_path}    replace string    ${AssortmentMix_Button_Excel}    Xpath=    \    1
    \    ${stage_downloadCount}    get matching xpath count    ${stage_downloadCount_path}
    \    ${AM_criteriaPage_diff}    diff text    ${prod_AM_criteriaPage}    ${stage_AM_criteriaPage}
    \    ${AM_criteriaPageOriginal_diff}    diff text    ${prod_AM_criteriaPage_original}    ${stage_AM_criteriaPage_original}
    \    Run Keyword And Continue On Failure    run keyword if    ${AM_criteriaPage_diff}    fail    ${userName}_${user_num} AM criteriaPage Diff !
    \    run keyword if    ${AM_criteriaPage_diff}    write html file with inner html    ${stage_AM_criteriaPage}    ${prod_AM_criteriaPage}    ${diff_dir}\\${userName}_${User_num}_AM_criteriaPage_diff.html
    \    ...    V
    \    Run Keyword And Continue On Failure    run keyword if    ${AM_criteriaPage_diff}    fail    ${userName}_${user_num} AM criteriaPageOriginal Diff !
    \    run keyword if    ${AM_criteriaPageOriginal_diff}    write html file with inner html    ${stage_AM_criteriaPage_original}    ${prod_AM_criteriaPage_original}    ${diff_dir}\\${userName}_${User_num}_AM_criteriaPageOriginal_diff.html
    \    ...    V
    \    run keyword if    ${stage_downloadCount} == 0 or ${prod_downloadCount} == 0    log    ${userName}_${user_num} DailyTask May Be Blank!
    \    continue for loop if    ${stage_downloadCount} == 0 or ${prod_downloadCount} == 0
    \    click element    ${AssortmentMix_Button_TargetDoors}
    \    Wait Until Page Does Not Contain    Processing...    120
    \    Wait Until Page Contains    Target Doors    20
    \    click element    ${AssortmentMix_Button_Excel}
    \    ${stage_AM_excel}    handleSaveFileWindow    ${stage_download_dir}    AM_${userName}_${user_num}.xlsx
    \    ${stage_AM_excel_visible}    run keyword if    '${visibleFlag}'=='1'    copy ZK Visible XLSX    ${stage_AM_excel}
    \    execute javascript    $(".zsscroll").scrollLeft(4800)
    \    #    click element    ${AssortmentMix_tab_AssortmentMix_new}
    \    #    Wait Until Page Does Not Contain    Processing...    20
    \    #    Wait Until Page Contains    Assortment Mix    20
    \    #    Run Keyword And Continue On Failure    run keyword if    '${visibleFlag}'=='1'    compare XLSX    ${stage_AM_excel_visible}
    \    ...    # ${prod_AM_excel_visible}    ${diff_dir}\\${userName}_${user_num}_AM_downloadVisible_Diff.txt    # ELSE    compare XLSX    ${stage_AM_excel}
    \    ...    # ${prod_AM_excel}    ${diff_dir}\\${userName}_${user_num}_AM_download_Diff.txt
    \    #    ${stage_tabsCount}    get matching xpath count    ${ZK_tabsCount}
    \    #    Run Keyword And Continue On Failure    run keyword if    ${stage_tabsCount} != ${prod_tabsCount}    fail    ${userName}_${user_num} DailyTask TabsCount Diff !
    \    #    compareAMTabs    ${prod_browser}    ${stage_browser}    ${userName}    ${user_num}
    \    ...    # ${stage_tabsCount}    ${ZK_tabsCount}    ${ZK_sheet_deleteHiddenNodes_jquery}    AssortmentMix
    \    switch browser    ${prod_browser}
    \    #    execute javascript    $(".zsscroll").scrollTop(0)
    \    #    sleep    3S
    \    #    Wait Until Page Does Not Contain    Processing...    100
    \    execute javascript    $(".zsscroll").scrollLeft(0)
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    100
    \    switch browser    ${prod_browser}
    \    #    execute javascript    $(".zsscroll").scrollTop(0)
    \    #    sleep    3S
    \    #    Wait Until Page Does Not Contain    Processing...    100
    \    execute javascript    $(".zsscroll").scrollLeft(0)
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    100
    \    compareAMDoorInfoTabs    3    ${prod_browser}    ${stage_browser}    ${userName}    ${user_num}
    \    ...    ${visibleFlag}
    \    logout close browser    ${prod_browser}
    \    logout close browser    ${stage_browser}
    close all browsers

*** Keywords ***
selectCustomCriteria
    [Arguments]    ${advanced_filter}    ${advanced_filter_option}    ${advanced_filter_options}    ${advanced_filter_optionCount}    ${advanced_addFilter}    ${advanced_filter_row}
    ...    @{criteria}
    ${temp}    set variable    1
    : FOR    ${st}    IN    @{criteria}
    \    @{st_key}    split string    ${st}    /
    \    ${key_name}    set variable    @{st_key}[0]
    \    @{key_values}    split string    @{st_key}[1]    ,
    \    ${key_values_string}    convert to string    @{st_key}[1]
    \    Select From List by label    ${advanced_filter}    ${key_name}
    \    wait until page contains element    ${advanced_filter_option}[1]    100
    \    click element    ${advanced_filter_options}
    \    checkCustomInDropdown    ${advanced_filter_option}    ${advanced_filter_options}    ${advanced_filter_optionCount}    @{key_values}
    \    execute javascript    ${option_getValues}
    \    ${selected_criteria_item}    get text    ${advanced_filter_options}/div[1]
    \    ${selected_criteria_item}    replace string    ${selected_criteria_item}    ,\ \    ,
    \    Run Keyword And Continue On Failure    Should Be Equal    ${selected_criteria_item}    ${key_values_string}
    \    click element    ${advanced_addFilter}
    \    ${temp+1}    Evaluate    ${temp}+1
    \    ${temp+1_string}    convert to string    ${temp+1}
    \    ${temp_string}    convert to string    ${temp}
    \    ${tt_id}    replace string    ${advanced_filter_row}    ${temp_string}    ${temp+1_string}
    \    ${tt}    replace string    ${advanced_filter}    ${temp_string}    ${temp+1_string}
    \    ${advanced_filter}    set variable    ${tt}
    \    ${tt}    replace string    ${advanced_filter_options}    ${advanced_filter_row}    ${tt_id}
    \    ${advanced_filter_options}    set variable    ${tt}
    \    ${tt}    replace string    ${advanced_filter_option}    ${advanced_filter_row}    ${tt_id}
    \    ${advanced_filter_option}    set variable    ${tt}
    \    ${tt}    replace string    ${advanced_filter_optionCount}    ${advanced_filter_row}    ${tt_id}
    \    ${advanced_filter_optionCount}    set variable    ${tt}
    \    ${tt}    replace string    ${advanced_addFilter}    ${advanced_filter_row}    ${tt_id}
    \    ${advanced_addFilter}    set variable    ${tt}
    \    ${advanced_filter_row}    set variable    ${tt_id}
    \    ${temp}    Evaluate    ${temp}+1

saveExcelWindow
    [Arguments]    ${downloadfile_dir}    ${main_window}
    win wait    ${download_save_title_firefox}    \    4000
    win active    ${download_save_title_firefox}
    win set on top    ${download_save_title_firefox}    \    1
    sleep    5S
    control set text    ${download_save_title_firefox}    \    ${download_save_filename}    ${downloadfile_dir}\\${userName}_${user_num}.xlsx
    control click    ${download_save_title_firefox}    \    ${download_save_save}
    sleep    40S
    ${downloadfile_name}    set variable    ${downloadfile_dir}\\${userName}_${user_num}.xlsx
    select window    ${main_window}
    [Return]    ${downloadfile_name}

enterModel
    [Arguments]    ${environment_URL}    ${model}    ${user}    ${browser_profile}
    ${browser}    environmentInit and login    ${environment_URL}    ${user}    ${browser_profile}
    #    Set browser Implicit Wait    10
    : FOR    ${round}    IN RANGE    0    1000
    \    click element    ${navigation_menu}
    \    sleep    5S
    \    ${menu_display}    get element attribute    ${navigation_menu_open}@class
    \    #    ${menu_display}    get element attribute    ${menu_section}@style
    \    #    exit for loop if    '${menu_display}' == 'display: block;'
    \    exit for loop if    '${menu_display}' == 'open'
    #    run keyword if    '${menu_display}' == 'display: block;'    click link    ${model}
    #    run keyword if    '${menu_display}' =='display: none;'    fail
    run keyword if    '${menu_display}' == 'open'    click link    ${model}
    run keyword if    '${menu_display}' !='open'    fail
    capture page screenshot
    [Return]    ${browser}

removeFilters
    [Arguments]    ${path}    ${count}    ${filter1_dropdown}
    : FOR    ${ot}    IN RANGE    0    ${count}-1
    \    ${temp}    evaluate    ${count}-${ot}
    \    ${temp}    convert to string    ${temp}
    \    ${path_temp}    replace string    ${path}    row    ${temp}
    \    click element    ${path_temp}
    Select From List by index    ${filter1_dropdown}    0

checkCertainOption
    [Arguments]    ${path}    ${path_options}    ${key_counts}    ${key_name}    ${suffix}
    : FOR    ${ott}    IN RANGE    2    ${key_counts}+1
    \    ${path_temp}    set variable    ${path}[${ott}]
    \    ${path_checked}    set variable    ${path}[${ott}]${suffix}
    \    ${options_visiable}    get element attribute    ${path_options}[1]/div[2]@class
    \    run keyword if    '${options_visiable}' != 'multiC on'    execute javascript    ${option_expand_jquery}
    \    #    run key word if    '${options_visiable}' == 'multiC'    click element    ${path_options}[1]/div[1]
    \    ${temp_name}    get text    ${path_temp}
    \    ${temp_name}    replace string    ${temp_name}    '    _
    \    ${key_name}    replace string    ${key_name}    '    _
    \    #    ${options_visiable}    get element attribute    ${path_options}[1]/div[2]@class
    \    #    run key word if    '${options_visiable}' == 'multiC'    click element    ${path_options}[1]/div[1]
    \    run keyword if    '${temp_name}' and '${key_name}' =='${temp_name}'    click element    ${path_checked}
    \    #    run keyword if    '${temp_name}' and '${key_name}' =='${temp_name}'    click element    ${path_options}
    \    #    ${checked_target}    get element attribute    ${path_temp}@class
    \    #    run keyword if    '${temp_name}' and '${key_name}' =='${temp_name}' and '${checked_target}' != 'checkedrowcolor'    click element    ${path_checked}
    \    #    run keyword if    '${temp_name}' and '${key_name}' =='${temp_name}' and '${checked_target}' == 'checkedrowcolor'    click element    ${path_options}[1]/div[1]
    \    exit for loop if    '${temp_name}' and '${key_name}' =='${temp_name}'
    \    #    ${temp}    run keyword if    not '${temp_name}'    redoGetText    ${path_temp}
    \    ...    #${path_options}
    \    #    run keyword if    '${temp}' and '${temp}' == '${key_name}' and not '${temp_name}'    reloadDropdown    ${path_temp}    ${path_options}
    \    ...    #${path_checked}

redoGetText
    [Arguments]    ${path}    ${path_options}
    #    set browser implicit wait    10S
    ${options_visiable}    get element attribute    ${path_options}[1]/div[2]@class
    run key word if    '${options_visiable}' == 'multiC'    click element    ${path_options}[1]/div[1]
    ${temp}    get text    ${path}
    [Return]    ${temp}

reloadDropdown
    [Arguments]    ${path}    ${path_options}    ${path_input}
    ${temp_text}    get text    ${path}
    run keyword if    not '${temp_text}'    click element    ${path_options}/div[1]
    click element    ${path_input}
    ${checked_flag}    get element attribute    ${path}@class
    run keyword if    '${checked_flag}' != 'checkedrowcolor'    click element    ${path_input}
    [Return]    ${temp_name}

checkCustomInDropdown
    [Arguments]    ${path}    ${path_options}    ${path_option_count}    @{key_values}
    ${all_checked}    get text    ${path_options}[1]/div[1]
    #    click element    ${path_options}[1]/div[1]
    execute javascript    ${option_expand_jquery}
    run keyword if    '${all_checked}' != 'All Selected'    click element    ${path}[1]//input
    #    run keyword if    '${all_checked}' != 'All Selected'    click element    ${path_options}[1]/div[1]
    execute javascript    ${option_getValues}
    : FOR    ${ot}    IN    @{key_values}
    \    #    ${options_visiable}    get element attribute    ${path_options}[1]/div[2]@class
    \    #    run key word if    '${options_visiable}' == 'multiC'    click element    ${path_options}[1]/div[1]
    \    execute javascript    ${option_expand_jquery}
    \    ${option_count}    get matching xpath count    ${path_option_count}
    \    checkCertainOption    ${path}    ${path_options}    ${option_count}    ${ot}    //input
    \    #    click element    ${path_options}/div[1]
    execute javascript    ${option_collapse_jquery}

compareDropdownItems
    [Arguments]    ${prod_browser}    ${stage_browser}    ${dropdown_path}    ${submit_path}    ${diff_sort}    ${back_flag}
    ...    ${homePageName}
    Switch browser    ${prod_browser}
    @{prod_list_items}    get list items    ${dropdown_path}
    Switch browser    ${stage_browser}
    @{stage_list_items}    get list items    ${dropdown_path}
    Run Keyword And Continue On Failure    run keyword if    @{stage_list_items} != @{prod_list_items} or @{stage_list_items} == 0    fail    Dropdown Items Diff or Dropdown Items NOT EXIST!
    return from keyword if    @{stage_list_items} != @{prod_list_items} or @{stage_list_items} == 0
    : FOR    ${current_item}    IN    @{stage_list_items}
    \    Switch browser    ${prod_browser}
    \    select from list by label    ${dropdown_path}    ${current_item}
    \    click button    ${submit_path}
    \    run keyword if    ${back_flag}==1    wait until page contains element    ${pageName_first}    20
    \    run keyword if    ${back_flag}==1    wait until element does not contain    ${pageName_first}    ${homePageName}    20
    \    ...    ELSE    sleep    10S
    \    ${prod_page}    execute javascript    ${page_html_jquery}
    \    run keyword if    ${back_flag}==1    go back
    \    run keyword if    ${back_flag}==1    wait until page contains element    ${pageName_first}    20
    \    run keyword if    ${back_flag}==1    wait until element contains    ${pageName_first}    ${homePageName}    20
    \    Switch browser    ${stage_browser}
    \    select from list by label    ${dropdown_path}    ${current_item}
    \    click button    ${submit_path}
    \    run keyword if    ${back_flag}==1    wait until page contains element    ${pageName_first}    20
    \    run keyword if    ${back_flag}==1    wait until element does not contain    ${pageName_first}    ${homePageName}    20
    \    ...    ELSE    sleep    10S
    \    ${stage_page}    execute javascript    ${page_html_jquery}
    \    run keyword if    ${back_flag}==1    go back
    \    run keyword if    ${back_flag}==1    wait until page contains element    ${pageName_first}    20
    \    run keyword if    ${back_flag}==1    wait until element contains    ${pageName_first}    ${homePageName}    20
    \    ${page_diff}    diff text    ${stage_page}    ${prod_page}
    \    Run Keyword And Continue On Failure    run keyword if    ${page_diff}    fail    ${userName}_${user_num} ${current_item} Diff
    \    run keyword if    ${page_diff}    write html file with inner html    ${stage_page}    ${prod_page}    ${diff_dir}\\${userName}_${User_num}_${current_item}_diff.html
    \    ...    ${diff_sort}

saveZipToExcelWindow
    [Arguments]    ${downloadfile_dir}    ${main_window}
    run keyword if    '${browser_type}'=='firefox'    win wait    ${download_save_title_firefox}    \    4000
    run keyword if    '${browser_type}'=='firefox'    win active    ${download_save_title_firefox}
    run keyword if    '${browser_type}'=='firefox'    win set on top    ${download_save_title_firefox}    \    1
    run keyword if    '${browser_type}'=='firefox'    sleep    5S
    run keyword if    '${browser_type}'=='firefox'    control set text    ${download_save_title_firefox}    \    ${download_save_filename}    ${downloadfile_dir}\\${userName}_${user_num}.zip
    run keyword if    '${browser_type}'=='firefox'    control click    ${download_save_title_firefox}    \    ${download_save_save}
    run keyword if    '${browser_type}'=='firefox'    sleep    40S
    run keyword if    '${browser_type}'=='chrome'    win wait    ${download_save_title_chrome}    \    4000
    run keyword if    '${browser_type}'=='chrome'    win active    ${download_save_title_chrome}
    run keyword if    '${browser_type}'=='chrome'    win set on top    ${download_save_title_chrome}    \    1
    run keyword if    '${browser_type}'=='chrome'    sleep    5S
    run keyword if    '${browser_type}'=='chrome'    control set text    ${download_save_title_chrome}    \    ${download_save_filename}    ${downloadfile_dir}\\${userName}_${user_num}.zip
    run keyword if    '${browser_type}'=='chrome'    control click    ${download_save_title_chrome}    \    ${download_save_save}
    run keyword if    '${browser_type}'=='chrome'    sleep    40S
    ${downloadfile_name}    extractZIP    ${downloadfile_dir}\\${userName}_${user_num}.zip    ${downloadfile_dir}\\    ${userName}_${user_num}_
    select window    ${main_window}
    [Return]    ${downloadfile_name}

compareExcelList
    [Arguments]    ${excel_name}    ${prod_download_dir}    ${stage_download_dir}
    @{excel_name_list}    split string    ${excel_name}    ,
    : FOR    ${excel}    IN    @{excel_name_list}
    \    run keyword and continue on failure    run keyword if    '${excel}'    compare excel    ${prod_download_dir}${excel}    ${stage_download_dir}${excel}
    \    ...    ${diff_dir}${excel}

saveStyleBankReportWindowInIE
    [Arguments]    ${downloadfile_dir}    ${main_window}    ${current_time}    ${monthly_id}
    win wait    ${download_IE_title}    \    4000
    win activate    ${download_IE_title}
    win set on top    ${download_IE_title}    \    1
    #    control focus    ${download_IE_title}    ${download_IE_saveButton}
    control click    ${download_IE_title}    \    ${download_IE_saveButton}
    win wait    ${download_save_title}    \    40
    win activate    ${download_save_title}
    win set on top    ${download_save_title}    \    1
    sleep    5S
    control set text    ${download_save_title}    \    ${download_save_filename}    ${downloadfile_dir}\\${userName}_${user_num}_${monthly_id}_${current_time}.xls
    control click    ${download_save_title}    \    ${download_save_save}
    ${downloadfile_name}    set variable    ${downloadfile_dir}\\${userName}_${user_num}_${monthly_id}_${current_time}.xls
    #    execute javascript    window.open('','_self','');window.close();
    win wait    ${closeWindow_IE_title}    \    40
    win activate    ${closeWindow_IE_title}
    win set on top    ${closeWindow_IE_title}    \    1
    control click    ${closeWindow_IE_title}    \    ${closeWindow_IE_yesButton}
    select window    ${main_window}
    [Return]    ${downloadfile_name}

handleSaveFileWindow
    [Arguments]    ${saveFileDir}    ${fileName}
    win wait    ${download_save_title_firefox}    \    4000
    win active    ${download_save_title_firefox}
    win set on top    ${download_save_title_firefox}    \    1
    sleep    5S
    control set text    ${download_save_title_firefox}    \    ${download_save_filename}    ${saveFileDir}\\${fileName}
    control click    ${download_save_title_firefox}    \    ${download_save_save}
    sleep    20S
    ${downloadfile_name}    set variable    ${saveFileDir}\\${fileName}
    [Return]    ${downloadfile_name}

selectCell
    [Arguments]    ${cellXpath}
    : FOR    ${loop_num}    IN RANGE    0    100
    \    click element    ${cellXpath}
    \    #    sleep    10S
    \    click element    ${cellXpath}
    \    sleep    10S
    \    ${selectCount}    get matching Xpath count    //div[@class='zsscroll']//div[@class='zsselect']
    \    ${styleCell}    run keyword if    ${selectCount} > 0    get element attribute    Xpath=//div[@class='zsscroll']//div[@class='zsselect']@style
    \    #    ${focusCell}    run keyword if    ${selectCount} > 0    get element attribute    Xpath=//div[@class='zsscroll']//div[@class='zsfocmark']@style
    \    Exit For Loop If    ${selectCount} > 0
    \    run keyword if    ${loop_num} == 100    fail    un-select cell !

compareBPDownload
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    @{downloadItems}
    @{user_criteria}    get user criteria    ${users_setting}    ${BrandProfile_setting_tab}    ${user_num}    ${BrandProfile_criteria_colNumber}
    ${user_criteria_count}    get length    '@{user_criteria}'
    : FOR    ${download}    IN    @{downloadItems}
    \    Switch browser    ${prod}
    \    #    wait until page contains element    ${BP_downloadDropdown}    20
    \    select from list by label    ${BP_downloadDropdown}    ${download}
    \    click element    ${BP_downloadBtn}
    \    run keyword if    ${user_criteria_count} >0 and '${download}' != 'Prepack Ratio' and '${download}' != 'Promotion Type' and '${download}' != 'Promotion Style Door'    selectCustomCriteria    ${BP_downloadCriteria_filterHierarchy1}    ${BP_downloadCriteria_filterHierarchy1_option}    ${BP_downloadCriteria_filterHierarchy1_options}
    \    ...    ${BP_downloadCriteria_filterHierarchy1_optionCount}    Xpath=${BP_downloadCriteria_filterHierarchy1_rowCount}//input[@title='Add Filter']    ${BP_downloadCriteria_filterHierarchy1_rowCount}    @{user_criteria}
    \    sleep    3S
    \    ${prod_BP_downloadCriteria}    run keyword if    ${user_criteria_count} >0 and '${download}' != 'Prepack Ratio' and '${download}' != 'Promotion Type' and '${download}' != 'Promotion Style Door'    execute javascript    ${page_html_jquery}
    \    run keyword if    ${user_criteria_count} >0 and '${download}' != 'Prepack Ratio' and '${download}' != 'Promotion Type' and '${download}' != 'Promotion Style Door'    wait until page contains element    ${BP_downloadBtn}    20
    \    run keyword if    ${user_criteria_count} >0 and '${download}' != 'Prepack Ratio' and '${download}' != 'Promotion Type' and '${download}' != 'Promotion Style Door'    click element    ${BP_downloadBtn}
    \    sleep    3S
    \    @{prod_current_windows}    list windows
    \    ${prod_BP_downloadFile}    handleSaveFileWindow    ${prod_download_dir}    ${download}_${userName}_${user_num}.zip
    \    ${prod_downloadfile_name}    extractZIP    ${prod_BP_downloadFile}    ${prod_download_dir}\\    ${userName}_${user_num}_
    \    sleep    5S
    \    select window    @{prod_current_windows}[0]
    \    run keyword if    '${download}' != 'Prepack Ratio' and '${download}' != 'Promotion Type' and '${download}' != 'Promotion Style Door'    wait until page contains element    ${BP_cancelBtn}    20
    \    run keyword if    '${download}' != 'Prepack Ratio' and '${download}' != 'Promotion Type' and '${download}' != 'Promotion Style Door'    click element    ${BP_cancelBtn}
    \    wait until page contains    Brand Profile    20
    \    Switch browser    ${stage}
    \    #    wait until page contains element    ${BP_downloadDropdown}    20
    \    select from list by label    ${BP_downloadDropdown}    ${download}
    \    click element    ${BP_downloadBtn}
    \    run keyword if    ${user_criteria_count} >0 and '${download}' != 'Prepack Ratio' and '${download}' != 'Promotion Type' and '${download}' != 'Promotion Style Door'    selectCustomCriteria    ${BP_downloadCriteria_filterHierarchy1}    ${BP_downloadCriteria_filterHierarchy1_option}    ${BP_downloadCriteria_filterHierarchy1_options}
    \    ...    ${BP_downloadCriteria_filterHierarchy1_optionCount}    Xpath=${BP_downloadCriteria_filterHierarchy1_rowCount}//input[@title='Add Filter']    ${BP_downloadCriteria_filterHierarchy1_rowCount}    @{user_criteria}
    \    sleep    3S
    \    ${stage_BP_downloadCriteria}    run keyword if    ${user_criteria_count} >0 and '${download}' != 'Prepack Ratio' and '${download}' != 'Promotion Type' and '${download}' != 'Promotion Style Door'    execute javascript    ${page_html_jquery}
    \    run keyword if    ${user_criteria_count} >0 and '${download}' != 'Prepack Ratio' and '${download}' != 'Promotion Type' and '${download}' != 'Promotion Style Door'    wait until page contains element    ${BP_downloadBtn}    20
    \    run keyword if    ${user_criteria_count} >0 and '${download}' != 'Prepack Ratio' and '${download}' != 'Promotion Type' and '${download}' != 'Promotion Style Door'    click element    ${BP_downloadBtn}
    \    sleep    3S
    \    @{stage_current_windows}    list windows
    \    ${stage_BP_downloadFile}    handleSaveFileWindow    ${stage_download_dir}    ${download}_${userName}_${user_num}.zip
    \    ${stage_downloadfile_name}    extractZIP    ${stage_BP_downloadFile}    ${stage_download_dir}\\    ${userName}_${user_num}_
    \    sleep    5S
    \    select window    @{stage_current_windows}[0]
    \    run keyword if    '${download}' != 'Prepack Ratio' and '${download}' != 'Promotion Type' and '${download}' != 'Promotion Style Door'    wait until page contains element    ${BP_cancelBtn}    20
    \    run keyword if    '${download}' != 'Prepack Ratio' and '${download}' != 'Promotion Type' and '${download}' != 'Promotion Style Door'    click element    ${BP_cancelBtn}
    \    wait until page contains    Brand Profile    20
    \    ${BP_dowloadCriteria_diff}    diff text    ${stage_BP_downloadCriteria}    ${prod_BP_downloadCriteria}
    \    Run Keyword And Continue On Failure    run keyword if    ${BP_dowloadCriteria_diff}    fail    ${userName}_${user_num} BP download criteria Diff !
    \    run keyword if    ${BP_dowloadCriteria_diff}    write html file with inner html    ${stage_BP_downloadCriteria}    ${prod_BP_downloadCriteria}    ${diff_dir}\\${userName}_${User_num}_BP_downloadCriteria_diff.html
    \    ...    V
    \    Run Keyword And Continue On Failure    compare excel    ${stage_downloadfile_name}    ${prod_downloadfile_name}    ${diff_dir}\\${download}_${userName}_${user_num}.txt

compareBPSetup
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    @{setupItems}
    : FOR    ${setup}    IN    @{setupItems}
    \    @{target_page}    split string    ${setup}
    \    Switch browser    ${prod}
    \    select from list by label    ${BP_setupDropdown}    ${setup}
    \    ${prod_pageName_first}    get text    ${BP_pageName_first}
    \    click element    ${BP_goBtn}
    \    wait until element does not contain    ${BP_pageName_first}    ${prod_pageName_first}    20
    \    wait until element contains    ${BP_pageName_second}    @{target_page}[1]    20
    \    ${prod_BP_setup}    execute javascript    ${page_html_jquery}
    \    Switch browser    ${stage}
    \    select from list by label    ${BP_setupDropdown}    ${setup}
    \    ${stage_pageName_first}    get text    ${BP_pageName_first}
    \    click element    ${BP_goBtn}
    \    wait until element does not contain    ${BP_pageName_first}    ${prod_pageName_first}    20
    \    wait until element contains    ${BP_pageName_second}    @{target_page}[1]    20
    \    ${stage_BP_setup}    execute javascript    ${page_html_jquery}
    \    ${BP_setup_diff}    diff text    ${stage_BP_setup}    ${prod_BP_setup}
    \    Run Keyword And Continue On Failure    run keyword if    ${BP_setup_diff}    fail    ${userName}_${user_num} BP ${setup} Diff !
    \    run keyword if    ${BP_setup_diff}    write html file with inner html    ${stage_BP_setup}    ${prod_BP_setup}    ${diff_dir}\\${userName}_${user_num}_BP_${setup}_diff.html
    \    ...    V
    \    @{pathSuffix}    create list    /td    /a
    \    run keyword if    '${setup}' != 'Set Clustering' and '${setup}' != 'Allocation Upload Format Setup'    compareBPDetailSetup    ${prod}    ${stage}    ${userName}
    \    ...    ${user_num}    @{target_page}[1]    ${BP_setupDetail_rowCount}    2    @{pathSuffix}
    \    run keyword if    '${setup}' == 'Allocation Upload Format Setup'    compareBPUploadSetup    ${prod}    ${stage}    ${userName}
    \    ...    ${user_num}    @{target_page}[1]    ${BP_setupDetail_rowCount}    2    @{pathSuffix}
    \    run keyword if    '${setup}' == 'Set Clustering'    compareBPSetClustering    ${prod}    ${stage}    ${userName}
    \    ...    ${user_num}    @{target_page}[1]    ${BP_setClustering_checkedbox}    ${BP_setClustering_checkboxCount}    /input[@type='checkbox']
    \    Switch browser    ${prod}
    \    run keyword if    '${setup}' != 'Set Clustering'    wait until page contains element    ${BP_cancelBtn}    20
    \    run keyword if    '${setup}' != 'Set Clustering'    click element    ${BP_cancelBtn}
    \    run keyword if    '${setup}' == 'Set Clustering'    go back
    \    wait until page contains element    ${mainPage}    20
    \    wait until element contains    ${mainPage}    BrandProfile    20
    \    Switch browser    ${stage}
    \    run keyword if    '${setup}' != 'Set Clustering'    wait until page contains element    ${BP_cancelBtn}    20
    \    run keyword if    '${setup}' != 'Set Clustering'    click element    ${BP_cancelBtn}
    \    run keyword if    '${setup}' == 'Set Clustering'    go back
    \    wait until page contains element    ${mainPage}    20
    \    wait until element contains    ${mainPage}    BrandProfile    20

compareBPDetailSetup
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    ${target_page}    ${next_pathCount}
    ...    ${level_current}    @{next_path_suffix}
    ${level_total}    get list size    ${next_path_suffix}
    ${suffix_num}    evaluate    ${level_total}-${level_current}
    Switch browser    ${prod}
    wait until page contains element    ${BP_pageName_first}    20
    ${prod_BP_pageName_first}    get text    ${BP_pageName_first}
    ${prod_BP_setupLinkCounts}    get matching xpath count    ${next_pathCount}
    Switch browser    ${stage}
    wait until page contains element    ${BP_pageName_first}    20
    ${stage_BP_pageName_first}    get text    ${BP_pageName_first}
    ${stage_BP_setupLinkCounts}    get matching xpath count    ${next_pathCount}
    Run Keyword And Continue On Failure    run keyword if    ${prod_BP_setupLinkCounts} != ${stage_BP_setupLinkCounts} or ${stage_BP_setupLinkCounts} == 0    fail    ${target_page} Diff or ${target_page} detail level NOT EXIST!
    return from keyword if    ${prod_BP_setupLinkCounts} != ${stage_BP_setupLinkCounts} or ${stage_BP_setupLinkCounts} == 0
    : FOR    ${row}    IN RANGE    1    ${stage_BP_setupLinkCounts}+1
    \    Switch browser    ${prod}
    \    ${prod_BP_setupLinkCounts}    get matching xpath count    ${next_pathCount}[${row}]@{next_path_suffix}[${suffix_num}]
    \    continue for loop if    ${prod_BP_setupLinkCounts} == 0
    \    run keyword if    ${level_current} == 1    click element    Xpath=${next_pathCount}[${row}]@{next_path_suffix}[${suffix_num}]
    \    run keyword if    ${level_current} == 1    wait until page contains element    ${BP_pageName_first}    20
    \    run keyword if    ${level_current} == 1    wait until element does not contain    ${BP_pageName_first}    ${prod_BP_pageName_first}    100
    \    run keyword if    ${level_current} == 1    wait until page contains    ${target_page}    100
    \    ${prod_BP_setupDetailPage}    run keyword if    ${level_current} == 1    execute javascript    ${page_html_jquery}
    \    run keyword if    ${level_current} == 1    sleep    5S
    \    run keyword if    ${level_current} == 1    go back
    \    run keyword if    ${level_current} == 1    wait until page contains element    ${BP_pageName_first}    20
    \    run keyword if    ${level_current} == 1    wait until element contains    ${BP_pageName_first}    ${prod_BP_pageName_first}    20
    \    Switch browser    ${stage}
    \    ${stage_BP_setupLinkCounts}    get matching xpath count    ${next_pathCount}[${row}]@{next_path_suffix}[${suffix_num}]
    \    continue for loop if    ${stage_BP_setupLinkCounts} == 0
    \    run keyword if    ${level_current} == 1    click element    Xpath=${next_pathCount}[${row}]@{next_path_suffix}[${suffix_num}]
    \    run keyword if    ${level_current} == 1    wait until page contains element    ${BP_pageName_first}    20
    \    run keyword if    ${level_current} == 1    wait until element does not contain    ${BP_pageName_first}    ${stage_BP_pageName_first}    100
    \    run keyword if    ${level_current} == 1    wait until page contains    ${target_page}    100
    \    ${stage_BP_setupDetailPage}    run keyword if    ${level_current} == 1    execute javascript    ${page_html_jquery}
    \    run keyword if    ${level_current} == 1    sleep    5S
    \    run keyword if    ${level_current} == 1    go back
    \    run keyword if    ${level_current} == 1    wait until page contains element    ${BP_pageName_first}    20
    \    run keyword if    ${level_current} == 1    wait until element contains    ${BP_pageName_first}    ${stage_BP_pageName_first}    20
    \    ${current_time}    get time    epoch
    \    ${BP_setupDetailPage_diff}    diff text    ${stage_BP_setupDetailPage}    ${prod_BP_setupDetailPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${BP_setupDetailPage_diff}    fail    ${userName}_${user_num} BP setup detail page ${target_page} Diff !
    \    run keyword if    ${BP_setupDetailPage_diff}    write html file with inner html    ${stage_BP_setupDetailPage}    ${prod_BP_setupDetailPage}    ${diff_dir}\\${userName}_${User_num}_BP_${target_page}_diff_${current_time}.html
    \    ...    V
    \    run keyword if    ${level_current} > 1    compareBPDetailSetup    ${prod}    ${stage}    ${userName}
    \    ...    ${user_num}    ${target_page}    ${next_pathCount}[${row}]@{next_path_suffix}[${suffix_num}]    ${level_current}-1    @{next_path_suffix}

compareBPSetClustering
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    ${target_page}    ${expandElement_path}
    ...    ${next_pathCount}    ${next_path_suffix}
    Switch browser    ${prod}
    click element    ${expandElement_path}
    wait until page contains element    ${next_pathCount}    20
    ${prod_cluster_criteriaCounts}    get matching xpath count    ${next_pathCount}
    Switch browser    ${stage}
    click element    ${expandElement_path}
    wait until page contains element    ${next_pathCount}    20
    ${stage_cluster_criteriaCounts}    get matching xpath count    ${next_pathCount}
    Run Keyword And Continue On Failure    run keyword if    ${prod_cluster_criteriaCounts} != ${stage_cluster_criteriaCounts} or ${stage_cluster_criteriaCounts} == 0    fail    ${target_page} Diff or ${target_page} criteria NOT EXIST!
    return from keyword if    ${prod_cluster_criteriaCounts} != ${stage_cluster_criteriaCounts} or ${stage_cluster_criteriaCounts} == 0
    : FOR    ${row}    IN RANGE    1    ${stage_cluster_criteriaCounts}+1
    \    Switch browser    ${prod}
    \    select checkbox    Xpath=${next_pathCount}[${row}]${next_path_suffix}
    \    click element    ${expandElement_path}
    \    sleep    3S
    \    ${prod_checkedbox_name}    get text    ${expandElement_path}
    \    ${prod_BP_setupDetailPage}    execute javascript    ${page_html_jquery}
    \    sleep    5S
    \    click element    ${expandElement_path}
    \    wait until page contains element    Xpath=${next_pathCount}[${row}]${next_path_suffix}    20
    \    unselect checkbox    Xpath=${next_pathCount}[${row}]${next_path_suffix}
    \    Switch browser    ${stage}
    \    select checkbox    Xpath=${next_pathCount}[${row}]${next_path_suffix}
    \    click element    ${expandElement_path}
    \    sleep    3S
    \    ${stage_checkedbox_name}    get text    ${expandElement_path}
    \    ${stage_BP_setupDetailPage}    execute javascript    ${page_html_jquery}
    \    sleep    5S
    \    click element    ${expandElement_path}
    \    wait until page contains element    Xpath=${next_pathCount}[${row}]${next_path_suffix}    20
    \    unselect checkbox    Xpath=${next_pathCount}[${row}]${next_path_suffix}
    \    ${BP_setupDetailPage_diff}    diff text    ${stage_BP_setupDetailPage}    ${prod_BP_setupDetailPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${BP_setupDetailPage_diff}    fail    ${userName}_${user_num} cluster setup ${stage_checkedbox_name} Diff !
    \    run keyword if    ${BP_setupDetailPage_diff}    write html file with inner html    ${stage_BP_setupDetailPage}    ${prod_BP_setupDetailPage}    ${diff_dir}\\${userName}_${User_num}_cluster_setup_${stage_checkedbox_name}_diff.html
    \    ...    V

compareBPUploadSetup
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    ${target_page}    ${next_pathCount}
    ...    ${level_current}    @{next_path_suffix}
    ${level_total}    get list size    ${next_path_suffix}
    ${suffix_num}    evaluate    ${level_total}-${level_current}
    Switch browser    ${prod}
    wait until page contains element    ${BP_pageName_first}    20
    ${prod_BP_pageName_first}    get text    ${BP_pageName_first}
    ${prod_BP_setupLinkCounts}    get matching xpath count    ${next_pathCount}
    Switch browser    ${stage}
    wait until page contains element    ${BP_pageName_first}    20
    ${stage_BP_pageName_first}    get text    ${BP_pageName_first}
    ${stage_BP_setupLinkCounts}    get matching xpath count    ${next_pathCount}
    Run Keyword And Continue On Failure    run keyword if    ${prod_BP_setupLinkCounts} != ${stage_BP_setupLinkCounts} or ${stage_BP_setupLinkCounts} == 0    fail    ${target_page} Diff or ${target_page} detail level NOT EXIST!
    return from keyword if    ${prod_BP_setupLinkCounts} != ${stage_BP_setupLinkCounts} or ${stage_BP_setupLinkCounts} == 0
    : FOR    ${row}    IN RANGE    1    ${stage_BP_setupLinkCounts}+1
    \    Switch browser    ${prod}
    \    ${prod_BP_setupLinkCounts}    get matching xpath count    ${next_pathCount}[${row}]@{next_path_suffix}[${suffix_num}]
    \    continue for loop if    ${prod_BP_setupLinkCounts} == 0
    \    ${prod_link_name}    run keyword if    ${level_current} == 1    get text    Xpath=${next_pathCount}[${row}]@{next_path_suffix}[${suffix_num}]
    \    run keyword if    ${level_current} == 1    click element    Xpath=${next_pathCount}[${row}]@{next_path_suffix}[${suffix_num}]
    \    run keyword if    ${level_current} == 1    wait until page contains element    ${BP_pageName_first}    20
    \    run keyword if    ${level_current} == 1    wait until element does not contain    ${BP_pageName_first}    ${prod_BP_pageName_first}    100
    \    run keyword if    ${level_current} == 1    wait until page contains    ${target_page}    100
    \    ${prod_BP_setupDetailPage}    run keyword if    ${level_current} == 1    execute javascript    ${page_html_jquery}
    \    run keyword if    ${level_current} == 1    sleep    5S
    \    Switch browser    ${stage}
    \    ${stage_BP_setupLinkCounts}    get matching xpath count    ${next_pathCount}[${row}]@{next_path_suffix}[${suffix_num}]
    \    continue for loop if    ${stage_BP_setupLinkCounts} == 0
    \    ${stage_link_name}    run keyword if    ${level_current} == 1    get text    Xpath=${next_pathCount}[${row}]@{next_path_suffix}[${suffix_num}]
    \    run keyword if    ${level_current} == 1    click element    Xpath=${next_pathCount}[${row}]@{next_path_suffix}[${suffix_num}]
    \    run keyword if    ${level_current} == 1    wait until page contains element    ${BP_pageName_first}    20
    \    run keyword if    ${level_current} == 1    wait until element does not contain    ${BP_pageName_first}    ${stage_BP_pageName_first}    100
    \    run keyword if    ${level_current} == 1    wait until page contains    ${target_page}    100
    \    ${stage_BP_setupDetailPage}    run keyword if    ${level_current} == 1    execute javascript    ${page_html_jquery}
    \    run keyword if    ${level_current} == 1    sleep    5S
    \    run keyword if    ${level_current} == 1 and '${stage_link_name}' == '${prod_link_name}' and ('${stage_link_name}' == 'Edit' or '${stage_link_name}' == ' Default')    compareDropdownItems    ${prod}    ${stage}    ${BP_defineUploadFormat_uploadTypeDropdown}
    \    ...    ${BP_defineUploadFormat_goBtn}    V    0    Define
    \    run keyword if    ${level_current} == 1    Switch browser    ${prod}
    \    run keyword if    ${level_current} == 1    click element    ${BP_cancelBtn}
    \    run keyword if    ${level_current} == 1    wait until page contains element    ${BP_pageName_first}    20
    \    run keyword if    ${level_current} == 1    wait until element contains    ${BP_pageName_first}    ${prod_BP_pageName_first}    20
    \    run keyword if    ${level_current} == 1    Switch browser    ${stage}
    \    run keyword if    ${level_current} == 1    click element    ${BP_cancelBtn}
    \    run keyword if    ${level_current} == 1    wait until page contains element    ${BP_pageName_first}    20
    \    run keyword if    ${level_current} == 1    wait until element contains    ${BP_pageName_first}    ${stage_BP_pageName_first}    20
    \    ${current_time}    get time    epoch
    \    ${BP_setupDetailPage_diff}    diff text    ${stage_BP_setupDetailPage}    ${prod_BP_setupDetailPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${BP_setupDetailPage_diff}    fail    ${userName}_${user_num} BP upload setup page Diff !
    \    run keyword if    ${BP_setupDetailPage_diff}    write html file with inner html    ${stage_BP_setupDetailPage}    ${prod_BP_setupDetailPage}    ${diff_dir}\\${userName}_${User_num}_BP_setupUpload_diff_${current_time}.html
    \    ...    V
    \    run keyword if    ${level_current} > 1    compareBPUploadSetup    ${prod}    ${stage}    ${userName}
    \    ...    ${user_num}    ${target_page}    ${next_pathCount}[${row}]@{next_path_suffix}[${suffix_num}]    ${level_current}-1    @{next_path_suffix}

compareScrollPageIF
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    ${pageName}    ${page_num}=1
    ${scroll_position}    evaluate    ${page_num}*700
    switch browser    ${prod}
    ${prod_scrollInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    execute javascript    $(".zsscroll").scrollTop(${scroll_position})
    Wait Until Page Does Not Contain    Processing...    20
    ${prod_scrollInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    switch browser    ${stage}
    ${stage_scrollInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    execute javascript    $(".zsscroll").scrollTop(${scroll_position})
    Wait Until Page Does Not Contain    Processing...    20
    ${stage_scrollInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    ${page_num}    evaluate    ${page_num}+1
    run keyword if    '${prod_scrollInfo_start}' != '${prod_scrollInfo_end}' or '${stage_scrollInfo_start}' != '${stage_scrollInfo_end}'    compareScrollPageIF    ${prod}    ${stage}    ${userName}    ${user_num}
    ...    ${pageName}    ${page_num}

compareScrollPage
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    ${pageName}    ${max_page_num}
    ${prod_scrollInfo_start}    set variable    0
    ${stage_scrollInfo_start}    set variable    0    #    switch browser    ${prod}    #
    ...    #${prod_page}    execute javascript    ${AssortmentMix_Sheet_jquery}    #    switch browser    ${stage}
    ...    #    ${stage_page}    execute javascript    ${AssortmentMix_Sheet_jquery}    #    ${page_diff}
    ...    #diff text    ${prod_page}    ${stage_page}    #    Run Keyword And Continue On Failure    run keyword if
    ...    #${page_diff}    fail    ${userName}_${user_num} ${pageName}_0 Diff !    #    run keyword if    ${page_diff}
    ...    #write html ZK sheet with inner html    ${stage_page}    ${prod_page}    ${diff_dir}\\${userName}_${User_num}_${pageName}_0_diff.html    #H
    : FOR    ${page_num}    IN RANGE    1    ${max_page_num}+1
    \    ${scroll_position}    evaluate    ${page_num}*700
    \    switch browser    ${prod}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    Wait Until Page Does Not Contain    initializing...    120
    \    sleep    5S
    \    #    ${prod_scrollInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollTop(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    ${prod_scrollInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    ${prod_page}    execute javascript    ${DailyTask_jquery}
    \    switch browser    ${stage}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    Wait Until Page Does Not Contain    initializing...    120
    \    sleep    5S
    \    #    ${stage_scrollInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollTop(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    ${stage_scrollInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    ${stage_page}    execute javascript    ${DailyTask_jquery}
    \    ${page_diff}    diff text    ${prod_page}    ${stage_page}
    \    Run Keyword And Continue On Failure    run keyword if    ${page_diff}    fail    ${userName}_${user_num} ${pageName}_${page_num} Diff !
    \    run keyword if    ${page_diff}    write html ZK sheet with inner html    ${stage_page}    ${prod_page}    ${diff_dir}\\${userName}_${User_num}_${pageName}_${page_num}_diff.html
    \    ...    H
    \    exit for loop if    '${prod_scrollInfo_start}' == '${prod_scrollInfo_end}' and '${stage_scrollInfo_start}' == '${stage_scrollInfo_end}'
    \    ${prod_scrollInfo_start}    set variable    ${prod_scrollInfo_end}
    \    ${stage_scrollInfo_start}    set variable    ${stage_scrollInfo_end}

compareDTScrollPage_append
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    ${pageName}    ${max_page_num}
    ...    ${max_leftPage_num}
    ${prod_scrollInfo_start}    set variable    0
    ${stage_scrollInfo_start}    set variable    0    #    switch browser    ${prod}    #
    ...    #${prod_page}    execute javascript    ${AssortmentMix_Sheet_jquery}    #    switch browser    ${stage}
    ...    #    ${stage_page}    execute javascript    ${AssortmentMix_Sheet_jquery}    #    ${page_diff}
    ...    #diff text    ${prod_page}    ${stage_page}    #    Run Keyword And Continue On Failure    run keyword if
    ...    #${page_diff}    fail    ${userName}_${user_num} ${pageName}_0 Diff !    #    run keyword if    ${page_diff}
    ...    #write html ZK sheet with inner html    ${stage_page}    ${prod_page}    ${diff_dir}\\${userName}_${User_num}_${pageName}_0_diff.html    #H
    : FOR    ${page_num}    IN RANGE    1    ${max_page_num}+1
    \    ${scroll_position}    evaluate    ${page_num}*700
    \    switch browser    ${prod}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    Wait Until Page Does Not Contain    initializing...    120
    \    sleep    5S
    \    #    ${prod_scrollInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollTop(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    ${prod_scrollInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    ${prod_page}    execute javascript    ${DailyTask_jquery}
    \    log many    ${prod_page}
    \    ${prod_page}    DTScrollLeftPage_append    ${prod_page}    ${max_leftPage_num}    ${DT_appendMark}
    \    log many    ${prod_page}
    \    switch browser    ${stage}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    Wait Until Page Does Not Contain    initializing...    120
    \    sleep    5S
    \    #    ${stage_scrollInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollTop(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    ${stage_scrollInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    ${stage_page}    execute javascript    ${DailyTask_jquery}
    \    ${page_diff}    diff text    ${prod_page}    ${stage_page}
    \    Run Keyword And Continue On Failure    run keyword if    ${page_diff}    fail    ${userName}_${user_num} ${pageName}_${page_num} Diff !
    \    run keyword if    ${page_diff}    write html ZK sheet with inner html    ${stage_page}    ${prod_page}    ${diff_dir}\\${userName}_${User_num}_${pageName}_${page_num}_diff.html
    \    ...    H
    \    exit for loop if    '${prod_scrollInfo_start}' == '${prod_scrollInfo_end}' and '${stage_scrollInfo_start}' == '${stage_scrollInfo_end}'
    \    ${prod_scrollInfo_start}    set variable    ${prod_scrollInfo_end}
    \    ${stage_scrollInfo_start}    set variable    ${stage_scrollInfo_end}

DTScrollLeftPage_append
    [Arguments]    ${firstPage_content}    ${max_page_num}    ${appendMark}
    ${scrollInfo_start}    set variable    0
    : FOR    ${page_num}    IN RANGE    1    ${max_page_num}+1
    \    ${scroll_position}    evaluate    ${page_num}*1200
    \    execute javascript    $(".zsscroll").scrollLeft(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    ${scrollInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    ${appendContent}    execute javascript    ${DailyTask_appendSheet_jquery}
    \    log many    ${appendContent}
    \    exit for loop if    '${scrollInfo_start}' == '${scrollInfo_end}'
    \    ${firstPage_content}    replace string    ${firstPage_content}    ${appendMark}    ${appendContent}${appendMark}    1
    \    ${scrollInfo_start}    set variable    ${scrollInfo_end}
    [Return]    ${firstPage_content}

compareDTScrollPage
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    ${modelName}    ${pageName}
    ...    ${layput}
    : FOR    ${page_num}    IN RANGE    0    ${max_scrollPage_num}
    \    ${scroll_position}    evaluate    ${page_num}*700
    \    switch browser    ${prod}
    \    sleep    5S
    \    Wait Until Page Does Not Contain    Processing...    120
    \    #    Wait Until Page Does Not Contain    initializing...    120
    \    sleep    5S
    \    ${prod_scrollInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollTop(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    ${prod_scrollInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    ${prod_page}    execute javascript    ${ZK_optionPage_jquery}    #    ${DailyTask_Sheet_jquery}
    \    ${prod_page}    replace string using regexp    ${prod_page}    id="(.*?)"    \    -1
    \    ${prod_page}    remove string using regexp    ${prod_page}    for="(.*?)"
    \    ${prod_page}    replace string using regexp    ${prod_page}    href="(.*?)"    \    -1
    \    ${prod_page}    replace string using regexp    ${prod_page}    src="(.*?)"    \    -1
    \    #    log many    ${prod_page}
    \    switch browser    ${stage}
    \    sleep    5S
    \    Wait Until Page Does Not Contain    Processing...    120
    \    #    Wait Until Page Does Not Contain    initializing...    120
    \    sleep    5S
    \    ${stage_scrollInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollTop(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    ${stage_scrollInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    exit for loop if    '${prod_scrollInfo_start}' == '${prod_scrollInfo_end}' and '${stage_scrollInfo_start}' == '${stage_scrollInfo_end}' and ${page_num} > 0
    \    ${stage_page}    execute javascript    ${ZK_optionPage_jquery}    #    ${DailyTask_Sheet_jquery}
    \    ${stage_page}    replace string using regexp    ${stage_page}    id="(.*?)"    \    -1
    \    ${stage_page}    remove string using regexp    ${stage_page}    for="(.*?)"
    \    ${stage_page}    replace string using regexp    ${stage_page}    href="(.*?)"    \    -1
    \    ${stage_page}    replace string using regexp    ${stage_page}    src="(.*?)"    \    -1
    \    #    log many    ${stage_page}
    \    ${page_diff}    diff text    ${prod_page}    ${stage_page}
    \    Run Keyword And Continue On Failure    run keyword if    ${page_diff}    fail    ${userName}_${user_num}_${modelName}_${pageName}_${page_num} Diff !
    \    run keyword if    ${page_diff}    write html ZK sheet with inner html    ${stage_page}    ${prod_page}    ${diff_dir}\\${userName}_${User_num}_${modelName}_${pageName}_${page_num}_diff.html
    \    ...    ${layput}
    \    compareDTScrollLeftPage    ${prod}    ${stage}    ${userName}    ${user_num}    ${pageName}
    \    ...    ${page_num}    ${modelName}

compareDTScrollLeftPage
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    ${pageName}    ${mainPage_num}
    ...    ${modelName}
    : FOR    ${leftPage_num}    IN RANGE    1    ${max_scrollLeftPage_num}
    \    ${scroll_position}    evaluate    ${leftPage_num}*1200
    \    switch browser    ${prod}
    \    ${prod_scrollLeftInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollLeft(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    120
    \    sleep    5S
    \    ${prod_scrollLeftInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    ${prod_leftPage}    execute javascript    ${ZK_optionPage_jquery}    #    ${DailyTask_Sheet_jquery}
    \    ${prod_leftPage}    replace string using regexp    ${prod_leftPage}    id="(.*?)"    \    -1
    \    ${prod_leftPage}    remove string using regexp    ${prod_leftPage}    for="(.*?)"
    \    ${prod_leftPage}    replace string using regexp    ${prod_leftPage}    href="(.*?)"    \    -1
    \    ${prod_leftPage}    replace string using regexp    ${prod_leftPage}    src="(.*?)"    \    -1
    \    #    log many    ${prod_leftPage}
    \    switch browser    ${stage}
    \    ${stage_scrollLeftInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollLeft(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    120
    \    sleep    5S
    \    ${stage_scrollLeftInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    ${stage_leftPage}    execute javascript    ${ZK_optionPage_jquery}    #    ${ZK_scrollInfo_jquery}
    \    ${stage_leftPage}    replace string using regexp    ${stage_leftPage}    id="(.*?)"    \    -1
    \    ${stage_leftPage}    remove string using regexp    ${stage_leftPage}    for="(.*?)"
    \    ${stage_leftPage}    replace string using regexp    ${stage_leftPage}    href="(.*?)"    \    -1
    \    ${stage_leftPage}    replace string using regexp    ${stage_leftPage}    src="(.*?)"    \    -1
    \    #    log many    ${stage_leftPage}
    \    exit for loop if    '${prod_scrollLeftInfo_start}' == '${prod_scrollLeftInfo_end}' and '${stage_scrollLeftInfo_start}' == '${stage_scrollLeftInfo_end}'
    \    ${leftPage_diff}    diff text    ${prod_leftPage}    ${stage_leftPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${leftPage_diff}    fail    ${userName}_${user_num}_${modelName}_${pageName}_${mainPage_num}_${leftPage_num} Diff !
    \    run keyword if    ${leftPage_diff}    write html ZK sheet with inner html    ${stage_leftPage}    ${prod_leftPage}    ${diff_dir}\\${userName}_${user_num}_${modelName}_${pageName}_${mainPage_num}_${leftPage_num}_diff.html
    \    ...    H
    #    ${scroll_position}    evaluate    ${scroll_position}/2
    switch browser    ${prod}
    #    execute javascript    $(".zsscroll").scrollLeft(${scroll_position})
    #    Wait Until Page Does Not Contain    Processing...    20
    #    sleep    3S
    execute javascript    $(".zsscroll").scrollLeft(0)
    switch browser    ${stage}
    #    execute javascript    $(".zsscroll").scrollLeft(${scroll_position})
    #    Wait Until Page Does Not Contain    Processing...    20
    #    sleep    3S
    execute javascript    $(".zsscroll").scrollLeft(0)

compareZKTabs
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    ${tabsCount}    ${tabsCountXpath}
    ...    ${freezePosition}    ${hiddenNodes_jquery}    ${model_name}
    : FOR    ${tab_num}    IN RANGE    1    ${tabsCount}+1
    \    switch browser    ${prod}
    \    run keyword if    ${tab_num}>1    click element    Xpath=${tabsCountXpath}[${tab_num}]
    \    run keyword if    ${tab_num}>1    sleep    3S
    \    run keyword if    ${tab_num}>1    Wait Until Page Does Not Contain    Processing...    20
    \    run keyword if    ${tab_num}>1    sleep    5S
    \    ${prod_tabName}    get text    Xpath=${tabsCountXpath}[${tab_num}]
    \    execute javascript    ${hiddenNodes_jquery}
    \    click element    ${freezePosition}
    \    click element    ${freezePosition}
    \    click element    ${DailyTasks_Button_FreezePanel}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    switch browser    ${stage}
    \    run keyword if    ${tab_num}>1    click element    Xpath=${tabsCountXpath}[${tab_num}]
    \    run keyword if    ${tab_num}>1    sleep    3S
    \    run keyword if    ${tab_num}>1    Wait Until Page Does Not Contain    Processing...    20
    \    run keyword if    ${tab_num}>1    sleep    5S
    \    ${stage_tabName}    get text    Xpath=${tabsCountXpath}[${tab_num}]
    \    execute javascript    ${hiddenNodes_jquery}
    \    click element    ${freezePosition}
    \    click element    ${freezePosition}
    \    click element    ${DailyTasks_Button_FreezePanel}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    Run Keyword And Continue On Failure    run keyword if    '${stage_tabName}' != '${prod_tabName}'    fail    ${userName}_${user_num}_${modelName} tab name Diff !
    \    compareDTScrollPage    ${prod}    ${stage}    ${userName}    ${user_num}    ${model_name}
    \    ...    ${stage_tabName}

compareDTScrollPage_copy
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    ${modelName}    ${pageName}
    : FOR    ${page_num}    IN RANGE    0    ${max_scrollPage_num}
    \    ${scroll_position}    evaluate    ${page_num}*700
    \    switch browser    ${prod}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    Wait Until Page Does Not Contain    initializing...    120
    \    sleep    5S
    \    ${prod_scrollInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollTop(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    ${prod_scrollInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    ${prod_page}    execute javascript    ${DailyTask_Sheet_jquery}
    \    ${prod_top}    execute javascript    ${DailyTask_sheetTop_jquery}
    \    ${prod_page}    replace string using regexp    ${prod_page}    id="(.*?)"    \    -1
    \    ${prod_top}    replace string using regexp    ${prod_top}    id="(.*?)"    \    -1
    \    ${prod_page}    replace string    ${prod_page}    ${prod_top}    \    1
    \    ${prod_title}    execute javascript    ${DailyTask_sheetTitle_jquery}
    \    ${prod_title}    replace string using regexp    ${prod_title}    id="(.*?)"    \    -1
    \    log many    ${prod_title}
    \    #    ${prod_page}    insert Str without    ${prod_page}    ${prod_title}    <div class="zsblock" style="visibility:visible;">
    \    #    ${prod_title_exist}    get lines matching regexp    ${prod_page}    ${prod_title}
    \    ${prod_title_length}    get matching xpath count    //div[@class="zsblock"]/div[@class="zsrow zsh1"]
    \    log many    ${prod_page}
    \    should contain    ${prod_page}    <div class="zsblock" style="visibility:visible;">
    \    ${prod_page}    run keyword if    ${prod_title_length} == 0    replace string    ${prod_page}    <div class="zsblock" style="visibility:visible;">
    \    ...    <div class="zsblock" style="visibility:visible;">${prod_title}    1
    \    log many    ${prod_page}
    \    switch browser    ${stage}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    Wait Until Page Does Not Contain    initializing...    120
    \    sleep    5S
    \    ${stage_scrollInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollTop(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    ${stage_scrollInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    ${stage_page}    execute javascript    ${DailyTask_Sheet_jquery}
    \    ${stage_top}    execute javascript    ${DailyTask_sheetTop_jquery}
    \    ${stage_page}    replace string using regexp    ${stage_page}    id="(.*?)"    \    -1
    \    ${stage_top}    replace string using regexp    ${stage_top}    id="(.*?)"    \    -1
    \    ${stage_page}    replace string    ${stage_page}    ${stage_top}    \    1
    \    ${stage_title}    execute javascript    ${DailyTask_sheetTitle_jquery}
    \    ${stage_title}    replace string using regexp    ${stage_title}    id="(.*?)"    \    -1
    \    ${stage_title_exist}    get lines matching regexp    ${stage_page}    ${stage_title}
    \    ${stage_title_length}    get length    ${stage_title_exist}
    \    run keyword if    ${stage_title_length} == 0    replace string    ${stage_page}    <div class="zsblock" style="visibility:visible;">    <div class="zsblock" style="visibility:visible;">${prod_title}
    \    exit for loop if    '${prod_scrollInfo_start}' == '${prod_scrollInfo_end}' and '${stage_scrollInfo_start}' == '${stage_scrollInfo_end}' and ${page_num} > 0
    \    ${page_diff}    diff text    ${prod_page}    ${stage_page}
    \    Run Keyword And Continue On Failure    run keyword if    ${page_diff}    fail    ${userName}_${user_num}_${modelName}_${pageName}_${page_num} Diff !
    \    run keyword if    ${page_diff}    write html ZK sheet with inner html    ${stage_page}    ${prod_page}    ${diff_dir}\\${userName}_${User_num}_${modelName}_${pageName}_${page_num}_diff.html
    \    ...    H
    \    compareDTScrollLeftPage    ${prod}    ${stage}    ${userName}    ${user_num}    ${pageName}
    \    ...    ${page_num}    ${modelName}

compareDTScrollLeftPage_copy
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    ${pageName}    ${mainPage_num}
    ...    ${modelName}
    : FOR    ${leftPage_num}    IN RANGE    1    ${max_scrollLeftPage_num}
    \    ${scroll_position}    evaluate    ${leftPage_num}*1200
    \    switch browser    ${prod}
    \    ${prod_scrollLeftInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollLeft(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    ${prod_scrollLeftInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    ${prod_leftPage}    execute javascript    ${DailyTask_Sheet_jquery}
    \    ${prod_top}    execute javascript    ${DailyTask_sheetTop_jquery}
    \    ${prod_leftPage}    replace string using regexp    ${prod_leftPage}    id="(.*?)"    \    -1
    \    ${prod_top}    replace string using regexp    ${prod_top}    id="(.*?)"    \    -1
    \    ${prod_leftPage}    replace string    ${prod_leftPage}    ${prod_top}    \    1
    \    #    ${prod_leftPage}    replace string using regexp    ${prod_leftPage}    (?!.*zsdata.*)<div style=(.*?) class="zstop zsfztop" zs.t="STopPanel"(.*\n*.*?)zs.t="SWidgetpanel"></div></div>    ${EMPTY}
    \    ...    #1
    \    capture page screenshot
    \    ${prod_title}    execute javascript    ${DailyTask_sheetTitle_jquery}
    \    ${prod_title}    replace string using regexp    ${prod_title}    id="(.*?)"    \    -1
    \    ${prod_title_exist}    get lines matching regexp    ${prod_leftPage}    ${prod_title}
    \    ${prod_title_length}    get length    ${prod_title_exist}
    \    run keyword if    ${prod_title_length}==0    replace string    ${prod_leftPage}    <div class="zsblock" style="visibility:visible;">    <div class="zsblock" style="visibility:visible;">${prod_title}
    \    switch browser    ${stage}
    \    ${stage_scrollLeftInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollLeft(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    ${stage_scrollLeftInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    ${stage_leftPage}    execute javascript    ${DailyTask_Sheet_jquery}
    \    ${stage_top}    execute javascript    ${DailyTask_sheetTop_jquery}
    \    ${stage_leftPage}    replace string using regexp    ${stage_leftPage}    id="(.*?)"    \    -1
    \    ${stage_top}    replace string using regexp    ${stage_top}    id="(.*?)"    \    -1
    \    ${stage_leftPage}    replace string    ${stage_leftPage}    ${stage_top}    \    1
    \    #    ${stage_leftPage}    replace string using regexp    ${stage_leftPage}    (?!.*zsdata.*)<div style=(.*?) class="zstop zsfztop" zs.t="STopPanel"(.*\n*.*?)zs.t="SWidgetpanel"></div></div>    ${EMPTY}
    \    ...    #1
    \    capture page screenshot
    \    ${stage_title}    execute javascript    ${DailyTask_sheetTitle_jquery}
    \    ${stage_title}    replace string using regexp    ${stage_title}    id="(.*?)"    \    -1
    \    ${stage_title_exist}    get lines matching regexp    ${stage_leftPage}    ${stage_title}
    \    ${stage_title_length}    get length    ${stage_title_exist}
    \    run keyword if    ${stage_title_length} == 0    replace string    ${stage_leftPage}    <div class="zsblock" style="visibility:visible;">    <div class="zsblock" style="visibility:visible;">${prod_title}
    \    exit for loop if    '${prod_scrollLeftInfo_start}' == '${prod_scrollLeftInfo_end}' and '${stage_scrollLeftInfo_start}' == '${stage_scrollLeftInfo_end}'
    \    ${leftPage_diff}    diff text    ${prod_leftPage}    ${stage_leftPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${leftPage_diff}    fail    ${userName}_${user_num}_${modelName}_${pageName}_${mainPage_num}_${leftPage_num} Diff !
    \    run keyword if    ${leftPage_diff}    write html ZK sheet with inner html    ${stage_leftPage}    ${prod_leftPage}    ${diff_dir}\\${userName}_${user_num}_${modelName}_${pageName}_${mainPage_num}_${leftPage_num}_diff.html
    \    ...    H
    switch browser    ${prod}
    execute javascript    $(".zsscroll").scrollLeft(0)
    switch browser    ${stage}
    execute javascript    $(".zsscroll").scrollLeft(0)

compareDTTabs
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    ${tabsCount}    ${tabsCountXpath}
    ...    ${freezePosition}    ${hiddenNodes_jquery}    ${model_name}
    : FOR    ${tab_num}    IN RANGE    1    ${tabsCount}+1
    \    switch browser    ${prod}
    \    run keyword if    ${tab_num}>1    click element    Xpath=${tabsCountXpath}[${tab_num}]
    \    run keyword if    ${tab_num}>1    sleep    3S
    \    run keyword if    ${tab_num}>1    Wait Until Page Does Not Contain    Processing...    20
    \    run keyword if    ${tab_num}>1    sleep    5S
    \    ${prod_tabName}    get text    Xpath=${tabsCountXpath}[${tab_num}]
    \    click element    ${ZK_Button_Options}
    \    Wait Until Page Contains    Select    20
    \    sleep    5S
    \    ${prod_optionsPage}    execute javascript    ${ZK_optionPage_jquery}
    \    ${prod_optionsPage}    replace string using regexp    ${prod_optionsPage}    id="(.*?)"    \    -1
    \    ${prod_optionsPage}    remove string using regexp    ${prod_optionsPage}    for="(.*?)"
    \    ${prod_optionsPage}    replace string using regexp    ${prod_optionsPage}    href="(.*?)"    \    -1
    \    ${prod_optionsPage}    replace string using regexp    ${prod_optionsPage}    src="(.*?)"    \    -1
    \    log many    ${prod_optionsPage}
    \    click element    ${ZK_Button_Options}
    \    Wait Until Page Does Not Contain    Processing...    120
    \    Wait Until Page Contains element    ${ZK_Button_ViewCriteria}    20
    \    sleep    5S
    \    click element    ${ZK_Button_ViewCriteria}
    \    Wait Until Page Contains    Filter By    60
    \    sleep    5S
    \    ${prod_viewCriteria}    execute javascript    ${ZK_optionPage_jquery}
    \    ${prod_viewCriteria}    replace string using regexp    ${prod_viewCriteria}    id="(.*?)"    \    -1
    \    ${prod_viewCriteria}    remove string using regexp    ${prod_viewCriteria}    for="(.*?)"
    \    ${prod_viewCriteria}    replace string using regexp    ${prod_viewCriteria}    href="(.*?)"    \    -1
    \    ${prod_viewCriteria}    replace string using regexp    ${prod_viewCriteria}    src="(.*?)"    \    -1
    \    #    log many    ${prod_viewCriteria}
    \    click element    ${ZK_Button_ViewCriteria}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    Wait Until Page Contains element    ${ZK_Button_FreezePanel}    20
    \    execute javascript    ${hiddenNodes_jquery}
    \    click element    ${freezePosition}
    \    run keyword if    ${tab_num} == 1    click element    ${freezePosition}
    \    click element    ${ZK_Button_FreezePanel}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    switch browser    ${stage}
    \    run keyword if    ${tab_num}>1    click element    Xpath=${tabsCountXpath}[${tab_num}]
    \    run keyword if    ${tab_num}>1    sleep    3S
    \    run keyword if    ${tab_num}>1    Wait Until Page Does Not Contain    Processing...    20
    \    run keyword if    ${tab_num}>1    sleep    5S
    \    ${stage_tabName}    get text    Xpath=${tabsCountXpath}[${tab_num}]
    \    click element    ${ZK_Button_Options}
    \    Wait Until Page Contains    Select    20
    \    sleep    5S
    \    ${stage_optionsPage}    execute javascript    ${ZK_optionPage_jquery}
    \    ${stage_optionsPage}    replace string using regexp    ${stage_optionsPage}    id="(.*?)"    \    -1
    \    ${stage_optionsPage}    remove string using regexp    ${stage_optionsPage}    for="(.*?)"
    \    ${stage_optionsPage}    replace string using regexp    ${stage_optionsPage}    href="(.*?)"    \    -1
    \    ${stage_optionsPage}    replace string using regexp    ${stage_optionsPage}    src="(.*?)"    \    -1
    \    log many    ${stage_optionsPage}
    \    click element    ${ZK_Button_Options}
    \    Wait Until Page Does Not Contain    Processing...    120
    \    Wait Until Page Contains element    ${ZK_Button_ViewCriteria}    20
    \    sleep    5S
    \    click element    ${ZK_Button_ViewCriteria}
    \    Wait Until Page Contains    Filter By    60
    \    sleep    5S
    \    ${stage_viewCriteria}    execute javascript    ${ZK_optionPage_jquery}
    \    ${stage_viewCriteria}    replace string using regexp    ${stage_viewCriteria}    id="(.*?)"    \    -1
    \    ${stage_viewCriteria}    remove string using regexp    ${stage_viewCriteria}    for="(.*?)"
    \    ${stage_viewCriteria}    replace string using regexp    ${stage_viewCriteria}    href="(.*?)"    \    -1
    \    ${stage_viewCriteria}    replace string using regexp    ${stage_viewCriteria}    src="(.*?)"    \    -1
    \    #    log many    ${stage_viewCriteria}
    \    click element    ${ZK_Button_ViewCriteria}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    Wait Until Page Contains element    ${ZK_Button_FreezePanel}    20
    \    execute javascript    ${hiddenNodes_jquery}
    \    click element    ${freezePosition}
    \    run keyword if    ${tab_num} == 1    click element    ${freezePosition}
    \    click element    ${ZK_Button_FreezePanel}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    Run Keyword And Continue On Failure    run keyword if    '${stage_tabName}' != '${prod_tabName}'    fail    ${userName}_${user_num}_${modelName} tab name Diff !
    \    ${options_diff}    diff text    ${prod_optionsPage}    ${stage_optionsPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${options_diff}    fail    ${userName}_${user_num}_${modelName}_${stage_tabName}_Options Diff !
    \    run keyword if    ${options_diff}    write html ZK sheet with inner html    ${stage_optionsPage}    ${prod_optionsPage}    ${diff_dir}\\${userName}_${User_num}_${modelName}_${stage_tabName}_Options_diff.html
    \    ...    H
    \    ${ViewCriteria_diff}    diff text    ${prod_viewCriteria}    ${stage_viewCriteria}
    \    Run Keyword And Continue On Failure    run keyword if    ${ViewCriteria_diff}    fail    ${userName}_${user_num}_${modelName}_${stage_tabName}_ViewCriteria Diff !
    \    run keyword if    ${ViewCriteria_diff}    write html ZK sheet with inner html    ${stage_viewCriteria}    ${prod_viewCriteria}    ${diff_dir}\\${userName}_${User_num}_${modelName}_${stage_tabName}_ViewCriteria_diff.html
    \    ...    H
    \    compareDTScrollPage    ${prod}    ${stage}    ${userName}    ${user_num}    ${model_name}
    \    ...    ${stage_tabName}

compareOBTabs
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    ${tabsCount}    ${tabsCountXpath}
    ...    ${freezePosition}    ${hiddenNodes_jquery}    ${model_name}
    : FOR    ${tab_num}    IN RANGE    1    ${tabsCount}+1
    \    switch browser    ${prod}
    \    run keyword if    ${tab_num}>1    click element    Xpath=${tabsCountXpath}[${tab_num}]
    \    run keyword if    ${tab_num}>1    sleep    3S
    \    run keyword if    ${tab_num}>1    Wait Until Page Does Not Contain    Processing...    120
    \    run keyword if    ${tab_num}>1    sleep    5S
    \    ${prod_tabName}    get text    Xpath=${tabsCountXpath}[${tab_num}]
    \    click element    ${ZK_Button_Options}
    \    Wait Until Page Contains    Select    20
    \    sleep    5S
    \    ${prod_optionsPage}    execute javascript    ${ZK_optionPage_jquery}
    \    ${prod_optionsPage}    replace string using regexp    ${prod_optionsPage}    id="(.*?)"    \    -1
    \    ${prod_optionsPage}    remove string using regexp    ${prod_optionsPage}    for="(.*?)"
    \    ${prod_optionsPage}    replace string using regexp    ${prod_optionsPage}    href="(.*?)"    \    -1
    \    ${prod_optionsPage}    replace string using regexp    ${prod_optionsPage}    src="(.*?)"    \    -1
    \    #    log many    ${prod_optionsPage}
    \    click element    ${ZK_Button_Options}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    Wait Until Page Contains element    ${ZK_Button_FreezePanel}    20
    \    #    execute javascript    ${hiddenNodes_jquery}
    \    #    ${prod_title_rowsCount}    execute javascript    ${ZK_titleRowsCount_jquery}
    \    #    #    ${prod_freezePosition}    replace string    ${freezePosition}    row
    \    ...    # '${prod_title_rowsCount}'    # 1
    \    #    click element    ${OrderBreakdown_freezePanel_position_prefix}${prod_title_rowsCount}${OrderBreakdown_freezePanel_position_suffix}
    \    #    run keyword if    ${tab_num} == 1    click element    ${OrderBreakdown_freezePanel_position_prefix}${prod_title_rowsCount}${OrderBreakdown_freezePanel_position_suffix}
    \    #    #    run keyword if    ${tab_num} == 1    click element    ${freezePosition}
    \    #    click element    ${ZK_Button_FreezePanel}
    \    #    Wait Until Page Does Not Contain    Processing...    20
    \    #    sleep    5S
    \    switch browser    ${stage}
    \    run keyword if    ${tab_num}>1    click element    Xpath=${tabsCountXpath}[${tab_num}]
    \    run keyword if    ${tab_num}>1    sleep    3S
    \    run keyword if    ${tab_num}>1    Wait Until Page Does Not Contain    Processing...    120
    \    run keyword if    ${tab_num}>1    sleep    5S
    \    ${stage_tabName}    get text    Xpath=${tabsCountXpath}[${tab_num}]
    \    click element    ${ZK_Button_Options}
    \    Wait Until Page Contains    Select    20
    \    sleep    5S
    \    ${stage_optionsPage}    execute javascript    ${ZK_optionPage_jquery}
    \    ${stage_optionsPage}    replace string using regexp    ${stage_optionsPage}    id="(.*?)"    \    -1
    \    ${stage_optionsPage}    remove string using regexp    ${stage_optionsPage}    for="(.*?)"
    \    ${stage_optionsPage}    replace string using regexp    ${stage_optionsPage}    href="(.*?)"    \    -1
    \    ${stage_optionsPage}    replace string using regexp    ${stage_optionsPage}    src="(.*?)"    \    -1
    \    #    log many    ${stage_optionsPage}
    \    click element    ${ZK_Button_Options}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    Wait Until Page Contains element    ${ZK_Button_FreezePanel}    20
    \    #    execute javascript    ${hiddenNodes_jquery}
    \    #    ${stage_title_rowsCount}    execute javascript    ${ZK_titleRowsCount_jquery}
    \    #    #    ${stage_freezePosition}    replace string    ${freezePosition}    row
    \    ...    # '${stage_title_rowsCount}'    # 1
    \    #    click element    ${OrderBreakdown_freezePanel_position_prefix}${stage_title_rowsCount}${OrderBreakdown_freezePanel_position_suffix}
    \    #    run keyword if    ${tab_num} == 1    click element    ${OrderBreakdown_freezePanel_position_prefix}${stage_title_rowsCount}${OrderBreakdown_freezePanel_position_suffix}
    \    #    #    run keyword if    ${tab_num} == 1    click element    ${freezePosition}
    \    #    click element    ${ZK_Button_FreezePanel}
    \    #    Wait Until Page Does Not Contain    Processing...    20
    \    #    sleep    5S
    \    Run Keyword And Continue On Failure    run keyword if    '${stage_tabName}' != '${prod_tabName}'    fail    ${userName}_${user_num}_${modelName} tab name Diff !
    \    ${options_diff}    diff text    ${prod_optionsPage}    ${stage_optionsPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${options_diff}    fail    ${userName}_${user_num}_${modelName}_${stage_tabName}_Options Diff !
    \    run keyword if    ${options_diff}    write html ZK sheet with inner html    ${stage_optionsPage}    ${prod_optionsPage}    ${diff_dir}\\${userName}_${User_num}_${modelName}_${stage_tabName}_Options_diff.html
    \    ...    H
    \    compareOBScrollPage    ${prod}    ${stage}    ${userName}    ${user_num}    ${model_name}
    \    ...    ${stage_tabName}

compareAMTabs
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    ${tabsCount}    ${tabsCountXpath}
    ...    ${hiddenNodes_jquery}    ${model_name}
    : FOR    ${tab_num}    IN RANGE    1    ${tabsCount}
    \    switch browser    ${prod}
    \    run keyword if    ${tab_num}>1    click element    Xpath=${tabsCountXpath}[${tab_num}]
    \    run keyword if    ${tab_num}>1    sleep    3S
    \    run keyword if    ${tab_num}>1    Wait Until Page Does Not Contain    Processing...    20
    \    run keyword if    ${tab_num}>1    sleep    5S
    \    ${prod_tabName}    get text    Xpath=${tabsCountXpath}[${tab_num}]
    \    click element    ${ZK_Button_Options}
    \    Wait Until Page Contains    Select    20
    \    sleep    5S
    \    ${prod_optionsPage}    execute javascript    ${ZK_optionPage_jquery}
    \    ${prod_optionsPage}    replace string using regexp    ${prod_optionsPage}    id="(.*?)"    \    -1
    \    ${prod_optionsPage}    remove string using regexp    ${prod_optionsPage}    for="(.*?)"
    \    ${prod_optionsPage}    replace string using regexp    ${prod_optionsPage}    href="(.*?)"    \    -1
    \    ${prod_optionsPage}    replace string using regexp    ${prod_optionsPage}    src="(.*?)"    \    -1
    \    #    log many    ${prod_optionsPage}
    \    click element    ${ZK_Button_Options}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    run keyword if    '${prod_tabName}' == 'AssortMent Mix'    Wait Until Page Contains element    ${AssortmentMix_Button_customizeFirst}    20
    \    run keyword if    '${prod_tabName}' == 'AssortMent Mix'    click button    ${AssortmentMix_Button_customizeFirst}
    \    run keyword if    '${prod_tabName}' == 'AssortMent Mix'    Wait Until Page Does Not Contain    Processing...    20
    \    run keyword if    '${prod_tabName}' == 'AssortMent Mix'    sleep    5S
    \    run keyword if    '${prod_tabName}' == 'AssortMent Mix'    Wait Until Page Contains    Doors    20
    \    ${prod_customizePage}    run keyword if    '${prod_tabName}' == 'AssortMent Mix'    execute javascript    ${ZK_optionPage_jquery}
    \    run keyword if    '${prod_tabName}' == 'AssortMent Mix'    click element    ${ZK_Button_Close}
    \    run keyword if    '${prod_tabName}' == 'AssortMent Mix'    Wait Until Page Does Not Contain    Processing...    20
    \    run keyword if    '${prod_tabName}' == 'AssortMent Mix'    sleep    5S
    \    switch browser    ${stage}
    \    run keyword if    ${tab_num}>1    click element    Xpath=${tabsCountXpath}[${tab_num}]
    \    run keyword if    ${tab_num}>1    sleep    3S
    \    run keyword if    ${tab_num}>1    Wait Until Page Does Not Contain    Processing...    20
    \    run keyword if    ${tab_num}>1    sleep    5S
    \    ${stage_tabName}    get text    Xpath=${tabsCountXpath}[${tab_num}]
    \    click element    ${ZK_Button_Options}
    \    Wait Until Page Contains    Select    20
    \    sleep    5S
    \    ${stage_optionsPage}    execute javascript    ${ZK_optionPage_jquery}
    \    ${stage_optionsPage}    replace string using regexp    ${stage_optionsPage}    id="(.*?)"    \    -1
    \    ${stage_optionsPage}    remove string using regexp    ${stage_optionsPage}    for="(.*?)"
    \    ${stage_optionsPage}    replace string using regexp    ${stage_optionsPage}    href="(.*?)"    \    -1
    \    ${stage_optionsPage}    replace string using regexp    ${stage_optionsPage}    src="(.*?)"    \    -1
    \    #    log many    ${stage_optionsPage}
    \    click element    ${ZK_Button_Options}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    run keyword if    '${stage_tabName}' == 'AssortMent Mix'    Wait Until Page Contains element    ${AssortmentMix_Button_customizeFirst}    20
    \    run keyword if    '${stage_tabName}' == 'AssortMent Mix'    click button    ${AssortmentMix_Button_customizeFirst}
    \    run keyword if    '${stage_tabName}' == 'AssortMent Mix'    Wait Until Page Does Not Contain    Processing...    20
    \    run keyword if    '${stage_tabName}' == 'AssortMent Mix'    sleep    5S
    \    run keyword if    '${stage_tabName}' == 'AssortMent Mix'    Wait Until Page Contains    Doors    20
    \    ${stage_customizePage}    run keyword if    '${stage_tabName}' == 'AssortMent Mix'    execute javascript    ${ZK_optionPage_jquery}
    \    run keyword if    '${stage_tabName}' == 'AssortMent Mix'    click element    ${ZK_Button_Close}
    \    run keyword if    '${stage_tabName}' == 'AssortMent Mix'    Wait Until Page Does Not Contain    Processing...    20
    \    run keyword if    '${stage_tabName}' == 'AssortMent Mix'    sleep    5S
    \    Run Keyword And Continue On Failure    run keyword if    '${stage_tabName}' != '${prod_tabName}'    fail    ${userName}_${user_num}_${modelName} tab name Diff !
    \    ${customize_diff}    diff text    ${prod_customizePage}    ${stage_customizePage}
    \    ${options_diff}    diff text    ${prod_optionsPage}    ${stage_optionsPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${options_diff}    fail    ${userName}_${user_num}_${modelName}_${stage_tabName}_Options Diff !
    \    run keyword if    ${options_diff}    write html ZK sheet with inner html    ${stage_optionsPage}    ${prod_optionsPage}    ${diff_dir}\\${userName}_${User_num}_${modelName}_${stage_tabName}_Options_diff.html
    \    ...    H
    \    Run Keyword And Continue On Failure    run keyword if    ${customize_diff}    fail    ${userName}_${user_num}_${modelName}_${stage_tabName}_Customize Diff !
    \    run keyword if    ${customize_diff}    write html ZK sheet with inner html    ${stage_customizePage}    ${prod_customizePage}    ${diff_dir}\\${userName}_${User_num}_${modelName}_${stage_tabName}_Customize_diff.html
    \    ...    H
    \    compareDTScrollPage    ${prod}    ${stage}    ${userName}    ${user_num}    ${model_name}
    \    ...    ${stage_tabName}    H

selectStyleBankCriteria
    [Arguments]    ${prod}    ${stage}    @{criteria}
    : FOR    ${st}    IN    @{criteria}
    \    @{st_key}    split string    ${st}    /
    \    ${key_name}    set variable    @{st_key}[0]
    \    @{key_values}    split string    @{st_key}[1]    ,
    \    ${key_values_string}    convert to string    @{st_key}[1]
    \    ${key_values_string}    convert to lowercase    ${key_values_string}
    \    selectCriteriaAttrValues    ${prod}    ${stage}    ${key_name}    @{key_values}

selectCriteriaAttrValues
    [Arguments]    ${prod}    ${stage}    ${attr}    @{attrValues}
    : FOR    ${value}    IN    @{attrValues}
    \    ${value_lower}    convert to lowercase    ${value}
    \    ${attrPath}    run keyword if    '${value}' == 'all'    replace string    ${stylebank_advanced_criteriaAttr}    attr
    \    ...    ${attr}
    \    run keyword if    '${value_lower}' == 'all'    switch browser    ${prod}
    \    run keyword if    '${value_lower}' == 'all'    Run Keyword And Continue On Failure    element should be visible    ${attrPath}    criteria attribute isn't existing!
    \    run keyword if    '${value_lower}' == 'all'    click element    ${attrPath}
    \    run keyword if    '${value_lower}' == 'all'    switch browser    ${stage}
    \    run keyword if    '${value_lower}' == 'all'    Run Keyword And Continue On Failure    element should be visible    ${attrPath}    criteria attribute isn't existing!
    \    run keyword if    '${value_lower}' == 'all'    click element    ${attrPath}
    \    run keyword if    '${value_lower}' == 'all'    exit for loop
    \    ${attrValue_path}    replace string    ${stylebank_advanced_criteriaAttr_value}    attr    ${attr}    1
    \    ${attrValue_path}    replace string    ${attrValue_path}    value    ${value}
    \    switch browser    ${prod}
    \    Run Keyword And Continue On Failure    element should be visible    ${attrValue_path}    criteria attribute isn't existing!
    \    click element    ${attrValue_path}
    \    switch browser    ${stage}
    \    Run Keyword And Continue On Failure    element should be visible    ${attrValue_path}    criteria attribute isn't existing!
    \    click element    ${attrValue_path}

compareSearchedStyleBankReport
    [Arguments]    ${prod}    ${stage}    ${reportType}    ${userName}    ${user_num}    ${visibleFlag}
    @{reportTypes}    split string    ${reportType}    ,
    #    switch browser    ${prod}
    #    @{prod_windows}    list windows
    #    switch browser    ${stage}
    #    @{stage_windows}    list windows
    : FOR    ${type}    IN    @{reportTypes}
    \    ${type_fileName}    replace string    ${type}    /    _
    \    switch browser    ${prod}
    \    select from list by label    ${stylebank_advanced_topDropdown}    ${type}
    \    #    @{curentWindows}    list windows
    \    click button    ${stylebank_advanced_topButton_generateReport}
    \    ${prod_excel}    handleSaveFileWindow    ${prod_download_dir}    ${userName}_${user_num}_${type_fileName}.xlsx
    \    #    select window    @{prod_windows}[0]
    \    switch browser    ${stage}
    \    select from list by label    ${stylebank_advanced_topDropdown}    ${type}
    \    #    @{curentWindows}    list windows
    \    click button    ${stylebank_advanced_topButton_generateReport}
    \    ${stage_excel}    handleSaveFileWindow    ${stage_download_dir}    ${userName}_${user_num}_${type_fileName}.xlsx
    \    #    select window    @{stage_windows}[0]
    \    ${stage_excelVisible}    run keyword if    '${visibleFlag}'=='1'    copy visible XLSX    ${stage_excel}
    \    ${prod_excelVisible}    run keyword if    '${visibleFlag}'=='1'    copy visible XLSX    ${prod_excel}
    \    Run Keyword And Continue On Failure    run keyword if    '${visibleFlag}'=='1'    compare XLSX    ${stage_excelVisible}    ${prod_excelVisible}
    \    ...    ${diff_dir}\\${userName}_${user_num}_StyleBankReportVisible_${type_fileName}_Diff.txt
    \    ...    ELSE    compare XLSX    ${stage_excel}    ${prod_excel}    ${diff_dir}\\${userName}_${user_num}_StyleBankReport_${type_fileName}_Diff.txt

compareStyleInfo
    [Arguments]    ${prod}    ${stage}    ${userName}    ${userNum}
    : FOR    ${num}    IN RANGE    2    ${stylebank_compareStyles_count} + 2
    \    ${num_str}    convert to string    ${num}
    \    ${styleImage_path}    replace string    ${stylebank_styleInfo_image}    Number    ${num_str}
    \    ${styleUPC_path}    replace string    ${stylebank_styleInfo_UPC}    Number    ${num_str}
    \    switch browser    ${prod}
    \    wait until page contains    Search Criteria:    20
    \    click element    ${styleImage_path}
    \    wait until page contains    Image    20
    \    #    capture page screenshot
    \    ${prod_image}    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    go back
    \    wait until page contains    Search Criteria:    20
    \    click element    ${styleUPC_path}
    \    wait until page contains    UPC    20
    \    ${prod_UPC}    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    click button    ${stylebank_button_back}
    \    switch browser    ${stage}
    \    wait until page contains    Search Criteria:    20
    \    click element    ${styleImage_path}
    \    wait until page contains    Image    20
    \    ${stage_image}    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    go back
    \    wait until page contains    Search Criteria:    20
    \    click element    ${styleUPC_path}
    \    wait until page contains    UPC    20
    \    #    capture page screenshot
    \    ${stage_UPC}    htmlPageWithoutRandom    ${page_html_nochange_jquery}
    \    click button    ${stylebank_button_back}
    \    ${image_diff}    diff text    ${stage_image}    ${prod_image}
    \    ${UPC_diff}    diff text    ${stage_UPC}    ${prod_UPC}
    \    Run Keyword And Continue On Failure    run keyword if    ${image_diff}    fail    ${userName}_${user_num} styleBank image_${num} Diff !
    \    run keyword if    ${image_diff}    write html file with inner html    ${stage_image}    ${prod_image}    ${diff_dir}\\${userName}_${User_num}_styleBank_Image${num}_diff.html
    \    ...    V
    \    Run Keyword And Continue On Failure    run keyword if    ${UPC_diff}    fail    ${userName}_${user_num} styleBank UPC_${num} Diff !
    \    run keyword if    ${UPC_diff}    write html file with inner html    ${stage_image}    ${prod_image}    ${diff_dir}\\${userName}_${User_num}_styleBank_UPC${num}_diff.html
    \    ...    V

compareOBTabs_single
    [Arguments]    ${prod}    ${userName}    ${user_num}    ${tabsCount}    ${tabsCountXpath}    ${freezePosition}
    ...    ${hiddenNodes_jquery}    ${model_name}
    : FOR    ${tab_num}    IN RANGE    1    ${tabsCount}+1
    \    continue for loop if    ${tab_num} == 1
    \    switch browser    ${prod}
    \    run keyword if    ${tab_num}>1    click element    Xpath=${tabsCountXpath}[${tab_num}]
    \    run keyword if    ${tab_num}>1    sleep    3S
    \    run keyword if    ${tab_num}>1    Wait Until Page Does Not Contain    Processing...    120
    \    run keyword if    ${tab_num}>1    sleep    5S
    \    ${prod_tabName}    get text    Xpath=${tabsCountXpath}[${tab_num}]
    \    click element    ${ZK_Button_Options}
    \    Wait Until Page Contains    Select    20
    \    sleep    5S
    \    ${prod_optionsPage}    execute javascript    ${ZK_optionPage_jquery}
    \    ${prod_optionsPage}    replace string using regexp    ${prod_optionsPage}    id="(.*?)"    \    -1
    \    ${prod_optionsPage}    remove string using regexp    ${prod_optionsPage}    for="(.*?)"
    \    ${prod_optionsPage}    replace string using regexp    ${prod_optionsPage}    href="(.*?)"    \    -1
    \    ${prod_optionsPage}    replace string using regexp    ${prod_optionsPage}    src="(.*?)"    \    -1
    \    #    log many    ${prod_optionsPage}
    \    click element    ${ZK_Button_Options}
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    Wait Until Page Contains element    ${ZK_Button_FreezePanel}    20
    \    #    execute javascript    ${hiddenNodes_jquery}
    \    #    ${prod_title_rowsCount}    execute javascript    ${ZK_titleRowsCount_jquery}
    \    #    #    ${prod_freezePosition}    replace string    ${freezePosition}    row
    \    ...    # '${prod_title_rowsCount}'    # 1
    \    #    click element    ${OrderBreakdown_freezePanel_position_prefix}${prod_title_rowsCount}${OrderBreakdown_freezePanel_position_suffix}
    \    #    run keyword if    ${tab_num} == 1    click element    ${OrderBreakdown_freezePanel_position_prefix}${prod_title_rowsCount}${OrderBreakdown_freezePanel_position_suffix}
    \    #    #    run keyword if    ${tab_num} == 1    click element    ${freezePosition}
    \    #    click element    ${ZK_Button_FreezePanel}
    \    #    Wait Until Page Does Not Contain    Processing...    20
    \    #    sleep    5S
    \    compareDTScrollPage_single    ${prod}    ${userName}    ${user_num}    ${model_name}    ${prod_tabName}

compareDTScrollPage_single
    [Arguments]    ${prod}    ${userName}    ${user_num}    ${modelName}    ${pageName}
    : FOR    ${page_num}    IN RANGE    0    ${max_scrollPage_num}
    \    #    continue for loop if    ${page_num} < 5
    \    ${scroll_position}    evaluate    ${page_num}*700
    \    switch browser    ${prod}
    \    sleep    5S
    \    Wait Until Page Does Not Contain    Processing...    120
    \    #    Wait Until Page Does Not Contain    initializing...    120
    \    sleep    5S
    \    ${prod_scrollInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollTop(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    ${prod_scrollInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    exit for loop if    '${prod_scrollInfo_start}' == '${prod_scrollInfo_end}' and ${page_num} > 0
    \    execute javascript    $(".zsscroll").scrollLeft(4200000)
    \    Wait Until Page Does Not Contain    Processing...    120
    \    sleep    5S
    \    execute javascript    $(".zsscroll").scrollLeft(0)
    \    Wait Until Page Does Not Contain    Processing...    120
    \    sleep    5S
    \    ${prod_page}    execute javascript    ${ZK_optionPage_jquery}
    \    #    log many    ${prod_page}
    \    ${prod_page}    replace string using regexp    ${prod_page}    id="(.*?)"    \    -1
    \    ${prod_page}    remove string using regexp    ${prod_page}    for="(.*?)"
    \    ${prod_page}    replace string using regexp    ${prod_page}    href="(.*?)"    \    -1
    \    ${prod_page}    replace string using regexp    ${prod_page}    src="(.*?)"    \    -1
    \    #    log many    ${prod_page}
    \    #    compareDTScrollLeftPage_single    ${prod}    ${userName}    ${user_num}    ${pageName}
    \    ...    # ${page_num}    ${modelName}
    \    write html ZK sheet with inner html    ${prod_page}    ${prod_page}    ${diff_dir}\\${userName}_${User_num}_${modelName}_${pageName}_${page_num}_diff.html    H

compareDTScrollLeftPage_single
    [Arguments]    ${prod}    ${userName}    ${user_num}    ${pageName}    ${mainPage_num}    ${modelName}
    : FOR    ${leftPage_num}    IN RANGE    15    ${max_scrollLeftPage_num}
    \    ${scroll_position}    evaluate    ${leftPage_num}*1200
    \    switch browser    ${prod}
    \    ${prod_scrollLeftInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollLeft(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    120
    \    sleep    5S
    \    ${prod_scrollLeftInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    ${prod_leftPage}    execute javascript    ${ZK_optionPage_jquery}
    \    ${prod_leftPage}    replace string using regexp    ${prod_leftPage}    id="(.*?)"    \    -1
    \    ${prod_leftPage}    remove string using regexp    ${prod_leftPage}    for="(.*?)"
    \    ${prod_leftPage}    replace string using regexp    ${prod_leftPage}    href="(.*?)"    \    -1
    \    ${prod_leftPage}    replace string using regexp    ${prod_leftPage}    src="(.*?)"    \    -1
    \    #    log many    ${prod_leftPage}
    \    exit for loop if    '${prod_scrollLeftInfo_start}' == '${prod_scrollLeftInfo_end}'
    #    ${scroll_position}    evaluate    ${scroll_position}/2
    switch browser    ${prod}
    #    execute javascript    $(".zsscroll").scrollLeft(${scroll_position})
    #    Wait Until Page Does Not Contain    Processing...    20
    #    sleep    3S
    execute javascript    $(".zsscroll").scrollLeft(0)
    sleep    20S

compareOBScrollPage
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    ${modelName}    ${pageName}
    ${leftPosition}    evaluate    ${max_scrollLeftPage_num}*1200
    : FOR    ${page_num}    IN RANGE    0    ${max_scrollPage_num}
    \    ${scroll_position}    evaluate    ${page_num}*700
    \    switch browser    ${prod}
    \    sleep    5S
    \    Wait Until Page Does Not Contain    Processing...    120
    \    #    Wait Until Page Does Not Contain    initializing...    120
    \    sleep    5S
    \    ${prod_scrollInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollTop(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    ${prod_scrollInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollLeft(${leftPosition})
    \    sleep    5S
    \    Wait Until Page Does Not Contain    Processing...    120
    \    sleep    5S
    \    execute javascript    $(".zsscroll").scrollLeft(0)
    \    sleep    5S
    \    Wait Until Page Does Not Contain    Processing...    120
    \    sleep    5S
    \    ${prod_page}    execute javascript    ${ZK_optionPage_jquery}    #    ${DailyTask_Sheet_jquery}
    \    ${prod_page}    replace string using regexp    ${prod_page}    id="(.*?)"    \    -1
    \    ${prod_page}    remove string using regexp    ${prod_page}    for="(.*?)"
    \    ${prod_page}    replace string using regexp    ${prod_page}    href="(.*?)"    \    -1
    \    ${prod_page}    replace string using regexp    ${prod_page}    src="(.*?)"    \    -1
    \    #    log many    ${prod_page}
    \    switch browser    ${stage}
    \    sleep    5S
    \    Wait Until Page Does Not Contain    Processing...    120
    \    #    Wait Until Page Does Not Contain    initializing...    120
    \    sleep    5S
    \    ${stage_scrollInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollTop(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    ${stage_scrollInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    exit for loop if    '${prod_scrollInfo_start}' == '${prod_scrollInfo_end}' and '${stage_scrollInfo_start}' == '${stage_scrollInfo_end}' and ${page_num} > 0
    \    execute javascript    $(".zsscroll").scrollLeft(${leftPosition})
    \    sleep    5S
    \    Wait Until Page Does Not Contain    Processing...    120
    \    sleep    5S
    \    execute javascript    $(".zsscroll").scrollLeft(0)
    \    sleep    5S
    \    Wait Until Page Does Not Contain    Processing...    120
    \    sleep    5S
    \    ${stage_page}    execute javascript    ${ZK_optionPage_jquery}    #    ${DailyTask_Sheet_jquery}
    \    ${stage_page}    replace string using regexp    ${stage_page}    id="(.*?)"    \    -1
    \    ${stage_page}    remove string using regexp    ${stage_page}    for="(.*?)"
    \    ${stage_page}    replace string using regexp    ${stage_page}    href="(.*?)"    \    -1
    \    ${stage_page}    replace string using regexp    ${stage_page}    src="(.*?)"    \    -1
    \    #    log many    ${stage_page}
    \    ${page_diff}    diff text    ${prod_page}    ${stage_page}
    \    Run Keyword And Continue On Failure    run keyword if    ${page_diff}    fail    ${userName}_${user_num}_${modelName}_${pageName}_${page_num} Diff !
    \    #    run keyword if    ${page_diff}    write html ZK sheet with inner html    ${stage_page}    ${prod_page}
    \    ...    # ${diff_dir}\\${userName}_${User_num}_${modelName}_${pageName}_${page_num}_diff.html    H
    \    run keyword if    ${page_diff}    write html ZK sheet with inner html    ${stage_page}    ${prod_page}    ${diff_dir}\\${userName}_${User_num}_${modelName}_${pageName}_${page_num}_diff.html
    \    ...    H
    \    #    compareDTScrollLeftPage    ${prod}    ${stage}    ${userName}    ${user_num}
    \    ...    # ${pageName}    ${page_num}    ${modelName}

expandAllCriteria
    [Arguments]    ${criteriaCountPath}    ${expandPath}
    [Timeout]
    ${criteriaCount}    get matching xpath count    ${criteriaCountPath}
    return from keyword if    ${criteriaCount} == 0
    : FOR    ${cnt}    IN RANGE    1    ${criteriaCount}+1
    \    ${expand}    replace string    ${expandPath}    num    '${cnt}'
    \    click element    ${expand}
    [Return]    ${criteriaCount}

compareBudgetBreakdownCriteria
    [Arguments]    ${prod}    ${stage}    ${prod_count}    ${stage_count}    ${userName}    ${user_num}
    ...    ${visibleFlag}
    ${cnt}    run keyword if    ${prod_count} > ${stage_count}    evaluate    ${prod_count}
    ...    ELSE    evaluate    ${stage_count}
    : FOR    ${num}    IN RANGE    1    ${cnt}+1
    \    ${num}    convert to string    ${num}
    \    ${expand}    replace string    ${budgetBreakdown_list_criteriaExpand_numPH}    num    ${num}
    \    ${planLevel_link}    replace string    ${budgetBreakdown_list_planLevelLink_numCountPH}    num    ${num}
    \    ${planLevel_link}    replace string    ${planLevel_link}    count    1
    \    switch browser    ${prod}
    \    ${prod_criteria}    get text    ${expand}/parent::td
    \    run keyword if    ${num}>1    click element    ${expand}
    \    click element    ${planLevel_link}
    \    sleep    5S
    \    Wait Until Page Contains    Display in Budget Breakdown Plan    600
    \    sleep    5S
    \    switch browser    ${stage}
    \    ${stage_expand}    replace string    ${budgetBreakdown_list_criteriaExpand_numPH}    num    '${num}'
    \    ${stage_criteria}    get text    ${expand}/parent::td
    \    run keyword if    ${num}>1    click element    ${expand}
    \    click element    ${planLevel_link}
    \    sleep    5S
    \    Wait Until Page Contains    Display in Budget Breakdown Plan    600
    \    sleep    5S
    \    compareBBPlanLevel    ${prod}    ${stage}    ${prod_criteria}    ${stage_criteria}    ${userName}
    \    ...    ${user_num}    ${visibleFlag}

compareBBPlanLevel
    [Arguments]    ${prod}    ${stage}    ${prod_criteria}    ${stage_criteria}    ${userName}    ${user_num}
    ...    ${visibleFlag}
    switch browser    ${prod}
    ${prod_planLevelSelected}    get text    ${budgetBreakdown_planLevelDropdown_selectedOption}
    @{prod_planLevel}    get list Items    ${budgetBreakdown_planLevelDropdown}
    switch browser    ${stage}
    ${stage_planLevelSelected}    get text    ${budgetBreakdown_planLevelDropdown_selectedOption}
    @{stage_planLevel}    get list Items    ${budgetBreakdown_planLevelDropdown}
    Run Keyword And Continue On Failure    run keyword if    @{stage_planLevel} !=@{prod_planLevel}    fail    ${userName}_${user_num} BudgetBreakdown ${stage_criteria}_planLevels Diff !
    return from keyword if    @{stage_planLevel} !=@{prod_planLevel}
    : FOR    ${planLevel}    IN    @{stage_planLevel}
    \    run keyword if    '${planLevel}' != '${prod_planLevelSelected}'    switch browser    ${prod}
    \    run keyword if    '${planLevel}' != '${prod_planLevelSelected}'    select from list by label    ${budgetBreakdown_planLevelDropdown}    ${planLevel}
    \    run keyword if    '${planLevel}' != '${stage_planLevelSelected}'    switch browser    ${stage}
    \    run keyword if    '${planLevel}' != '${stage_planLevelSelected}'    select from list by label    ${budgetBreakdown_planLevelDropdown}    ${planLevel}
    \    compareBBTimeRange    ${prod}    ${stage}    ${prod_criteria}    ${stage_criteria}    ${userName}
    \    ...    ${user_num}    ${planLevel}    ${visibleFlag}
    switch browser    ${prod}
    click element    ${ZK_Button_Close}
    switch browser    ${stage}
    click element    ${ZK_Button_Close}

compareBBTimeRange
    [Arguments]    ${prod}    ${stage}    ${prod_criteria}    ${stage_criteria}    ${userName}    ${user_num}
    ...    ${planLevel}    ${visibleFlag}
    switch browser    ${prod}
    ${prod_time}    execute javascript    ${budgetBreakdown_timeRangeOptions_jquery}
    ${prod_BB}    ZKPageWithoutRandom    ${ZK_optionPage_jquery}
    switch browser    ${stage}
    ${stage_time}    execute javascript    ${budgetBreakdown_timeRangeOptions_jquery}
    ${stage_BB}    ZKPageWithoutRandom    ${ZK_optionPage_jquery}
    ${BB_diff}    run keyword if    '${prod_time}' != '${stage_time}'    diff text    ${prod_BB}    ${stage_BB}
    Run Keyword And Continue On Failure    run keyword if    '${prod_time}' != '${stage_time}' and ${BB_diff}    fail    ${userName}_${user_num} BudgetBreakdown ${stage_criteria}_${planLevel} FirstPage Diff !
    run keyword if    '${prod_time}' != '${stage_time}' and ${BB_diff}    write html ZK sheet with inner html    ${stage_BB}    ${prod_BB}    ${diff_dir}\\${userName}_${User_num}_BB_${stage_criteria}_${planLevel}_FirstPage_diff.html    H
    return from keyword if    '${prod_time}' != '${stage_time}' and ${BB_diff}
    @{timeRange}    split string    ${stage_time}    ;
    : FOR    ${time}    IN    @{timeRange}
    \    run keyword unless    '${time}'    return from keyword
    \    ${timeSelecting_path}    replace string    ${budgetBreakdown_timeRangeOption_optionPH}    option    ${time}
    \    switch browser    ${prod}
    \    click element    ${budgetBreakdown_timeRangeDropdown}
    \    wait until page contains element    ${timeSelecting_path}    20
    \    click element    ${timeSelecting_path}
    \    click element    ${budgetBreakdown_button_view}
    \    sleep    3S
    \    wait until element contains    ${ZK_tabsSelected}    ${time}    120
    \    wait until page contains element    ${ZK_Button_retail$}    20
    \    ${prod_btn_status}    get element attribute    ${ZK_Button_retail$}@disable
    \    run keyword if    '${prod_btn_status}'    log    ${prod_btn_status}
    \    ...    ELSE    click element    ${ZK_Button_retail$}
    \    ${prod_btn_status}    get element attribute    ${ZK_Button_retail$}@disable
    \    run keyword if    '${prod_btn_status}'    log    ${prod_btn_status}
    \    ...    ELSE    click element    ${ZK_Button_retail$}
    \    sleep    3S
    \    switch browser    ${stage}
    \    click element    ${budgetBreakdown_timeRangeDropdown}
    \    wait until page contains element    ${timeSelecting_path}    20
    \    click element    ${timeSelecting_path}
    \    click element    ${budgetBreakdown_button_view}
    \    sleep    3S
    \    wait until element contains    ${ZK_tabsSelected}    ${time}    120
    \    wait until page contains element    ${ZK_Button_retail$}    20
    \    ${stage_btn_status}    get element attribute    ${ZK_Button_retail$}@disable
    \    run keyword if    '${stage_btn_status}'    log    ${stage_btn_status}
    \    ...    ELSE    click element    ${ZK_Button_retail$}
    \    ${stage_btn_status}    get element attribute    ${ZK_Button_retail$}@disable
    \    run keyword if    '${stage_btn_status}'    log    ${stage_btn_status}
    \    ...    ELSE    click element    ${ZK_Button_retail$}
    \    sleep    3S
    \    compareBBDetail    ${prod}    ${stage}    ${prod_criteria}    ${stage_criteria}    ${userName}
    \    ...    ${user_num}    ${planLevel}    ${time}    Retail$    ${visibleFlag}
    \    switch browser    ${prod}
    \    wait until page contains element    ${ZK_Button_sales%}    20
    \    ${prod_btn_status}    get element attribute    ${ZK_Button_sales%}@disable
    \    run keyword if    '${prod_btn_status}'    log    ${prod_btn_status}
    \    ...    ELSE    click element    ${ZK_Button_sales%}
    \    ${prod_btn_status}    get element attribute    ${ZK_Button_sales%}@disable
    \    run keyword if    '${prod_btn_status}'    log    ${prod_btn_status}
    \    ...    ELSE    click element    ${ZK_Button_sales%}
    \    sleep    3S
    \    switch browser    ${stage}
    \    wait until page contains element    ${ZK_Button_sales%}    20
    \    ${stage_btn_status}    get element attribute    ${ZK_Button_sales%}@disable
    \    run keyword if    '${stage_btn_status}'    log    ${stage_btn_status}
    \    ...    ELSE    click element    ${ZK_Button_sales%}
    \    ${stage_btn_status}    get element attribute    ${ZK_Button_sales%}@disable
    \    run keyword if    '${stage_btn_status}'    log    ${stage_btn_status}
    \    ...    ELSE    click element    ${ZK_Button_sales%}
    \    sleep    3S
    \    compareBBDetail    ${prod}    ${stage}    ${prod_criteria}    ${stage_criteria}    ${userName}
    \    ...    ${user_num}    ${planLevel}    ${time}    Sales%    ${visibleFlag}

compareBBDetail
    [Arguments]    ${prod}    ${stage}    ${prod_criteria}    ${stage_criteria}    ${userName}    ${user_num}
    ...    ${planLevel}    ${time}    ${viewPoint}    ${visibleFlag}
    switch browser    ${prod}
    ${prod_tab}    ZKPageWithoutRandom    ${ZK_optionPage_jquery}
    click element    ${ZK_Button_Excel}
    ${prod_excel}    handleSaveFileWindow    ${prod_download_dir}    BB_${userName}_${user_num}_${stage_criteria}_${planLevel}_${time}_${viewPoint}.xlsx
    ${prod_excel_visible}    run keyword if    '${visibleFlag}'=='1'    copy ZK Visible XLSX    ${prod_excel}
    click element    ${ZK_Button_Options}
    wait until page contains    Select Attribute/Grouped Columns to Display    20
    ${prod_option}    ZKPageWithoutRandom    ${ZK_optionPage_jquery}
    click element    ${ZK_Button_Options}
    Wait Until Page Contains    Display in Budget Breakdown Plan    120
    switch browser    ${stage}
    ${stage_tab}    ZKPageWithoutRandom    ${ZK_optionPage_jquery}
    click element    ${ZK_Button_Excel}
    ${stage_excel}    handleSaveFileWindow    ${stage_download_dir}    BB_${userName}_${user_num}_${stage_criteria}_${planLevel}_${time}_${viewPoint}.xlsx
    ${stage_excel_visible}    run keyword if    '${visibleFlag}'=='1'    copy ZK Visible XLSX    ${stage_excel}
    click element    ${ZK_Button_Options}
    wait until page contains    Select Attribute/Grouped Columns to Display    20
    ${stage_option}    ZKPageWithoutRandom    ${ZK_optionPage_jquery}
    click element    ${ZK_Button_Options}
    Wait Until Page Contains    Display in Budget Breakdown Plan    120
    ${option_diff}    diff text    ${prod_option}    ${stage_option}
    ${tab_diff}    diff text    ${prod_tab}    ${stage_tab}
    Run Keyword And Continue On Failure    run keyword if    '${visibleFlag}'=='1'    compare XLSX    ${stage_excel_visible}    ${prod_excel_visible}    ${diff_dir}\\${userName}_${user_num}_BB_${stage_criteria}_${planLevel}_${time}_${viewPoint}_downloadVisible_Diff.txt
    ...    ELSE    compare XLSX    ${stage_excel}    ${prod_excel}    ${diff_dir}\\${userName}_${user_num}_BB_${stage_criteria}_${planLevel}_${time}_${viewPoint}_download_Diff.txt
    Run Keyword And Continue On Failure    run keyword if    ${option_diff}    fail    ${userName}_${user_num}_BB_${stage_criteria}_${planLevel}_${time}_${viewPoint}_optionsPage Diff !
    run keyword if    ${option_diff}    write html ZK sheet with inner html    ${stage_option}    ${prod_option}    ${diff_dir}\\${userName}_${User_num}_BB_${stage_criteria}_${planLevel}_${time}_${viewPoint}_optionsPage_diff.html    H
    Run Keyword And Continue On Failure    run keyword if    ${tab_diff}    fail    ${userName}_${user_num}_BB_${stage_criteria}_${planLevel}_${time}_${viewPoint}_tabPage Diff !
    run keyword if    ${tab_diff}    write html ZK sheet with inner html    ${stage_tab}    ${prod_tab}    ${diff_dir}\\${userName}_${User_num}_BB_${stage_criteria}_${planLevel}_${time}_${viewPoint}_tabPage_diff.html    H

compareBudgetBreakdownCriteria_tmp
    [Arguments]    ${prod}    ${stage}    ${prod_count}    ${stage_count}    ${userName}    ${user_num}
    ...    ${visibleFlag}
    ${cnt}    run keyword if    ${prod_count} > ${stage_count}    evaluate    ${prod_count}
    ...    ELSE    evaluate    ${stage_count}
    : FOR    ${num}    IN RANGE    1    ${cnt}+1
    \    ${num}    convert to string    ${num}
    \    ${expand}    replace string    ${budgetBreakdown_list_criteriaExpand_numPH}    num    ${num}
    \    switch browser    ${prod}
    \    ${prod_criteria}    get text    ${expand}/parent::td
    \    run keyword if    ${num}>1    click element    ${expand}
    \    switch browser    ${stage}
    \    ${stage_criteria}    get text    ${expand}/parent::td
    \    run keyword if    ${num}>1    click element    ${expand}
    \    compareBBPlanLevel_tmp    ${prod}    ${stage}    ${prod_criteria}    ${stage_criteria}    ${userName}
    \    ...    ${user_num}    ${visibleFlag}    ${num}    ${expand}

compareBBPlanLevel_tmp
    [Arguments]    ${prod}    ${stage}    ${prod_criteria}    ${stage_criteria}    ${userName}    ${user_num}
    ...    ${visibleFlag}    ${num}    ${expand}
    ${planLevel_count}    get matching xpath count    ${budgetBreakdown_list_planLevelCount}
    ${planLevel_linkPath_countPH}    replace string    ${budgetBreakdown_list_planLevelLink_numCountPH}    num    ${num}
    : FOR    ${cnt}    IN RANGE    1    ${planLevel_count}+1
    \    ${cnt}    convert to string    ${cnt}
    \    ${planLevel_linkPath}    replace string    ${planLevel_linkPath_countPH}    count    ${cnt}
    \    switch browser    ${prod}
    \    run keyword if    ${cnt} >1    click element    ${expand}
    \    ${prod_planLevel}    get text    ${planLevel_linkPath}/parent::td/preceding-sibling::td[1]
    \    click element    ${planLevel_linkPath}
    \    sleep    5S
    \    Wait Until Page Contains    Display in Budget Breakdown Plan    600
    \    sleep    5S
    \    switch browser    ${stage}
    \    run keyword if    ${cnt} >1    click element    ${expand}
    \    ${stage_planLevel}    get text    ${planLevel_linkPath}/parent::td/preceding-sibling::td[1]
    \    click element    ${planLevel_linkPath}
    \    sleep    5S
    \    Wait Until Page Contains    Display in Budget Breakdown Plan    600
    \    sleep    5S
    \    Run Keyword And Continue On Failure    run keyword if    '${stage_planLevel}' != '${prod_planLevel}'    fail    ${userName}_${user_num}_BB_${stage_criteria}_planLevel Diff !
    \    run keyword if    '${stage_planLevel}' == '${prod_planLevel}'    compareBBTimeRange    ${prod}    ${stage}    ${prod_criteria}
    \    ...    ${stage_criteria}    ${userName}    ${user_num}    ${stage_planLevel}    ${visibleFlag}
    \    switch browser    ${prod}
    \    click element    ${ZK_Button_Close}
    \    Wait Until Page Contains element    ${expand}    20
    \    switch browser    ${stage}
    \    click element    ${ZK_Button_Close}
    \    Wait Until Page Contains element    ${expand}    20

loadTestingDTEditCell
    [Arguments]    ${receiverString}
    @{receiverList}    split string    ${receiverString}    ;
    : FOR    ${receiver}    IN    @{receiverList}
    \    @{receiverInfo}    split string    ${receiver}    ,
    \    ${row}    convert to integer    @{receiverInfo}[0]
    \    ${row}    evaluate    ${row}+1
    \    execute javascript    $(".zsscroll").scrollTop(${row}*20-700)
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    600
    \    ${row}    convert to string    ${row}
    \    ${editCellTab}    replace string    ${DailyTasks_Button_Edit_rowPH}    row    ${row}
    \    ${editCellcount}    replace string    ${editCellTab}    Xpath=//    //
    \    click element    ${editCellTab}
    \    sleep    20S
    \    ${editCount}    get matching xpath count    ${editCellcount}
    \    run keyword if    ${editCount}>0    click element    ${editCellTab}
    \    sleep    5S
    \    Wait Until Page Does Not Contain    Processing...    600
    \    ${editCount}    get matching xpath count    ${editCellcount}
    \    run keyword if    ${editCount}>0    click element    ${editCellTab}
    \    sleep    5S
    \    Wait Until Page Does Not Contain    Processing...    600
    \    Wait Until Element Contains    ${DailyTasks_tab_selected}    Detail by Style Color Size    60
    \    sleep    5S
    \    execute javascript    $(".zsscroll").scrollTop(0)
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    600
    \    sleep    5S
    \    ${openStockSize}    execute javascript    ${ZK_DailyTask_loadTestingParam_openStockSizeValue_jquery}
    \    ${prepackTotal}    execute javascript    ${ZK_DailyTask_loadTestingParam_prepackTotalValue_jquery}
    \    @{openStockSizeList}    run keyword if    '${openStockSize}'    split string    ${openStockSize}    ;
    \    @{openStockSizeInfo}    run keyword if    '${openStockSize}'    split string    @{openStockSizeList}[0]    /
    \    @{prepackTotalList}    run keyword if    '${prepackTotal}'    split string    ${prepackTotal}    ;
    \    @{prepackTotalInfo}    run keyword if    '${prepackTotal}'    split string    @{prepackTotalList}[0]    /
    \    run keyword if    '${openStockSize}'    exit for loop
    \    click element    Xpath=${DailyTasks_tabsCount}[3]
    \    sleep    5S
    \    Wait Until Page Does Not Contain    Processing...    600
    \    Wait Until Page Contains Element    ${DailyTasks_tab_selected}    60
    \    Wait Until Element Contains    ${DailyTasks_tab_selected}    Detail by Color by Door    20
    \    sleep    5S
    ${DTEditCell}    run keyword if    '${openStockSize}' and '${prepackTotal}'    set variable    @{receiverInfo}[0],@{openStockSizeInfo}[1],@{openStockSizeInfo}[2],@{openStockSizeInfo}[3],@{openStockSizeInfo}[4],@{openStockSizeInfo}[5],@{prepackTotalInfo}[1],@{prepackTotalInfo}[2],@{prepackTotalInfo}[3],@{prepackTotalInfo}[4],@{prepackTotalInfo}[5]
    ...    ELSE IF    '${openStockSize}' and '${prepackTotal}' ==''    set variable    @{receiverInfo}[0],@{openStockSizeInfo}[1],@{openStockSizeInfo}[2],@{openStockSizeInfo}[3],@{openStockSizeInfo}[4],@{openStockSizeInfo}[5], , , , ,
    ...    ELSE IF    '${openStockSize}' =='' and '${prepackTotal}'    set variable    @{receiverInfo}[0], , , , , ,@{prepackTotalList}[1],@{prepackTotalList}[2],@{prepackTotalList}[3]
    ...    ELSE    set variable    , , , , , , , , , ,
    [Return]    ${DTEditCell}

loadDoorInventory
    [Arguments]    @{doorRowList}
    ${DoorRowListSize}    get length    ${doorRowList}
    : FOR    ${num}    IN RANGE    0    ${DoorRowListSize}
    \    run keyword if    ${num} != 0    click element    ${DailyTasks_Button_Filter}
    \    run keyword if    ${num} != 0    sleep    3S
    \    run keyword if    ${num} != 0    Wait Until Element Is Visible    ${DailyTasks_Transfer_Panel_FilterBtn}    60
    \    run keyword if    ${num} != 0    select from list by index    ${DailyTasks_Transfer_Panel_Dropdown_DC/Store}    0
    \    run keyword if    ${num} != 0    click element    ${DailyTasks_Transfer_Panel_FilterBtn}
    \    run keyword if    ${num} != 0    sleep    3S
    \    run keyword if    ${num} != 0    Wait Until Element Is not Visible    ${DailyTasks_Transfer_Panel_FilterBtn}    60
    \    run keyword if    ${num} != 0    Wait Until Page Does Not Contain    Processing...    40
    \    run keyword if    ${num} != 0    sleep    3S
    \    @{currentBtnInfo}    split string    @{doorRowList}[${num}]    /;
    \    ${currenBtnRow}    evaluate    @{currentBtnInfo}[0]+1
    \    ${addDoorBtn_path}    replace string    ${DailyTasks_Transfer_Button_+Stores_rowPH}    [row]    [${currenBtnRow}]
    \    ${addDoorBtn_countPath}    replace string    ${addDoorBtn_path}    Xpath=    ${EMPTY}
    \    #    ${addDoorBtn_X}    Get Horizontal Position    ${addDoorBtn_path}
    \    ${addDoorBtn_Y}    Get Vertical Position    ${addDoorBtn_path}
    \    click element    ${addDoorBtn_path}
    \    sleep    3S
    \    ${addDoorBtn_count}    get matching xpath count    ${addDoorBtn_countPath}
    \    run keyword if    ${addDoorBtn_count} > 0    click element    ${addDoorBtn_path}
    \    run keyword if    ${addDoorBtn_count} > 0    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    40
    \    Wait Until Page Contains    DC/Store #    60
    \    sleep    3S
    \    ${invDoorInfo}    execute javascript    ${ZK_DailyTasks_Transfer_invDoorInfo_jquery}
    \    click element    ${ZK_Button_Close}
    \    #    sleep    3S
    \    Wait Until Page Contains element    ${DailyTasks_tab_selected}    120
    \    Wait Until Page Does Not Contain    Processing...    120
    \    sleep    3S
    \    Wait Until element Contains    ${DailyTasks_tab_selected}    Detail by Style Color Size    30
    \    exit for loop if    '${invDoorInfo}'
    \    #    ${preRow_tmp}    set variable    ${row}
    ${preNum}    run keyword if    '${invDoorInfo}' and ${num} >0    evaluate    ${num}-1
    ...    ELSE IF    '${invDoorInfo}' and ${num} ==0    set variable    ${num}    #    @{preBtn}
    ...    # run keyword if    '${invDoorInfo}' and ${num} >0    split string    @{doorRowList}[${preNum}]    /    #
    ...    # ${preBtn_nofilter_position}    run keyword if    '${invDoorInfo}' and ${num} >0    execute javascript    $(".zsblock").children("div:contains(@{preBtn}[1])").index()    #
    ...    # ${preRow}    run keyword if    ${num}== 0 and '${invDoorInfo}'    set variable    @{currentBtnInfo}[0]    # ELSE IF
    ...    # ${num}<${DoorRowListSize} and '${invDoorInfo}' and ${num}>0    set variable    ${preBtn_nofilter_position}
    ${doorInfo}    run keyword if    '${invDoorInfo}'    set variable    @{doorRowList}[${preNum}]/}@{doorRowList}[${num}]/;${addDoorBtn_Y}/}${invDoorInfo}
    [Return]    ${doorInfo}

LoadEditBtnRowInfo
    [Arguments]    ${stylesCount}    @{editBtnRow}
    : FOR    ${editRow}    IN    @{editBtnRow}
    \    ${editBtn_Row}    execute javascript    return($(".zsblock").children("div:contains(${editRow})").index());
    \    ${editBtn_topPosition}    execute javascript    return($(".zsblock").children("div:contains(${editRow})").offset().top);
    \    ${editBtnInfo}    set variable    ${editBtn_Row},${editBtn_topPosition}
    \    ${editBtn_Row}    evaluate    ${editBtn_Row}+1
    \    ${editBtn_path}    replace string    ${DailyTasks_Button_Edit_rowPH}    [row]    [${editBtn_Row}]
    \    ${editBtn_countPath}    replace string    ${editBtn_path}    Xpath=    ${EMPTY}
    \    click element    ${editBtn_path}
    \    sleep    3S
    \    ${editBtn_count}    get matching xpath count    ${editBtn_countPath}
    \    run keyword if    ${editBtn_count}>0    click element    ${editBtn_path}
    \    run keyword if    ${editBtn_count}>0    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    40
    \    Wait Until Page Contains Element    ${DailyTasks_tab_selected}    60
    \    Wait Until Element Contains    ${DailyTasks_tab_selected}    Detail by Style Color Size    20
    \    sleep    3S
    \    click element    ${DailyTasks_Button_Filter}
    \    sleep    3S
    \    Wait Until Element Is Visible    ${DailyTasks_Transfer_Panel_FilterBtn}    60
    \    select from list by index    ${DailyTasks_Transfer_Panel_Dropdown_DC/Store}    0
    \    Capture Page Screenshot
    \    click element    ${DailyTasks_Transfer_Panel_FilterBtn}
    \    sleep    3S
    \    Wait Until Element Is not Visible    ${DailyTasks_Transfer_Panel_FilterBtn}    60
    \    Wait Until Page Does Not Contain    Processing...    40
    \    sleep    3S
    \    ${doorRowStr}    execute javascript    ${ZK_DailyTasks_Transfer_addStoreBtnRow_jquery}
    \    @{doorRowList}    split string    ${doorRowStr}    ,
    \    ${doorInfoStr}    loadDoorInventory    @{doorRowList}
    \    Wait Until Element Is Visible    ${DailyTasks_Button_Filter}    30
    \    click element    ${DailyTasks_Button_Filter}
    \    Wait Until Element Is Visible    ${DailyTasks_Transfer_Panel_FilterBtn}    30
    \    click element    ${DailyTasks_Transfer_Panel_FilterBtn}
    \    sleep    3S
    \    Wait Until Element Is not Visible    ${DailyTasks_Transfer_Panel_FilterBtn}    60
    \    Wait Until Page Does Not Contain    Processing...    40
    \    sleep    3S
    \    @{infoList}    run keyword if    '${doorInfoStr}'    split string    ${doorInfoStr}    /}
    \    @{fromDoorList}    run keyword if    '${doorInfoStr}'    split string    @{infoList}[2]    ,
    \    @{fromDoorInfo}    run keyword if    '${doorInfoStr}'    split string    @{fromDoorList}[0]    /
    \    @{toDoorList}    run keyword if    '${doorInfoStr}'    split string    @{infoList}[3]    ,
    \    @{addDoorRow}    run keyword if    '${doorInfoStr}'    split string    @{infoList}[1]    /;
    \    @{preAddDoorRow}    run keyword if    '${doorInfoStr}'    split string    @{infoList}[0]    /;
    \    ${ZK_DailyTasks_Transfer_modifyQtyRow_jquery}    replace string    ${ZK_DailyTasks_Transfer_modifyQtyRow_jquery_preBtnPH_btnPH}    <btn}    @{addDoorRow}[1]
    \    ${ZK_DailyTasks_Transfer_modifyQtyRow_jquery}    replace string    ${ZK_DailyTasks_Transfer_modifyQtyRow_jquery}    <preBtn}    @{preAddDoorRow}[1]
    \    ${modifyRowStr}    execute javascript    ${ZK_DailyTasks_Transfer_modifyQtyRow_jquery}
    \    ${addDoorRow_nofilter_position}    run keyword if    '${doorInfoStr}'    execute javascript    return ($(".zsblock").children("div:contains(@{addDoorRow}[1])").index())
    \    ${preAddDoorRow_nofilter_position}    run keyword if    '${doorInfoStr}'    execute javascript    return ($(".zsblock").children("div:contains(@{preAddDoorRow}[1])").index())
    \    ${modifyRowInfo}    run keyword if    '${doorInfoStr}' and '${modifyRowStr}' == '${None}' or '${modifyRowStr}' == '${EMPTY}'    set variable    ${addDoorRow_nofilter_position}
    \    ...    ELSE IF    '${doorInfoStr}' and '${modifyRowStr}'    loadModifyRowInfo    ${preAddDoorRow_nofilter_position}    ${addDoorRow_nofilter_position}
    \    ...    @{fromDoorInfo}[1]    ${modifyRowStr}
    \    ${modifyRowInfoStr}    run keyword if    '${doorInfoStr}'    convert to string    ${modifyRowInfo}
    \    run keyword if    '${doorInfoStr}'    writeZKLoadTestingParamForTransfer    ${userName}    ${password}    userName,passwd,addStyleCount,editRowNum,editRow_Y,addDoorRow,addDoor_Y,fromDoor,toDoor,modifyRow,fromDoorSize
    \    ...    ${stylesCount}    ${editBtnInfo}    ${modifyRowInfoStr}    @{addDoorRow}[0],@{addDoorRow}[2]    @{fromDoorInfo}[0]
    \    ...    @{toDoorList}[0]    @{infoList}[4]    ${ZKLoadTestingParam_Transfer_dir}
    \    exit for loop if    '${doorInfoStr}'

loadModifyRowInfo
    [Arguments]    ${preBtnRow}    ${currentBtnRow}    ${fromDoor}    ${modifyRowStrList}
    ${fromDoorNum}    fetch from left    ${fromDoor}    -
    @{modifyRowList}    split string    ${modifyRowStrList}    ,
    : FOR    ${modifyRowInfo}    IN    @{modifyRowList}
    \    @{modifyRow}    split string    ${modifyRowInfo}    /
    \    ${modifyDoorNum}    fetch from left    @{modifyRow}[0]    ${SPACE}
    \    ${modifyAtPre}    comprareStringToSortByAscending    ${fromDoorNum}    ${modifyDoorNum}
    \    #    ${modifyRowNum}    convert to integer    @{modifyRow}[1]
    \    #    ${rowNum}    run keyword if    @{modifyRow}[1]< ${preBtnRow} and ${preBtnRow} < ${currentBtnRow}    set variable    @{modifyRow}[1]
    \    ...    # ELSE IF    @{modifyRow}[1]>${currentBtnRow}    evaluate    @{modifyRow}[1]+1    # ELSE IF
    \    ...    # @{modifyRow}[1]<${currentBtnRow} and @{modifyRow}[1]> ${preBtnRow} and ${modifyAtPre}    set variable    @{modifyRow}[1]    # ELSE IF    @{modifyRow}[1]<${currentBtnRow} and @{modifyRow}[1]> ${preBtnRow} and not (${modifyAtPre})
    \    ...    # evaluate    @{modifyRow}[1]+1    # ELSE IF    @{modifyRow}[1]<${currentBtnRow} and ${preBtnRow} == ${currentBtnRow} and ${modifyAtPre}    set variable
    \    ...    # @{modifyRow}[1]    # ELSE IF    @{modifyRow}[1]<${currentBtnRow} and ${preBtnRow} == ${currentBtnRow} \ and not (${modifyAtPre})    evaluate    @{modifyRow}[1]+1
    \    ${rowNum}    run keyword if    ${modifyAtPre}    set variable    @{modifyRow}[1]
    \    exit for loop if    '${rowNum}'
    ${adjustRow}    run keyword if    '${rowNum}' == '${None}'    evaluate    @{modifyRow}[1]+1
    ...    ELSE    set variable    ${rowNum}
    [Return]    ${adjustRow}

compareAMDoorInfoTabs
    [Arguments]    ${compareDoorsCount}    ${prod}    ${stage}    ${userName}    ${user_num}    ${visibleFlag}
    ${initNum}    set variable    1
    ${doorTotal}    get matching xpath count    ${AssortmentMix_TargetDoors_link_doorCount}
    ${firstDoorCol}    execute javascript    ${AssortmentMix_TargetDoors_link_firstCol_jquery}
    ${prod_scrollPosition}    set variable    0
    ${stage_scrollPosition}    set variable    0
    ${step}    evaluate    ${doorTotal}/${compareDoorsCount}
    : FOR    ${compareNum}    IN RANGE    0    ${compareDoorsCount}
    \    #    ${scrollPosition}    evaluate    1760*(${compareNum}+1)
    \    ${doorStep}    evaluate    ${step}*(${compareNum} +1)
    \    ${num}    evaluate    random.randint(${initNum},${doorStep})    random
    \    ${preDoorNum}    evaluate    ${num}+${firstDoorCol}-1
    \    ${doorNum}    evaluate    ${num}+${firstDoorCol}
    \    ${doorPath}    replace string    ${AssortmentMix_TargetDoors_link_door_colPH}    [col]    [${doorNum}]
    \    switch browser    ${prod}
    \    sleep    3S
    \    ${prod_doorPosition}    run keyword and continue on Failure    Get Horizontal Position    ${doorPath}
    \    ${prod_scrollPosition}    run keyword if    ${prod_doorPosition} == ${NONE}    evaluate    ${prod_scrollPosition}+1760
    \    ...    ELSE    set variable    ${prod_scrollPosition}
    \    run keyword if    ${prod_doorPosition} == ${NONE}    execute javascript    $(".zsscroll").scrollLeft(${prod_scrollPosition})
    \    run keyword if    ${prod_doorPosition} == ${NONE}    sleep    3S
    \    run keyword if    ${prod_doorPosition} == ${NONE}    Wait Until Page Does Not Contain    Processing...    100
    \    run keyword if    ${prod_doorPosition} == ${NONE}    wait until element is visible    ${doorPath}    30
    \    ${prod_doorPosition_tmp}    run keyword if    ${prod_doorPosition} == ${NONE}    Get Horizontal Position    ${doorPath}
    \    ...    ELSE    set variable    ${prod_doorPosition}
    \    ${prod_doorPosition}    run keyword if    ${prod_doorPosition} == ${NONE}    evaluate    ${prod_doorPosition_tmp}+${prod_scrollPosition}
    \    ...    ELSE    set variable    ${prod_doorPosition}
    \    ${prod_doorWidth}    execute javascript    return $(".zstopblock").children("div:eq(1)").children("div:eq(${preDoorNum})").width()
    \    ${prod_doorPosition}    evaluate    ${prod_doorPosition}-${prod_doorWidth}
    \    execute javascript    $(".zsscroll").scrollLeft(${prod_doorPosition})
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    100
    \    wait until element is visible    ${doorPath}    30
    \    ${prod_doorTxt}    get text    ${doorPath}
    \    click element    ${doorPath}
    \    run keyword and continue on Failure    click element    ${doorPath}
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    100
    \    wait until element contains    ${ZK_tabsSelected}    ${prod_doorTxt}    30
    \    #    ${prod_doorPage}    execute javascript    ${ZK_optionPage_jquery}
    \    #    ${prod_doorPage}    replace string using regexp    ${prod_doorPage}    id="(.*?)"    ${EMPTY}
    \    ...    # -1
    \    #    ${prod_doorPage}    remove string using regexp    ${prod_doorPage}    for="(.*?)"
    \    #    ${prod_doorPage}    replace string using regexp    ${prod_doorPage}    href="(.*?)"    ${EMPTY}
    \    ...    # -1
    \    #    ${prod_doorPage}    replace string using regexp    ${prod_doorPage}    src="(.*?)"    ${EMPTY}
    \    ...    # -1
    \    click element    ${ZK_Button_Options}
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    100
    \    wait until page contains    Select Columns to Display    60
    \    ${prod_optionsrPage}    execute javascript    ${ZK_optionPage_jquery}
    \    ${prod_optionsrPage}    replace string using regexp    ${prod_optionsrPage}    id="(.*?)"    \    -1
    \    ${prod_optionsrPage}    remove string using regexp    ${prod_optionsrPage}    for="(.*?)"
    \    ${prod_optionsrPage}    replace string using regexp    ${prod_optionsrPage}    href="(.*?)"    \    -1
    \    ${prod_optionsrPage}    replace string using regexp    ${prod_optionsrPage}    src="(.*?)"    \    -1
    \    click element    ${ZK_Button_Close}
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    100
    \    wait until element contains    ${ZK_tabsSelected}    ${prod_doorTxt}    30
    \    switch browser    ${stage}
    \    sleep    3S
    \    ${stage_doorPosition}    run keyword and continue on Failure    Get Horizontal Position    ${doorPath}
    \    ${stage_scrollPosition}    run keyword if    ${stage_doorPosition} == ${NONE}    evaluate    ${stage_scrollPosition}+1760
    \    ...    ELSE    set variable    ${stage_scrollPosition}
    \    run keyword if    ${stage_doorPosition} == ${NONE}    execute javascript    $(".zsscroll").scrollLeft(${stage_scrollPosition})
    \    run keyword if    ${stage_doorPosition} == ${NONE}    sleep    3S
    \    run keyword if    ${stage_doorPosition} == ${NONE}    Wait Until Page Does Not Contain    Processing...    100
    \    run keyword if    ${stage_doorPosition} == ${NONE}    wait until element is visible    ${doorPath}    30
    \    ${stage_doorPosition_tmp}    run keyword if    ${stage_doorPosition} == ${NONE}    Get Horizontal Position    ${doorPath}
    \    ...    ELSE    set variable    ${stage_doorPosition}
    \    ${stage_doorPosition}    run keyword if    ${stage_doorPosition} == ${NONE}    evaluate    ${stage_doorPosition_tmp}+${stage_scrollPosition}
    \    ...    ELSE    set variable    ${stage_doorPosition}
    \    ${stage_doorWidth}    execute javascript    return $(".zstopblock").children("div:eq(1)").children("div:eq(${preDoorNum})").width()
    \    ${stage_doorPosition}    evaluate    ${stage_doorPosition}-${stage_doorWidth}
    \    execute javascript    $(".zsscroll").scrollLeft(${stage_doorPosition})
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    100
    \    wait until element is visible    ${doorPath}    30
    \    ${stage_doorTxt}    get text    ${doorPath}
    \    click element    ${doorPath}
    \    run keyword and continue on Failure    run keyword if    ${compareNum} ==0    click element    ${doorPath}
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    100
    \    wait until element contains    ${ZK_tabsSelected}    ${stage_doorTxt}    30
    \    #    ${stage_doorPage}    execute javascript    ${ZK_optionPage_jquery}
    \    #    ${stage_doorPage}    replace string using regexp    ${stage_doorPage}    id="(.*?)"    ${EMPTY}
    \    ...    # -1
    \    #    ${stage_doorPage}    remove string using regexp    ${stage_doorPage}    for="(.*?)"
    \    #    ${stage_doorPage}    replace string using regexp    ${stage_doorPage}    href="(.*?)"    ${EMPTY}
    \    ...    # -1
    \    #    ${stage_doorPage}    replace string using regexp    ${stage_doorPage}    src="(.*?)"    ${EMPTY}
    \    ...    # -1
    \    click element    ${ZK_Button_Options}
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    100
    \    wait until page contains    Select Columns to Display    60
    \    ${stage_optionsrPage}    execute javascript    ${ZK_optionPage_jquery}
    \    ${stage_optionsrPage}    replace string using regexp    ${stage_optionsrPage}    id="(.*?)"    \    -1
    \    ${stage_optionsrPage}    remove string using regexp    ${stage_optionsrPage}    for="(.*?)"
    \    ${stage_optionsrPage}    replace string using regexp    ${stage_optionsrPage}    href="(.*?)"    \    -1
    \    ${stage_optionsrPage}    replace string using regexp    ${stage_optionsrPage}    src="(.*?)"    \    -1
    \    click element    ${ZK_Button_Close}
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    100
    \    wait until element contains    ${ZK_tabsSelected}    ${stage_doorTxt}    30
    \    ${optionsPage_diff}    diff text    ${prod_optionsrPage}    ${stage_optionsrPage}
    \    Run Keyword And Continue On Failure    run keyword if    ${optionsPage_diff}    fail    ${userName}_${user_num} AM doorInfo_options ${stage_doorTxt} \ Diff !
    \    run keyword if    ${optionsPage_diff}    write html file with inner html    ${stage_optionsrPage}    ${prod_optionsrPage}    ${diff_dir}\\${userName}_${User_num}_AM_doorInfoOptionsPage_${stage_doorTxt}_diff.html
    \    ...    V
    \    #    ${doorInfoPage_diff}    diff text    ${prod_doorPage}    ${stage_doorPage}
    \    #    Run Keyword And Continue On Failure    run keyword if    ${doorInfoPage_diff}    fail    ${userName}_${user_num} AM doorInfo ${stage_doorTxt} Diff !
    \    #    run keyword if    ${optionsPage_diff}    write html file with inner html    ${stage_doorPage}    ${prod_doorPage}
    \    ...    # ${diff_dir}\\${userName}_${User_num}_AM_doorInfoPage_${stage_doorTxt}_diff.html    H
    \    ${initNum}    evaluate    ${doorStep}+1
    \    #    continue for loop if    ${doorInfoPage_diff}
    \    switch browser    ${prod}
    \    click element    ${AssortmentMix_Button_Excel}
    \    ${prod_AMDoorInfo_excel}    handleSaveFileWindow    ${prod_download_dir}    AM_doorInfo_${prod_doorTxt}_${userName}_${user_num}.xlsx
    \    ${prod_AMDoorInfo_excel_visible}    run keyword if    '${visibleFlag}'=='1'    copy ZK Visible XLSX    ${prod_AMDoorInfo_excel}
    \    switch browser    ${stage}
    \    click element    ${AssortmentMix_Button_Excel}
    \    ${stage_AMDoorInfo_excel}    handleSaveFileWindow    ${stage_download_dir}    AM_doorInfo_${stage_doorTxt}_${userName}_${user_num}.xlsx
    \    ${stage_AMDoorInfo_excel_visible}    run keyword if    '${visibleFlag}'=='1'    copy ZK Visible XLSX    ${stage_AMDoorInfo_excel}
    \    Run Keyword And Continue On Failure    run keyword if    '${visibleFlag}'=='1'    compare XLSX    ${stage_AMDoorInfo_excel_visible}    ${prod_AMDoorInfo_excel_visible}
    \    ...    ${diff_dir}\\${userName}_${user_num}_AMDoorInfo_${stage_doorTxt}_downloadVisible_Diff.txt
    \    ...    ELSE    compare XLSX    ${stage_AMDoorInfo_excel}    ${prod_AMDoorInfo_excel}    ${diff_dir}\\${userName}_${user_num}_AMDoorInfo_${stage_doorTxt}_download_Diff.txt
    \    #    run keyword if    ${stage_doorTxt} == ${prod_doorTxt}    compareScrollPageWithLeftFlag    ${prod}    ${stage}
    \    ...    # ${userName}    ${user_num}    AM    ${stage_doorTxt}    0
    \    run keyword if    ${stage_doorTxt} == ${prod_doorTxt}    compareDTScrollPage    ${prod}    ${stage}    ${userName}
    \    ...    ${user_num}    AM    ${stage_doorTxt}    V
    \    switch browser    ${prod}
    \    click element    ${AssortmentMix_tab_TargetDoors}
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    100
    \    wait until element contains    ${ZK_tabsSelected}    Target Doors    30
    \    switch browser    ${stage}
    \    click element    ${AssortmentMix_tab_TargetDoors}
    \    sleep    3S
    \    Wait Until Page Does Not Contain    Processing...    100
    \    wait until element contains    ${ZK_tabsSelected}    Target Doors    30

compareScrollPageWithLeftFlag
    [Arguments]    ${prod}    ${stage}    ${userName}    ${user_num}    ${modelName}    ${pageName}
    ...    ${leftFlag}
    : FOR    ${page_num}    IN RANGE    0    ${max_scrollPage_num}
    \    ${scroll_position}    evaluate    ${page_num}*700
    \    switch browser    ${prod}
    \    sleep    5S
    \    Wait Until Page Does Not Contain    Processing...    120
    \    #    Wait Until Page Does Not Contain    initializing...    120
    \    sleep    5S
    \    ${prod_scrollInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollTop(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    ${prod_scrollInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    ${prod_page}    execute javascript    ${ZK_optionPage_jquery}    #    ${DailyTask_Sheet_jquery}
    \    ${prod_page}    replace string using regexp    ${prod_page}    id="(.*?)"    \    -1
    \    ${prod_page}    remove string using regexp    ${prod_page}    for="(.*?)"
    \    ${prod_page}    replace string using regexp    ${prod_page}    href="(.*?)"    \    -1
    \    ${prod_page}    replace string using regexp    ${prod_page}    src="(.*?)"    \    -1
    \    #    log many    ${prod_page}
    \    switch browser    ${stage}
    \    sleep    5S
    \    Wait Until Page Does Not Contain    Processing...    120
    \    #    Wait Until Page Does Not Contain    initializing...    120
    \    sleep    5S
    \    ${stage_scrollInfo_start}    execute javascript    ${ZK_scrollInfo_jquery}
    \    execute javascript    $(".zsscroll").scrollTop(${scroll_position})
    \    Wait Until Page Does Not Contain    Processing...    20
    \    sleep    5S
    \    ${stage_scrollInfo_end}    execute javascript    ${ZK_scrollInfo_jquery}
    \    exit for loop if    '${prod_scrollInfo_start}' == '${prod_scrollInfo_end}' and '${stage_scrollInfo_start}' == '${stage_scrollInfo_end}' and ${page_num} > 0
    \    ${stage_page}    execute javascript    ${ZK_optionPage_jquery}    #    ${DailyTask_Sheet_jquery}
    \    ${stage_page}    replace string using regexp    ${stage_page}    id="(.*?)"    \    -1
    \    ${stage_page}    remove string using regexp    ${stage_page}    for="(.*?)"
    \    ${stage_page}    replace string using regexp    ${stage_page}    href="(.*?)"    \    -1
    \    ${stage_page}    replace string using regexp    ${stage_page}    src="(.*?)"    \    -1
    \    #    log many    ${stage_page}
    \    ${page_diff}    diff text    ${prod_page}    ${stage_page}
    \    Run Keyword And Continue On Failure    run keyword if    ${page_diff}    fail    ${userName}_${user_num}_${modelName}_${pageName}_${page_num} Diff !
    \    run keyword if    ${page_diff}    write html ZK sheet with inner html    ${stage_page}    ${prod_page}    ${diff_dir}\\${userName}_${User_num}_${modelName}_${pageName}_${page_num}_diff.html
    \    ...    H
    \    run keyword if    '${leftFlag}' == '1'    compareDTScrollLeftPage    ${prod}    ${stage}    ${userName}
    \    ...    ${user_num}    ${pageName}    ${page_num}    ${modelName}
